{"version":3,"sources":["webpack/bootstrap","./node_modules/@angular/common/fesm2015/http.js","./node_modules/@angular/router/router.d.ts.Éµangular_packages_router_router_l.html","./src/app/_services/additional.service.ts","./src/app/_services/authentication-service.service.ts","./src/app/_services/language.service.ts","./src/app/_services/redirects.service.ts","./src/app/_services/requests.service.ts","./src/app/admin-login/admin-login.component.html","./src/app/admin-login/admin-login.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.component.ts","./src/app/admin/advanced-admin-panel/advanced-admin-panel.component.html","./src/app/admin/advanced-admin-panel/advanced-admin-panel.component.ts","./src/app/admin/advanced-admin-panel/my-patients/my-patients.component.html","./src/app/admin/advanced-admin-panel/my-patients/my-patients.component.ts","./src/app/admin/advanced-admin-panel/push-notifications/push-notifications.component.html","./src/app/admin/advanced-admin-panel/push-notifications/push-notifications.component.ts","./src/app/admin/basic-admin-panel/basic-admin-panel.component.html","./src/app/admin/basic-admin-panel/basic-admin-panel.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.server.module.ts","./src/app/change-password/change-password.component.ts","./src/app/dentist-request-account/dentist-request-account.component.html","./src/app/dentist-request-account/dentist-request-account.component.ts","./src/app/edit-account/edit-account.component.ts","./src/app/forgotten-password/forgotten-password.component.ts","./src/app/front-end-language/front-end-language.component.ts.FrontEndLanguageComponent.html","./src/app/front-end-language/front-end-language.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/landing-page/landing-page.component.html","./src/app/landing-page/landing-page.component.ts","./src/app/logged-in-wrapper/logged-in-wrapper.component.html","./src/app/logged-in-wrapper/logged-in-wrapper.component.ts","./src/app/manage-privacy/manage-privacy.component.ts","./src/app/my-wallet/my-wallet.component.ts","./src/app/not-logged-in-wrapper/not-logged-in-wrapper.component.html","./src/app/not-logged-in-wrapper/not-logged-in-wrapper.component.ts","./src/app/patient-login-page/patient-login-page.component.html","./src/app/patient-login-page/patient-login-page.component.ts","./src/app/patient-register-by-invite/patient-register-by-invite.component.html","./src/app/patient-register-by-invite/patient-register-by-invite.component.ts","./src/app/request-account/request-account.component.html","./src/app/request-account/request-account.component.ts","./src/app/verify-account/verify-account.component.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.server.ts","external \"@angular/animations\"","external \"@angular/animations/browser\"","external \"@angular/common\"","external \"@angular/common/http\"","external \"@angular/core\"","external \"@angular/forms\"","external \"@angular/platform-browser\"","external \"@angular/platform-browser/animations\"","external \"@angular/platform-server\"","external \"@angular/router\"","external \"@ngx-translate/core\"","external \"@ngx-translate/http-loader\"","external \"jquery\"","external \"rxjs\"","external \"rxjs/operators\"","external \"tslib\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEoG;AAC9D;AACkB;AACM;;AAE9D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8CAA8C,EAAE;AAChD,sDAAsD,EAAE;AACxD,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,EAAE,kDAAkD,EAAE;AACpF;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,sCAAsC,EAAE,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C,4BAA4B,EAAE;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,0BAA0B,oBAAoB,wBAAwB,EAAE;AACxE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,uBAAuB,oBAAoB,wBAAwB,EAAE;AACrE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,0BAA0B,oBAAoB,wBAAwB,EAAE;AACxE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,+BAA+B,EAAE,iBAAiB,EAAE;AACpD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iDAAiD,EAAE,MAAM,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,+BAA+B,EAAE,qCAAqC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;AAC9G,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,sEAAsE,EAAE;AACxE,8CAA8C,EAAE;AAChD,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,mDAAmD,EAAE;AACrD,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA,6CAA6C,4BAA4B,IAAI,YAAY,GAAG,gBAAgB;AAC5G;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kBAAkB,eAAe,GAAG,GAAG,EAAE;AACzC,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,oCAAoC;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE,MAAM,6BAA6B;AAC7F;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,+CAAE,WAAW,gEAAS;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE,kBAAkB,6DAAM;AAC3D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA,4BAA4B;AAC5B,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,yBAAyB;AACzB,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,6BAA6B,gBAAgB,EAAE;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,8EAA8E,SAAS;AACvF;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,4BAA4B;AAC5B;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA,aAAa,oBAAoB,EAAE,8BAA8B;AACjE;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,yDAAyD,mCAAmC;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,MAAM,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,MAAM;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,yEAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mCAAmC;AACnC;AACA;AACA;AACA,sCAAsC,0DAA0D;AAChG,sCAAsC,0DAA0D;AAChG;AACA;AACA;AACA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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license Angular v8.1.3\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ÉµparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpBackend {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents the header configuration options for an HTTP request.\n *\n * Instances should be assumed immutable with lazy parsing.\n *\n * \\@publicApi\n */\nclass HttpHeaders {\n    /**\n     * Constructs a new HTTP header object with the given values.\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((/**\n                 * @param {?} line\n                 * @return {?}\n                 */\n                line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            (/** @type {?} */ (this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                }));\n            });\n        }\n        else {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                }));\n            });\n        }\n    }\n    /**\n     * Checks for existence of a header by a given name.\n     *\n     * @param {?} name The header name to check for existence.\n     *\n     * @return {?} Whether the header exits.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first header value that matches a given name.\n     *\n     * @param {?} name The header name to retrieve.\n     *\n     * @return {?} A string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @return {?} A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of header values for a given header name.\n     *\n     * @param {?} name The header name from which to retrieve the values.\n     *\n     * @return {?} A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new header value to the existing set of\n     * header values.\n     *\n     * @param {?} name The header name for which to append the values.\n     *\n     * @param {?} value\n     * @return {?} A clone of the HTTP header object with the value appended.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets a header value for a given name. If the header name already exists,\n     * its value is replaced with the given value.\n     *\n     * @param {?} name The header name.\n     * @param {?} value The value to set or overide for a given name.\n     *\n     * @return {?} A clone of the HTTP header object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes all header values for a given name.\n     *\n     * @param {?} name The header name.\n     * @param {?=} value The header values to delete for a given name.\n     *\n     * @return {?} A clone of the HTTP header object.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @private\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((/**\n                 * @param {?} update\n                 * @return {?}\n                 */\n                update => this.applyUpdate(update)));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));\n            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = (/** @type {?} */ (update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = (/** @type {?} */ (update.value));\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((/**\n                     * @param {?} value\n                     * @return {?}\n                     */\n                    value => toDelete.indexOf(value) === -1));\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * \\@publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param {?} key The key name.\n     * @return {?} The encoded key name.\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param {?} value The value.\n     * @return {?} The encoded value.\n     */\n    encodeValue(value) { return standardEncoding(value); }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param {?} key The encoded key name.\n     * @return {?} The decoded key name.\n     */\n    decodeKey(key) { return decodeURIComponent(key); }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param {?} value The encoded value.\n     * @return {?} The decoded value.\n     */\n    decodeValue(value) { return decodeURIComponent(value); }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((/**\n         * @param {?} param\n         * @return {?}\n         */\n        (param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        }));\n    }\n    return map;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * \\@publicApi\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = (/** @type {?} */ ({}))) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => {\n                /** @type {?} */\n                const value = ((/** @type {?} */ (options.fromObject)))[key];\n                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);\n            }));\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param {?} param The parameter name.\n     * @return {?} True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param {?} param The parameter name.\n     * @return {?} The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = (/** @type {?} */ (this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param {?} param The parameter name.\n     * @return {?} All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @return {?} The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from((/** @type {?} */ (this.map)).keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value to add.\n     * @return {?} A new body with the appended value.\n     */\n    append(param, value) { return this.clone({ param, value, op: 'a' }); }\n    /**\n     * Replaces the value for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value.\n     * @return {?} A new body with the new value.\n     */\n    set(param, value) { return this.clone({ param, value, op: 's' }); }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param {?} param The parameter name.\n     * @param {?=} value The value to remove, if provided.\n     * @return {?} A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) { return this.clone({ param, value, op: 'd' }); }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => eKey + '=' + this.encoder.encodeValue(value)))\n                .join('&');\n        }))\n            .join('&');\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));\n            (/** @type {?} */ (this.updates)).forEach((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];\n                        base.push((/** @type {?} */ (update.value)));\n                        (/** @type {?} */ (this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                (/** @type {?} */ (this.map)).set(update.param, base);\n                            }\n                            else {\n                                (/** @type {?} */ (this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            (/** @type {?} */ (this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            }));\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = (/** @type {?} */ (third));\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((/** @type {?} */ (this.body))).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((/**\n                 * @param {?} headers\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((/**\n             * @param {?} params\n             * @param {?} param\n             * @return {?}\n             */\n            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params, headers, reportProgress, responseType, withCredentials,\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n     * The request was sent out over the wire.\n     */\n    Sent: 0,\n    /**\n     * An upload progress event was received.\n     */\n    UploadProgress: 1,\n    /**\n     * The response status code and headers were received.\n     */\n    ResponseHeader: 2,\n    /**\n     * A download progress event was received.\n     */\n    DownloadProgress: 3,\n    /**\n     * The full response including the body was received.\n     */\n    Response: 4,\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message =\n                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n *\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * \\@usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * \\@publicApi\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (/** @type {?} */ (first));\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        (req) => this.handler.handle(req))));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        /** @type {?} */\n        const res$ = (/** @type {?} */ (events$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event instanceof HttpResponse)))));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        })));\n                    case 'blob':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        })));\n                    case 'text':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        })));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => res.body)));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param {?} url     The endpoint URL.\n     * @param {?=} options The HTTP options to send with the request.\n     *\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @template T\n     * @param {?} url The resource URL.\n     * @param {?} callbackParam The callback function name.\n     *\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * \\@publicApi\n * @type {?}\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\n/** @type {?} */\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * \\@publicApi\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @private\n     * @return {?}\n     */\n    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            /** @type {?} */\n            let body = null;\n            // Whether the response callback has been called.\n            /** @type {?} */\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (/**\n             * @param {?=} data\n             * @return {?}\n             */\n            (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            });\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            /** @type {?} */\n            const cleanup = (/**\n             * @return {?}\n             */\n            () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            });\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            /** @type {?} */\n            const onLoad = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK', url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            });\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error', url,\n                }));\n            });\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            });\n        }));\n    }\n}\nJsonpClientBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * \\@publicApi\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle((/** @type {?} */ (req)));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@publicApi\n * @abstract\n */\nclass XhrFactory {\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\n}\nBrowserXhr.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * \\@publicApi\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((/**\n             * @param {?} name\n             * @param {?} values\n             * @return {?}\n             */\n            (name, values) => xhr.setRequestHeader(name, values.join(','))));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            /** @type {?} */\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            /** @type {?} */\n            const partialFromXhr = (/**\n             * @return {?}\n             */\n            () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            });\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            /** @type {?} */\n            const onLoad = (/**\n             * @return {?}\n             */\n            () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = (/** @type {?} */ ({ error, text: body }));\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            });\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                const { url } = partialFromXhr();\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            });\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            /** @type {?} */\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onDownProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            });\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onUpProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            });\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send((/** @type {?} */ (reqBody)));\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            });\n        }));\n    }\n}\nHttpXhrBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ÉµparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((/**\n             * @param {?} next\n             * @param {?} interceptor\n             * @return {?}\n             */\n            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * \\@publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as Éµangular_packages_common_http_http_a, JsonpCallbackContext as Éµangular_packages_common_http_http_b, jsonpCallbackContext as Éµangular_packages_common_http_http_c, BrowserXhr as Éµangular_packages_common_http_http_d, HttpXsrfCookieExtractor as Éµangular_packages_common_http_http_g, HttpXsrfInterceptor as Éµangular_packages_common_http_http_h, XSRF_COOKIE_NAME as Éµangular_packages_common_http_http_e, XSRF_HEADER_NAME as Éµangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ÉµHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","<router-outlet></router-outlet>","import {Injectable} from '@angular/core';\nimport * as $ from 'jquery';\nimport {environment} from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdditionalService {\n\n    constructor() {\n    }\n\n    // showing front end loader\n    showLoader() {\n        if (!$('.camping-loader').hasClass('loaded')) {\n            $('.camping-loader').html('<div class=\"response-layer\"><div class=\"wrapper\"><picture itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><source media=\"(max-width: 768px)\" srcset=\"assets/images/dcn-flipping-coin-logo-loader-v3-mobile.gif\"><img itemprop=\"contentUrl\" src=\"assets/images/dcn-flipping-coin-logo-loader-v3_desktop.gif\" class=\"max-width-250 max-width-xs-200\" alt=\"Loader\"></picture></div></div>').addClass('loaded');\n            $('.camping-loader .response-layer').show();\n        } else {\n            $('.camping-loader .response-layer').show();\n        }\n    }\n\n    // hiding front end loader\n    hideLoader() {\n        $('.camping-loader .response-layer').hide();\n    }\n\n    dateObjToFormattedDate(object) {\n        let date;\n        let month;\n        if (object.getDate() < 10) {\n            date = '0' + object.getDate();\n        } else {\n            date = object.getDate();\n        }\n\n        if (object.getMonth() + 1 < 10) {\n            month = '0' + (object.getMonth() + 1);\n        } else {\n            month = object.getMonth() + 1;\n        }\n        return date + '/' + month + '/' + object.getFullYear();\n    }\n\n    generateAccountLink() {\n        if (environment.hybrid === true) {\n            return environment.accountDomain + '/custom-cookie?mobile-app=hubapp&slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentDentist')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentDentist')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentDentist')).encrypted_token);\n        } else {\n            return environment.accountDomain + '/custom-cookie?slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentDentist')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentDentist')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentDentist')).encrypted_token);\n        }\n    }\n\n    generateNotAPartnerDentistAccountLink() {\n        if (environment.hybrid === true) {\n            return environment.accountDomain + '/custom-cookie?mobile-app=hubapp&slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).encrypted_token);\n        } else {\n            return environment.accountDomain + '/custom-cookie?slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).encrypted_token);\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpHeaders} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {RedirectsService} from './redirects.service';\nimport {RequestsService} from './requests.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthenticationServiceService {\n    isDentistLoggedSubject = new BehaviorSubject<boolean>(this.hasDentistStorageSession());\n    isNotAPartnerDentistLoggedSubject = new BehaviorSubject<boolean>(this.hasNotAPartnerDentistStorageSession());\n    isPatientLoggedSubject = new BehaviorSubject<boolean>(this.hasPatientStorageSession());\n    generalError: boolean = false;\n    dentistAuthFailed: boolean = false;\n    notAPartner: boolean = false;\n\n    constructor(private router: Router, private http: HttpClient, private redirectsService: RedirectsService, public requestsService: RequestsService) {\n    }\n\n    dentistLogin(email: string, password: string) {\n        this.notAPartner = false;\n        this.dentistAuthFailed = false;\n        this.generalError = false;\n\n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n\n        const body = new HttpParams().set('email', email).set('password', password).set('platform', 'dentacoin').set('type', 'dentist');\n        this.requestsService.dentistLogin(body.toString()).subscribe((response: any) => {\n            if (response.success) {\n                if (response.data.is_partner == true || response.data.is_hub_app_dentist == true) {\n                    console.log('partner');\n\n                    window.scrollTo(0, 0);\n                    window.localStorage.setItem('currentDentist', JSON.stringify({\n                        id: response.data.id,\n                        token: response.token,\n                        encrypted_id: response.encrypted_data.encrypted_id,\n                        encrypted_token: response.encrypted_data.encrypted_token,\n                        encrypted_type: response.encrypted_data.encrypted_type\n                    }));\n\n                    this.requestsService.getDentistData(response.data.id).subscribe((innerResponse: any) => {\n                        if (innerResponse.data.logo != null) {\n                            this.isDentistLoggedSubject.next(true);\n                            this.redirectsService.redirectToMyPatients();\n                        } else {\n                            this.isDentistLoggedSubject.next(true);\n                            this.redirectsService.redirectToAdmin();\n                        }\n                    });\n                } else {\n                    console.log('not a partner');\n\n                    window.scrollTo(0, 0);\n                    window.localStorage.setItem('currentNotAPartnerDentist', JSON.stringify({\n                        id: response.data.id,\n                        token: response.token,\n                        encrypted_id: response.encrypted_data.encrypted_id,\n                        encrypted_token: response.encrypted_data.encrypted_token,\n                        encrypted_type: response.encrypted_data.encrypted_type\n                    }));\n\n                    this.isNotAPartnerDentistLoggedSubject.next(true);\n                    this.redirectsService.redirectToLandingPage();\n                }\n            } else {\n                this.dentistAuthFailed = true;\n            }\n        });\n\n        /*this.http.post(environment.coreDbApiDomain + '/api/login', body.toString(), ParseHeaders).subscribe({\n            next: (response: any) => {\n                console.log(response, 'dentistLogin');\n                if (response.success) {\n                    if (response.data.is_partner == true) {\n                        console.log('partner');\n\n                        window.scrollTo(0, 0);\n                        window.localStorage.setItem('currentDentist', JSON.stringify({\n                            id: response.data.id,\n                            token: response.token\n                            /!*encrypted_id: coredbResponse.encrypted_id,\n                            encrypted_token: coredbResponse.encrypted_token,\n                            encrypted_type: coredbResponse.encrypted_type*!/\n                        }));\n\n                        this.isDentistLoggedSubject.next(true);\n                        this.redirectsService.redirectToAdmin();\n                    } else {\n                        console.log('not partner');\n                        this.notAPartner = true;\n                    }\n                } else {\n                    this.dentistAuthFailed = true;\n                }\n            },\n            error: error => {\n                this.generalError = true;\n            }\n        });*/\n    }\n\n    logout(redirect: string) {\n        window.localStorage.clear();\n        window.localStorage.setItem('greetNewUser', 'true');\n        this.isPatientLoggedSubject.next(false);\n        this.isDentistLoggedSubject.next(false);\n        this.isNotAPartnerDentistLoggedSubject.next(false);\n\n        if (redirect === 'dentist') {\n            this.redirectsService.redirectToAdminLogin();\n        } else if (redirect === 'patient') {\n            this.redirectsService.redirectToPatientLogin('login');\n        }\n    }\n\n    hasDentistStorageSession(): boolean {\n        return !!window.localStorage.getItem('currentDentist');\n    }\n\n    hasNotAPartnerDentistStorageSession(): boolean {\n        return !!window.localStorage.getItem('currentNotAPartnerDentist');\n    }\n\n    hasPatientStorageSession(): boolean {\n        return !!window.localStorage.getItem('currentPatient');\n    }\n\n    isDentistLoggedIn() : Observable<boolean> {\n        return this.isDentistLoggedSubject.asObservable();\n    }\n\n    isNotAPartnerDentistLoggedIn() : Observable<boolean> {\n        return this.isNotAPartnerDentistLoggedSubject.asObservable();\n    }\n\n    isPatientLoggedIn() : Observable<boolean> {\n        return this.isPatientLoggedSubject.asObservable();\n    }\n\n    redirectToLoginIfNotLoggedIn() {\n        if (!this.hasDentistStorageSession()) {\n            this.redirectsService.redirectToAdminLogin();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LanguageService {\n\n    constructor(private translate: TranslateService, private activatedRoute: ActivatedRoute, private router: Router) {\n    }\n\n    onLangSwitcherChange(lang) {\n        this.router.navigateByUrl(this.router.url.substring(0, 1) + lang + this.router.url.substring(3));\n    }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RedirectsService {\n    constructor(private router: Router, private translate: TranslateService, private ngZone: NgZone) {\n    }\n\n    redirectToAdminLogin() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin-login')).then();\n    }\n\n    redirectToAdmin() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin')).then();\n    }\n\n    redirectToAdvancedAdmin() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin/advanced')).then();\n    }\n\n    redirectToMyPatients() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin/advanced/my-patients')).then();\n    }\n\n    redirectToLoggedHome() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/patients')).then();\n    }\n\n    redirectToLandingPage() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang)).then();\n    }\n\n    redirectToDentistRequestAccount() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/dentist-request-account')).then();\n    }\n\n    redirectToPatientRequestAccount() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/request-account')).then();\n    }\n\n    redirectToPatientLogin(type: string) {\n        if (type === 'account-verification') {\n            this.ngZone.run(() => this.router.navigate([this.translate.currentLang + '/login'], {state: {successfullyVerifiedAccount: true}})).then();\n        } else if (type === 'change-password') {\n            this.ngZone.run(() => this.router.navigate([this.translate.currentLang + '/login'], {state: {successfullyChangePassword: true}})).then();\n        } else if (type === 'login') {\n            this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/login')).then();\n        } else {\n            this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/' + type)).then();\n        }\n    }\n\n    redirectToMyWallet() {\n        this.router.navigateByUrl(this.translate.currentLang + '/my-wallet');\n    }\n\n    redirectToEditAccount() {\n        this.router.navigateByUrl(this.translate.currentLang + '/edit-account');\n    }\n\n    redirectToManagePrivacy() {\n        this.router.navigateByUrl(this.translate.currentLang + '/manage-privacy');\n    }\n\n    redirectToPatientInvite(invite: string, inviteId: string) {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/patient-register-by-invite?invite=' + invite + '&inviteid=' + inviteId)).then();\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RequestsService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    public getDentacoinDataByExternalProvider(currency: string): Observable<{}> {\r\n        return this.http.get('https://indacoin.com/api/GetCoinConvertAmount/' + currency + '/DCN/100/dentacoin');\r\n    }\r\n\r\n    // ===================================== HubApp api methods =====================================\r\n\r\n    public getDentistData(id: any): Observable<{}> {\r\n        return this.http.get('https://dcn-hub-app-api.dentacoin.com/dentist/get-dentist-data/' + id);\r\n    }\r\n\r\n    public sendRequestAccountMail(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/send-request-account-mail', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    public dentistSendRequestAccountMail(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/dentist/dentist-send-request-account-mail', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    public withdraw(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/withdraw', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public dentistLogin(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/dentist/coredb-login', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public getDentistSlug(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/get-dentist-slug', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public getInviteHistory(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/dentist/get-invite-history', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public getPushNotificationsHistory(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/dentist/get-push-notifications', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public getPatientsWhichCanReceivePushNotifications(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/dentist/get-patients-which-can-receive-push-notifications', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public coreDbLogin(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/coredb-login', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public getWithdrawHistory(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/get-dcn-withdraw-history', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    public requestForgottenPasswordToken(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/request-forgotten-password', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    // ===================================== CoreDB api methods =====================================\r\n    public getTitles(): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/enums');\r\n    }\r\n\r\n    public getCountries(): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/countries');\r\n    }\r\n\r\n    public validatePhone(body: string): Observable<{}> {\r\n        console.log(body, 'body');\r\n        return this.http.post(environment.coreDbApiDomain + '/api/phone/', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public downloadGDPRData(token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/gdpr/', null, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public deleteProfile(body: string, token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/user/', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public editProfile(body: string, token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/user/', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public getUserData(token: string): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/user/', {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public getDCNBalance(token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/balance', null, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public getAddresses(id: any): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/wallet-addresses/' + id);\r\n    }\r\n}\r\n","<div class=\"container padding-top-150 padding-top-xs-50 padding-top-sm-50\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <figure class=\"max-width-150 max-width-xs-100 margin-0-auto\" itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"></figure>\n            <h1 class=\"text-center fs-36 fs-xs-26 lato-bold padding-top-10 padding-top-xs-0 padding-bottom-20 padding-bottom-xs-10\">DENTACOIN HUB APP ADMIN PANEL</h1>\n        </div>\n        <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <form [formGroup]=\"dentistsLoginForm\" (ngSubmit)=\"onDentistsFormSubmit()\">\n                <div class=\"error-handle margin-bottom-10\" *ngIf=\"authenticationServiceService.generalError\">{{'general-error' | translate}}</div>\n                <div class=\"error-handle margin-bottom-10\" *ngIf=\"authenticationServiceService.notAPartner\">{{'not-a-partner-error' | translate}} <a (click)=\"redirectsService.redirectToDentistRequestAccount()\" class=\"text-decoration-underline lato-bold\">here</a>.</div>\n                <div class=\"error-handle margin-bottom-10\" *ngIf=\"authenticationServiceService.dentistAuthFailed\">{{'dentist-auth-failed' | translate}} <a (click)=\"redirectsService.redirectToDentistRequestAccount()\" class=\"text-decoration-underline lato-bold\">here</a>.</div>\n                <div class=\"padding-top-10\">\n                    <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                        <label for=\"dentist-login-email\" class=\"platform-color\">Email address:</label>\n                        <input maxlength=\"100\" type=\"text\" id=\"dentist-login-email\" formControlName=\"email\" class=\"full-rounded form-field platform-border-color\"/>\n                    </div>\n                    <div *ngIf=\"dentistsFormSubmitted && dentists_form_data.email.errors\">\n                        <div class=\"error-handle\" *ngIf=\"dentists_form_data.email.errors.required\">Email is required.</div>\n                        <div class=\"error-handle\" *ngIf=\"dentists_form_data.email.errors.email\">Please enter valid email.</div>\n                    </div>\n                </div>\n                <div class=\"padding-top-10\">\n                    <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                        <label for=\"dentist-login-password\" class=\"platform-color\">Password:</label>\n                        <input type=\"password\" maxlength=\"50\" id=\"dentist-login-password\" formControlName=\"password\" class=\"full-rounded form-field platform-border-color\"/>\n                    </div>\n                    <div *ngIf=\"dentistsFormSubmitted && dentists_form_data.password.errors\">\n                        <div class=\"error-handle\" *ngIf=\"dentists_form_data.password.errors.required\">Password is required.</div>\n                    </div>\n                </div>\n                <div class=\"padding-top-30 padding-bottom-10 text-center\">\n                    <button class=\"module platform-custom-button platform-background-color platform-border-color hover\">LOGIN</button>\n                </div>\n                <div class=\"padding-top-20 padding-bottom-10 text-center fs-16 calibri-light\">\n                    <div>{{'having-trouble-login' | translate}}</div>\n                    <a href=\"https://account.dentacoin.com/forgotten-password\" target=\"_blank\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'forgotten-password-redirect' | translate}}</a>\n                    |\n                    <a [routerLink]=\"['/'+translate.currentLang+'/dentist-request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'request-account-btn' | translate}}</a>\n                </div>\n            </form>\n        </div>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {HttpClient} from '../../../node_modules/@angular/common/http';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html'\n})\nexport class AdminLoginComponent implements OnInit {\n    public isDentistLoggedIn: Observable<boolean>;\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public translate: TranslateService) {\n        this.isDentistLoggedIn = authenticationServiceService.isDentistLoggedSubject;\n    }\n\n    dentistsLoginForm: FormGroup;\n    dentistsFormSubmitted = false;\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasDentistStorageSession()) {\n            // logged-in logic\n            this.redirectsService.redirectToAdmin();\n        } else {\n            // not logged-in logic\n            this.dentistsLoginForm = this.formBuilder.group({\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ])),\n                password: ['', Validators.required]\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get dentists_form_data() {\n        return this.dentistsLoginForm.controls;\n    }\n\n    // dentist trying to log in\n    onDentistsFormSubmit() {\n        this.dentistsFormSubmitted = true;\n        // stop here if form is invalid\n        if (this.dentistsLoginForm.invalid) {\n            return;\n        }\n\n        this.authenticationServiceService.dentistLogin(this.dentists_form_data.email.value.trim(), this.dentists_form_data.password.value.trim());\n    }\n}\n","<main class=\"admin-main-content\">\r\n    <router-outlet></router-outlet>\r\n</main>","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\n\n@Component({\n    selector: 'app-admin-panel',\n    templateUrl: './admin.component.html'\n})\n\nexport class AdminComponent implements OnInit {\n\n    constructor(public authenticationServiceService: AuthenticationServiceService) {\n        this.authenticationServiceService.redirectToLoginIfNotLoggedIn();\n    }\n\n    ngOnInit() {\n\n    }\n}\n","<div class=\"advanced-admin-wrapper fs-0\">\n    <div class=\"left-nav inline-block-top color-white\">\n        <div class=\"desktop-visible\">\n            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-40 padding-bottom-60\">\n                <a (click)=\"this.redirectsService.redirectToAdmin()\">\n                    <img alt=\"Dentacoin logo\" class=\"width-100\" src=\"assets/images/exit.svg\"/>\n                </a>\n            </figure>\n            <div class=\"dentist-data padding-bottom-50\">\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-100 padding-bottom-10 dentist-avatar\">\n                    <img alt=\"Dentist avatar\" class=\"width-100\" src=\"{{dentistData.avatar_url}}\"/>\n                </figure>\n                <div class=\"fs-20 lato-bold\">{{dentistData.name}}</div>\n                <div class=\"fs-16\"><a href=\"mailto:sam.johnes@gmail.com\" class=\"color-white email-link\">{{dentistData.email}}</a></div>\n            </div>\n            <nav>\n                <ul itemtype=\"http://schema.org/SiteNavigationElement\">\n                    <li>\n                        <a routerLink=\"my-patients\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" itemprop=\"url\">\n                            <span class=\"inline-block icon my-patients\"></span>\n                            <span class=\"inline-block\">{{'admin-menu-element-my-patients' | translate}}</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a routerLink=\"push-notifications\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" itemprop=\"url\">\n                            <span class=\"inline-block icon push-notifications\"></span>\n                            <span class=\"inline-block\">{{'admin-menu-element-push-notifications' | translate}}</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a (click)=\"this.redirectsService.redirectToAdmin()\" itemprop=\"url\">\n                            <span class=\"inline-block icon app-page\"></span>\n                            <span class=\"inline-block\">{{'admin-menu-element-app-page' | translate}}</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"{{myAccountLink}}\" target=\"_blank\" itemprop=\"url\">\n                            <span class=\"inline-block icon my-wallet\"></span>\n                            <span class=\"inline-block\">{{'admin-menu-element-my-wallet' | translate}}</span>\n                        </a>\n                    </li>\n                    <li>\n                        <a href=\"javascript:void(0)\" itemprop=\"url\" (click)=\"this.authenticationServiceService.logout('dentist')\">\n                            <span class=\"inline-block\">{{'admin-menu-element-logout' | translate}}</span>\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n        <div class=\"mobile-visible\">\n            <div class=\"go-back-and-logout fs-0 padding-bottom-15 padding-left-15 padding-right-15\">\n                <div class=\"go-back inline-block\">\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-40\">\n                        <a (click)=\"this.redirectsService.redirectToAdmin()\">\n                            <img alt=\"Dentacoin logo\" class=\"width-100\" src=\"assets/images/exit.svg\"/>\n                        </a>\n                    </figure>\n                </div>\n                <div class=\"logout text-right fs-18 inline-block\">\n                    <a href=\"javascript:void(0)\" itemprop=\"url\" (click)=\"this.authenticationServiceService.logout('dentist')\" class=\" color-white lato-bold\">\n                        <span class=\"inline-block\">{{'admin-menu-element-logout' | translate}}</span>\n                    </a>\n                </div>\n            </div>\n            <div class=\"nav-and-avatar text-center color-white padding-left-15 padding-right-15\">\n                <nav class=\"max-width-500 margin-0-auto fs-0\">\n                    <ul>\n                        <li class=\"inline-block-bottom padding-right-20\">\n                            <a (click)=\"this.redirectsService.redirectToAdmin()\" itemprop=\"url\">\n                                <div class=\"icon app-page\"></div>\n                                <div class=\"fs-18 fs-xs-16 color-white\">{{'admin-menu-element-app-page' | translate}}</div>\n                            </a>\n                        </li>\n                        <li class=\"inline-block-bottom\">\n                            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-80 padding-bottom-10 dentist-avatar\">\n                                <img alt=\"Dentist avatar\" class=\"width-100\" src=\"{{dentistData.avatar_url}}\"/>\n                            </figure>\n                        </li>\n                        <li class=\"inline-block-bottom padding-left-20\">\n                            <a href=\"{{myAccountLink}}\" target=\"_blank\" itemprop=\"url\">\n                                <div class=\"icon my-wallet\"></div>\n                                <div class=\"fs-18 fs-xs-16 color-white\">{{'admin-menu-element-my-wallet' | translate}}</div>\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n                <div class=\"dentist-info\">\n                    <div class=\"fs-20 lato-bold\">{{dentistData.name}}</div>\n                    <div class=\"fs-16 padding-top-5 padding-bottom-5\"><a href=\"mailto:sam.johnes@gmail.com\" class=\"color-white email-link\">{{dentistData.email}}</a></div>\n                    <a href=\"{{myAccountLink}}\" target=\"_blank\" class=\"fs-16 color-white\">\n                        <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\n                    </a>\n                </div>\n            </div>\n            <nav class=\"white-styled-nav fs-0 text-center\">\n                <ul itemtype=\"http://schema.org/SiteNavigationElement\">\n                    <li class=\"inline-block\">\n                        <a class=\"my-patients\" routerLink=\"my-patients\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" itemprop=\"url\">\n                            <div class=\"icon my-patients\"></div>\n                            <div class=\"fs-16 padding-bottom-10\">{{'admin-menu-element-my-patients' | translate}}</div>\n                        </a>\n                    </li>\n                    <li class=\"inline-block\">\n                        <a class=\"push-notifications\" routerLink=\"push-notifications\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact: true}\" itemprop=\"url\">\n                            <div class=\"icon push-notifications\"></div>\n                            <div class=\"fs-16 padding-bottom-10\">{{'admin-menu-element-push-notifications' | translate}}</div>\n                        </a>\n                    </li>\n                </ul>\n            </nav>\n        </div>\n    </div>\n    <div class=\"admin-page-content inline-block-top\">\n        <div class=\"user-info-tab text-right\">\n            <a href=\"{{myAccountLink}}\" target=\"_blank\" class=\"fs-14 inline-block\">\n                <div class=\"inline-block\">\n                    <div class=\"padding-bottom-5\">{{dentistData.name}}</div>\n                    <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\n                </div>\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block margin-left-15 max-width-40 avatar\">\n                    <img alt=\"Dentist avatar\" class=\"width-100\" src=\"{{dentistData.avatar_url}}\"/>\n                </figure>\n            </a>\n            <div class=\"lang-switcher module inline-block\">\n                <div class=\"border-top\">\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"fix-selects-for-ios\">\n                        <option value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\n                        <option value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\n                        <option value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\n                        <option value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n        <router-outlet></router-outlet>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AuthenticationServiceService} from '../../_services/authentication-service.service';\nimport {RedirectsService} from '../../_services/redirects.service';\nimport {RequestsService} from '../../_services/requests.service';\nimport {LanguageService} from '../../_services/language.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {AdditionalService} from '../../_services/additional.service';\n\n@Component({\n    selector: 'app-advanced-admin-panel',\n    templateUrl: './advanced-admin-panel.component.html'\n})\n\nexport class AdvancedAdminPanelComponent implements OnInit {\n    public isDentistLoggedIn: Observable<boolean>;\n    public myAccountLink: string;\n    public dcnAmount: number = 0;\n    public usdAmount: number = 0;\n    public updateDentistDcnAndUsdBalanceTimer: any;\n    public dentistData: DentistDataObject = {\n        name: '',\n        email: '',\n        avatar_url: ''\n    };\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService, public languageService: LanguageService, public translate: TranslateService, public additionalService: AdditionalService) {\n        this.isDentistLoggedIn = authenticationServiceService.isDentistLoggedSubject;\n    }\n\n    ngOnInit() {\n        this.myAccountLink = this.additionalService.generateAccountLink();\n\n        this.requestsService.getUserData(JSON.parse(window.localStorage.getItem('currentDentist')).token).subscribe({\n            next: (response: any) => {\n                console.log(response.data, 'response.data');\n                this.dentistData.name = response.data.name;\n                this.dentistData.email = response.data.email;\n                this.dentistData.avatar_url = response.data.avatar_url;\n\n                console.log(this.dentistData, 'this.dentistData');\n            },\n            error: error => this.authenticationServiceService.logout('dentist')\n        });\n\n        this.updateDentistDcnAndUsdBalance();\n\n        if (typeof(this.updateDentistDcnAndUsdBalanceTimer) !== 'undefined') {\n            clearInterval(this.updateDentistDcnAndUsdBalanceTimer);\n            this.updateDentistDcnAndUsdBalanceTimer = undefined;\n        }\n\n        this.updateDentistDcnAndUsdBalanceTimer = setInterval(() => {\n            if (!this.authenticationServiceService.hasPatientStorageSession()) {\n                clearInterval(this.updateDentistDcnAndUsdBalanceTimer);\n                this.updateDentistDcnAndUsdBalanceTimer = undefined;\n            } else {\n                this.updateDentistDcnAndUsdBalance();\n            }\n        }, 5000);\n    }\n\n    updateDentistDcnAndUsdBalance() {\n        this.requestsService.getDCNBalance(JSON.parse(window.localStorage.getItem('currentDentist')).token).subscribe({\n            next: (response: any) => {\n                if (response.success) {\n                    this.dcnAmount = response.data;\n\n                    this.requestsService.getDentacoinDataByExternalProvider('USD').subscribe((coingeckoResponse: any) => {\n                        this.usdAmount = Number(((1 / Number(Number(coingeckoResponse) / 100)) * this.dcnAmount).toFixed(2));\n                    });\n                }\n            },\n            error: error => this.authenticationServiceService.logout('dentist')\n        });\n    }\n}\n\nexport interface DentistDataObject {\n    name: string;\n    email: string;\n    avatar_url: string;\n}","<div class=\"invite-patients-form color-black admin-container\">\n    <div class=\"title-and-subtitle\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-40 max-width-xs-30 inline-block\">\n            <img alt=\"Patients icon\" class=\"width-100\" src=\"assets/images/black-patients-icon.svg\"/>\n        </figure>\n        <span class=\"inline-block fs-36 fs-xs-26 padding-left-10 lato-bold\">{{'my-patients-page-title' | translate}}</span>\n        <div class=\"fs-18 fs-xs-16 padding-bottom-20\">{{'my-patients-page-subtitle' | translate}}</div>\n    </div>\n    <div class=\"people-invitation fs-0\">\n        <div class=\"inputs\">\n            <div class=\"inputs-row padding-bottom-10\">\n                <div class=\"remove-row inline-block\">\n                    <a href=\"javascript:void(0);\" class=\"lato-regular fs-20\">X</a>\n                </div>\n                <div class=\"inputs-wrapper inline-block\">\n                    <div class=\"input-field inline-block-top\">\n                        <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                            <label for=\"request-account-name-0\" class=\"color-light-blue\">{{'invite-patients-form-name' | translate}}</label>\n                            <input maxlength=\"100\" type=\"text\" id=\"request-account-name-0\" class=\"full-rounded form-field light-blue-border-color person-name\"/>\n                        </div>\n                    </div>\n                    <div class=\"input-field inline-block-top\">\n                        <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                            <label for=\"request-account-email-0\" class=\"color-light-blue\">{{'invite-patients-form-email' | translate}}</label>\n                            <input maxlength=\"100\" type=\"text\" id=\"request-account-email-0\" class=\"full-rounded form-field light-blue-border-color person-email\"/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"padding-top-15 padding-top-xs-5 fs-0 buttons\">\n            <div class=\"inline-block add-btn-container\">\n                <a href=\"javascript:void(0)\" class=\"lato-bold fs-16 add-invitation-rows module color-light-blue\">{{'invite-patients-form-add-another-patient' | translate}}</a>\n            </div>\n            <div class=\"inline-block send-btn-container text-right\">\n                <a href=\"javascript:void(0)\" class=\"fs-16 light-blue-white-button submit-form-invite-people module lato-bold\">{{'invite-patients-form-send-invite' | translate}}</a>\n            </div>\n        </div>\n    </div>\n</div>\n<div class=\"fs-16 custom-data-table padding-top-70 padding-top-xs-30 admin-container\" *ngIf=\"showInvitationHistory\">\n    <div class=\"table-wrapper\">\n        <table class=\"table table-without-reorder\">\n            <thead>\n            <tr>\n                <th>{{'invited-patients-history-date' | translate}}</th>\n                <th>{{'invited-patients-history-name' | translate}}</th>\n                <th style=\"width: 200px;\">{{'invited-patients-history-email' | translate}}</th>\n                <th>{{'invited-patients-history-status' | translate}}</th>\n            </tr>\n            </thead>\n            <tbody>\n                <ng-container *ngFor=\"let invite of invites; index as i;\">\n                    <tr>\n                        <td>{{invite.created_at}}</td>\n                        <td class=\"lato-bold\">{{invite.invited_name}}</td>\n                        <td><a href=\"mailto:{{invite.invited_email}}\" class=\"email\">{{invite.invited_email}}</a></td>\n                        <td *ngIf=\"invite.invited_id != null\" class=\"lato-bold color-light-blue\">{{'invited-patients-history-accepted' | translate}}</td>\n                        <td *ngIf=\"invite.invited_id == null\">{{'invited-patients-history-invited' | translate}}</td>\n                    </tr>\n                </ng-container>\n            </tbody>\n        </table>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {HttpParams} from '../../../../../node_modules/@angular/common/http';\nimport {RedirectsService} from '../../../_services/redirects.service';\nimport {RequestsService} from '../../../_services/requests.service';\nimport {AuthenticationServiceService} from '../../../_services/authentication-service.service';\nimport {AdditionalService} from '../../../_services/additional.service';\n\n@Component({\n    selector: 'app-my-patients',\n    templateUrl: './my-patients.component.html'\n})\nexport class MyPatientsComponent implements OnInit {\n    showInvitationHistory: boolean = false;\n    public invites = [];\n\n    constructor(public redirectsService: RedirectsService, public requestsService: RequestsService, public authenticationServiceService: AuthenticationServiceService, public additionalService: AdditionalService) {\n    }\n\n    ngOnInit() {\n        if (!this.authenticationServiceService.hasDentistStorageSession()) {\n            this.redirectsService.redirectToPatientLogin('login');\n        } else {\n            this.requestsService.getInviteHistory(new HttpParams().set('token', JSON.parse(window.localStorage.getItem('currentDentist')).token).toString()).subscribe((response: any) => {\n                if (response.success) {\n                    this.showInvitationHistory = true;\n                    this.invites = response.data;\n\n                    if (this.invites.length) {\n                        for (let i = 0; i < this.invites.length; i += 1) {\n                            this.invites[i].created_at = this.additionalService.dateObjToFormattedDate(new Date(this.invites[i].created_at));\n                        }\n                    }\n                }\n            });\n        }\n    }\n}\n","<div class=\"color-black admin-container\">\r\n    <div class=\"title-and-subtitle\">\r\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-40 max-width-xs-30 inline-block\">\r\n            <img alt=\"Patients icon\" class=\"width-100\" src=\"assets/images/black-push-notifications-icon.svg\"/>\r\n        </figure>\r\n        <span class=\"inline-block fs-36 fs-xs-26 padding-left-10 lato-bold\">{{'push-notification-page-title' | translate}}</span>\r\n        <div class=\"fs-18 fs-xs-16 padding-bottom-20\">{{'push-notification-page-subtitle' | translate}}</div>\r\n    </div>\r\n    <div class=\"push-notifications-custom-form\" [attr.data-patients]=\"currentDentistPatients\"\r\n         [attr.data-push-notifications-select-patients-title]=\"this.translate.instant('push-notifications-select-patients-title')\"\r\n         [attr.data-push-notifications-select-patients-field]=\"this.translate.instant('push-notifications-select-patients-field')\"\r\n         [attr.data-push-notifications-select-patients-save]=\"this.translate.instant('push-notifications-select-patients-save')\"\r\n         [attr.data-push-notifications-select-patients-cancel]=\"this.translate.instant('push-notifications-select-patients-cancel')\"\r\n         [attr.data-push-notifications-select-patients-patient]=\"this.translate.instant('push-notifications-select-patients-patient')\"\r\n         [attr.data-push-notifications-select-patients-error]=\"this.translate.instant('push-notifications-select-patients-error')\"\r\n         [attr.data-push-notifications-select-patients-email]=\"this.translate.instant('push-notifications-select-patients-email')\">\r\n        <div class=\"padding-bottom-25 patients-filtering\" *ngIf=\"showCurrentDentistPatients\">\r\n            <button type=\"button\" data-type=\"all-patients\" class=\"lato-bold fs-20 color-light-blue filter-option active inline-block\"><span class=\"custom-checkbox inline-block\"><span class=\"checkbox-circle\"></span></span> <span class=\"inline-block padding-left-15\">ALL PATIENTS</span></button>\r\n            <button type=\"button\" data-type=\"select-patients\" href=\"javascript:void(0);\" class=\"lato-bold fs-20 color-light-blue filter-option margin-left-20 inline-block\"><span class=\"custom-checkbox inline-block\"><span class=\"checkbox-circle\"></span></span> <span class=\"inline-block padding-left-15\">SELECT PATIENTS</span></button>\r\n            <div class=\"inline-block padding-left-15 list-with-custom-selected-patients fs-16\"></div>\r\n        </div>\r\n        <div class=\"padding-bottom-15\">\r\n            <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\r\n                <label for=\"title\" class=\"color-light-blue\">{{'push-notifications-title' | translate}}</label>\r\n                <input type=\"text\" maxlength=\"255\" id=\"title\" class=\"full-rounded form-field light-blue-border-color\"/>\r\n            </div>\r\n        </div>\r\n        <div class=\"padding-bottom-15\">\r\n            <textarea placeholder=\"{{'push-notifications-message' | translate}}...\" rows=\"3\" maxlength=\"255\" id=\"message\" class=\"full-rounded form-field\"></textarea>\r\n        </div>\r\n        <div class=\"datetimepicker-and-buttons fs-0\">\r\n            <div class=\"daterangepicker-parent inline-block-top padding-bottom-xs-15\">\r\n                <div class=\"max-width-250\">\r\n                    <div class=\"timezone-picker hide padding-bottom-15\">\r\n                        <div class=\"custom-google-select-style module\">\r\n                            <label class=\"color-light-blue\" for=\"timezone-select\">Select timezone</label>\r\n                            <select autocomplete=\"off\" id=\"timezone-select\"><optgroup label=\"US\"><option value=\"US/Pacific\">UTC -07:00 Pacific Time</option><option value=\"US/Mountain\">UTC -06:00 Mountain Time</option><option value=\"US/Central\">UTC -05:00 Central Time</option><option value=\"US/East-Indiana\">UTC -04:00 Eastern Time</option></optgroup><optgroup label=\"Europe\"><option value=\"Europe/Belfast\">UTC +01:00 Dublin, London, Lisbon</option><option value=\"Europe/Amsterdam\">UTC +02:00 (Europe) Central European Time</option><option value=\"Europe/Kaliningrad\">UTC +02:00 Kaliningrad</option><option value=\"Europe/Athens\">UTC +03:00 Eastern European Time</option><option value=\"Europe/Chisinau\">UTC +03:00 Chisinau, Tiraspol</option><option value=\"Europe/Istanbul\">UTC +03:00 Istanbul, Kirov, Minsk, Moscow</option><option value=\"Europe/Astrakhan\">UTC +04:00 Astrakhan, Samara, Saratov, Ulyanovsk</option></optgroup><optgroup label=\"Canada\"><option value=\"Canada/Pacific\">UTC -07:00 Pacific</option><option value=\"Canada/Yukon\">UTC -07:00 Yukon</option><option value=\"Canada/Mountain\">UTC -06:00 Mountain</option><option value=\"Canada/Saskatchewan\">UTC -06:00 Saskatchewan</option><option value=\"Canada/Central\">UTC -05:00 Central</option><option value=\"Canada/Eastern\">UTC -04:00 Eastern</option><option value=\"Canada/Atlantic\">UTC -03:00 Atlantic Time</option><option value=\"Canada/Newfoundland\">UTC -02:30 Newfoundland</option></optgroup><optgroup label=\"Africa\"><option value=\"Africa/Abidjan\">UTC +00:00 Greenwich Mean Time</option><option value=\"Africa/Algiers\">UTC +01:00 (Africa) Central European Time</option><option value=\"Africa/Casablanca\">UTC +01:00 Casablanca, El Aaiun</option><option value=\"Africa/Blantyre\">UTC +02:00 South Africa Time</option><option value=\"Africa/Ceuta\">UTC +02:00 Ceuta</option><option value=\"Africa/Addis_Ababa\">UTC +03:00 East Africa Time</option></optgroup><optgroup label=\"America\"><option value=\"America/Adak\">UTC -09:00 Adak, Atka</option><option value=\"America/Anchorage\">UTC -08:00 Anchorage, Juneau, Metlakatla, Nome</option><option value=\"America/Creston\">UTC -07:00 Arizona &amp; Yukon Time</option><option value=\"America/Ensenada\">UTC -07:00 Pacific Time</option><option value=\"America/Belize\">UTC -06:00 Central Standard Time</option><option value=\"America/Boise\">UTC -06:00 Mountain Time</option><option value=\"America/Chihuahua\">UTC -06:00 Chihuahua, Mazatlan</option><option value=\"America/Atikokan\">UTC -05:00 Jamaica, Panama, Colombia</option><option value=\"America/Bahia_Banderas\">UTC -05:00 Bahia Banderas, Merida, Mexico City, Monterrey</option><option value=\"America/Chicago\">UTC -05:00 Central Time</option><option value=\"America/Anguilla\">UTC -04:00 Eastern Caribbean Time</option><option value=\"America/Asuncion\">UTC -04:00 Asuncion</option><option value=\"America/Detroit\">UTC -04:00 Eastern Time</option><option value=\"America/Havana\">UTC -04:00 Havana</option><option value=\"America/Santiago\">UTC -04:00 Santiago</option><option value=\"America/Araguaina\">UTC -03:00 Argentina, Brazil</option><option value=\"America/Glace_Bay\">UTC -03:00 Glace Bay, Goose Bay, Halifax, Moncton</option><option value=\"America/Godthab\">UTC -02:00 Godthab, Nuuk</option><option value=\"America/Miquelon\">UTC -02:00 Miquelon</option><option value=\"America/Noronha\">UTC -02:00 Noronha</option><option value=\"America/St_Johns\">UTC -02:30 St Johns</option><option value=\"America/Danmarkshavn\">UTC +00:00 Danmarkshavn</option><option value=\"America/Scoresbysund\">UTC +00:00 Scoresbysund</option></optgroup><optgroup label=\"Antarctica\"><option value=\"Antarctica/Palmer\">UTC -03:00 Palmer, Rothera</option><option value=\"Antarctica/Troll\">UTC +02:00 Troll</option><option value=\"Antarctica/Syowa\">UTC +03:00 Syowa</option><option value=\"Antarctica/Mawson\">UTC +05:00 Mawson</option><option value=\"Antarctica/Vostok\">UTC +06:00 Vostok</option><option value=\"Antarctica/Davis\">UTC +07:00 Davis</option><option value=\"Antarctica/DumontDUrville\">UTC +10:00 DumontDUrville</option><option value=\"Antarctica/Macquarie\">UTC +10:00 Macquarie</option><option value=\"Antarctica/Casey\">UTC +11:00 Casey</option><option value=\"Antarctica/McMurdo\">UTC +12:00 McMurdo, South Pole</option></optgroup><optgroup label=\"Arctic\"><option value=\"Arctic/Longyearbyen\">UTC +02:00 Longyearbyen</option></optgroup><optgroup label=\"Asia\"><option value=\"Asia/Aden\">UTC +03:00 Baghdad, Bahrain, Istanbul, Qatar</option><option value=\"Asia/Amman\">UTC +03:00 Amman</option><option value=\"Asia/Beirut\">UTC +03:00 Beirut</option><option value=\"Asia/Damascus\">UTC +03:00 Damascus</option><option value=\"Asia/Famagusta\">UTC +03:00 Famagusta, Nicosia</option><option value=\"Asia/Gaza\">UTC +03:00 Gaza, Hebron</option><option value=\"Asia/Jerusalem\">UTC +03:00 Jerusalem, Tel Aviv</option><option value=\"Asia/Baku\">UTC +04:00 Baku, Dubai, Muscat, Tbilisi</option><option value=\"Asia/Kabul\">UTC +04:30 Kabul</option><option value=\"Asia/Tehran\">UTC +04:30 Tehran</option><option value=\"Asia/Aqtau\">UTC +05:00 Aqtau, Aqtobe, Ashgabat, Ashkhabad</option><option value=\"Asia/Calcutta\">UTC +05:30 New Delhi, Mumbai, Calcutta</option><option value=\"Asia/Kathmandu\">UTC +05:45 Kathmandu, Katmandu</option><option value=\"Asia/Almaty\">UTC +06:00 Almaty, Bishkek, Dacca, Dhaka</option><option value=\"Asia/Rangoon\">UTC +06:30 Rangoon, Yangon</option><option value=\"Asia/Bangkok\">UTC +07:00 Indochina Time</option><option value=\"Asia/Brunei\">UTC +08:00 China, Hong Kong, Singapore</option><option value=\"Asia/Chita\">UTC +09:00 Seoul, Tokyo</option><option value=\"Asia/Ust-Nera\">UTC +10:00 Ust-Nera, Vladivostok</option><option value=\"Asia/Magadan\">UTC +11:00 Magadan, Sakhalin, Srednekolymsk</option><option value=\"Asia/Anadyr\">UTC +12:00 Anadyr, Kamchatka</option></optgroup><optgroup label=\"Atlantic\"><option value=\"Atlantic/Bermuda\">UTC -03:00 Bermuda</option><option value=\"Atlantic/Stanley\">UTC -03:00 Stanley</option><option value=\"Atlantic/South_Georgia\">UTC -02:00 South Georgia</option><option value=\"Atlantic/Cape_Verde\">UTC -01:00 Cape Verde</option><option value=\"Atlantic/Azores\">UTC +00:00 Azores</option><option value=\"Atlantic/Reykjavik\">UTC +00:00 Reykjavik, St Helena</option><option value=\"Atlantic/Canary\">UTC +01:00 Canary, Faeroe, Faroe, Madeira</option><option value=\"Atlantic/Jan_Mayen\">UTC +02:00 Jan Mayen</option></optgroup><optgroup label=\"Australia\"><option value=\"Australia/Eucla\">UTC +08:45 Eucla</option><option value=\"Australia/Perth\">UTC +08:00 Perth, West</option><option value=\"Australia/Adelaide\">UTC +09:30 Adelaide, Broken Hill, South, Yancowinna</option><option value=\"Australia/Darwin\">UTC +09:30 Darwin, North</option><option value=\"Australia/ACT\">UTC +10:00 Australian Eastern Time</option><option value=\"Australia/Brisbane\">UTC +10:00 Brisbane, Lindeman, Queensland</option><option value=\"Australia/LHI\">UTC +10:30 LHI, Lord Howe</option></optgroup><optgroup label=\"Brazil\"><option value=\"Brazil/Acre\">UTC -05:00 Acre</option><option value=\"Brazil/West\">UTC -04:00 West</option><option value=\"Brazil/East\">UTC -03:00 East</option><option value=\"Brazil/DeNoronha\">UTC -02:00 DeNoronha</option></optgroup><optgroup label=\"Chile\"><option value=\"Chile/EasterIsland\">UTC -06:00 EasterIsland</option><option value=\"Chile/Continental\">UTC -04:00 Continental</option></optgroup><optgroup label=\"Indian\"><option value=\"Indian/Antananarivo\">UTC +03:00 Antananarivo, Comoro, Mayotte</option><option value=\"Indian/Mahe\">UTC +04:00 Mahe, Mauritius, Reunion</option><option value=\"Indian/Kerguelen\">UTC +05:00 Kerguelen, Maldives</option><option value=\"Indian/Chagos\">UTC +06:00 Chagos</option><option value=\"Indian/Cocos\">UTC +06:30 Cocos</option><option value=\"Indian/Christmas\">UTC +07:00 Christmas</option></optgroup><optgroup label=\"Mexico\"><option value=\"Mexico/BajaNorte\">UTC -07:00 BajaNorte</option><option value=\"Mexico/BajaSur\">UTC -06:00 BajaSur</option><option value=\"Mexico/General\">UTC -05:00 General</option></optgroup><optgroup label=\"Pacific\"><option value=\"Pacific/Midway\">UTC -11:00 Midway, Niue, Pago Pago, Samoa</option><option value=\"Pacific/Honolulu\">UTC -10:00 Honolulu, Johnston, Rarotonga, Tahiti</option><option value=\"Pacific/Gambier\">UTC -09:00 Gambier</option><option value=\"Pacific/Marquesas\">UTC -09:30 Marquesas</option><option value=\"Pacific/Pitcairn\">UTC -08:00 Pitcairn</option><option value=\"Pacific/Easter\">UTC -06:00 Easter</option><option value=\"Pacific/Galapagos\">UTC -06:00 Galapagos</option><option value=\"Pacific/Palau\">UTC +09:00 Palau</option><option value=\"Pacific/Chuuk\">UTC +10:00 Chuuk, Guam, Port Moresby, Saipan</option><option value=\"Pacific/Bougainville\">UTC +11:00 Bougainville, Efate, Guadalcanal, Kosrae</option><option value=\"Pacific/Norfolk\">UTC +11:00 Norfolk</option><option value=\"Pacific/Auckland\">UTC +12:00 Auckland</option><option value=\"Pacific/Chatham\">UTC +12:45 Chatham</option><option value=\"Pacific/Fiji\">UTC +12:00 Fiji</option><option value=\"Pacific/Funafuti\">UTC +12:00 Funafuti, Kwajalein, Majuro, Nauru</option><option value=\"Pacific/Apia\">UTC +13:00 Apia</option><option value=\"Pacific/Enderbury\">UTC +13:00 Enderbury, Fakaofo, Tongatapu</option><option value=\"Pacific/Kiritimati\">UTC +14:00 Kiritimati</option></optgroup><optgroup label=\"Etc\"><option value=\"Etc/GMT\">Etc/GMT</option><option value=\"Etc/GMT+1\">Etc/GMT+1</option><option value=\"Etc/GMT+2\">Etc/GMT+2</option><option value=\"Etc/GMT+3\">Etc/GMT+3</option><option value=\"Etc/GMT+4\">Etc/GMT+4</option><option value=\"Etc/GMT+5\">Etc/GMT+5</option><option value=\"Etc/GMT+6\">Etc/GMT+6</option><option value=\"Etc/GMT+7\">Etc/GMT+7</option><option value=\"Etc/GMT+8\">Etc/GMT+8</option><option value=\"Etc/GMT+9\">Etc/GMT+9</option><option value=\"Etc/GMT+10\">Etc/GMT+10</option><option value=\"Etc/GMT+11\">Etc/GMT+11</option><option value=\"Etc/GMT+12\">Etc/GMT+12</option><option value=\"Etc/GMT-1\">Etc/GMT-1</option><option value=\"Etc/GMT-2\">Etc/GMT-2</option><option value=\"Etc/GMT-3\">Etc/GMT-3</option><option value=\"Etc/GMT-4\">Etc/GMT-4</option><option value=\"Etc/GMT-5\">Etc/GMT-5</option><option value=\"Etc/GMT-6\">Etc/GMT-6</option><option value=\"Etc/GMT-7\">Etc/GMT-7</option><option value=\"Etc/GMT-8\">Etc/GMT-8</option><option value=\"Etc/GMT-9\">Etc/GMT-9</option><option value=\"Etc/GMT-10\">Etc/GMT-10</option><option value=\"Etc/GMT-11\">Etc/GMT-11</option><option value=\"Etc/GMT-12\">Etc/GMT-12</option><option value=\"Etc/GMT-13\">Etc/GMT-13</option><option value=\"Etc/GMT-14\">Etc/GMT-14</option><option value=\"Etc/UTC\">Etc/UTC</option></optgroup></select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"custom-google-label-style module hide field\" data-input-colorful-border=\"true\">\r\n                        <label for=\"title\" class=\"color-light-blue active-label\">{{'push-notifications-date' | translate}}</label>\r\n                        <input autocomplete=\"off\" type=\"text\" maxlength=\"255\" id=\"datetimepicker\" class=\"full-rounded form-field light-blue-border-color datetimepicker colorful-border\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"buttons inline-block-top text-right\">\r\n                <button type=\"button\" class=\"schedule-button module light-blue-white-button lato-bold margin-right-10 padding-left-10 padding-right-20\"><span class=\"light-blue-border-color inline-block custom-dot margin-right-10\"><span class=\"inner-dot\"></span></span> <span class=\"inline-block\">{{'push-notifications-schedule' | translate}}</span></button>\r\n                <button type=\"button\" class=\"module lato-bold white-light-blue-button padding-left-20 padding-right-20 send-now\" [attr.data-send-now]=\"'push-notifications-send-now' | translate\" [attr.data-save-now]=\"'push-notifications-save-now' | translate\">{{'push-notifications-send-now' | translate}}</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"custom-response hide\" [attr.data-push-notifications-sent-success]=\"'push-notifications-sent-successfully' | translate\" [attr.data-push-notifications-register-success]=\"'push-notifications-register-successfully' | translate\" [attr.data-push-notifications-failed]=\"'general-error' | translate\" [attr.data-push-notifications-missing-patients]=\"'push-notifications-missing-patients' | translate\" [attr.data-push-notifications-limit-reached]=\"'push-notifications-limit-reached' | translate\"></div>\r\n    </div>\r\n</div>\r\n<div class=\"fs-18 custom-data-table padding-top-70 padding-top-xs-30 admin-container\" *ngIf=\"showPushNotificationsHistory\">\r\n    <div class=\"table-wrapper\">\r\n        <table class=\"table table-without-reorder\">\r\n            <thead>\r\n                <tr>\r\n                    <th>{{'push-notifications-date' | translate}}</th>\r\n                    <th>{{'push-notifications-title' | translate}}</th>\r\n                    <th>{{'push-notifications-message' | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            <ng-container *ngFor=\"let push_notification of push_notifications; index as i;\">\r\n                <tr>\r\n                    <td>{{push_notification.date}}</td>\r\n                    <td class=\"lato-bold\">{{push_notification.title}}</td>\r\n                    <td>{{push_notification.message}}</td>\r\n            </ng-container>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\nimport {RedirectsService} from '../../../_services/redirects.service';\nimport {AuthenticationServiceService} from '../../../_services/authentication-service.service';\nimport {HttpParams} from '../../../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../../../_services/requests.service';\nimport {AdditionalService} from '../../../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n    selector: 'app-push-notifications',\n    templateUrl: './push-notifications.component.html'\n})\nexport class PushNotificationsComponent implements OnInit {\n    public showPushNotificationsHistory: boolean = false;\n    public push_notifications = [];\n    public showCurrentDentistPatients: boolean = false;\n    public currentDentistPatients: string = '';\n    \n    constructor(public redirectsService: RedirectsService, public requestsService: RequestsService, public authenticationServiceService: AuthenticationServiceService, public additionalService: AdditionalService, public translate: TranslateService) {\n    }\n\n    ngOnInit() {\n        if (!this.authenticationServiceService.hasDentistStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n        } else {\n            this.requestsService.getPushNotificationsHistory(new HttpParams().set('id', JSON.parse(window.localStorage.getItem('currentDentist')).id).set('token', JSON.parse(window.localStorage.getItem('currentDentist')).token).toString()).subscribe((response: any) => {\n                if (response.success) {\n                    this.showPushNotificationsHistory = true;\n                    this.push_notifications = response.data;\n\n                    if (this.push_notifications.length) {\n                        for (let i = 0; i < this.push_notifications.length; i += 1) {\n                            if (this.push_notifications[i].scheduled != null) {\n                                this.push_notifications[i].date = this.additionalService.dateObjToFormattedDate(new Date(this.push_notifications[i].scheduled));\n                            } else {\n                                this.push_notifications[i].date = this.additionalService.dateObjToFormattedDate(new Date(this.push_notifications[i].created_at));\n                            }\n                        }\n                    }\n                }\n            });\n\n            this.requestsService.getPatientsWhichCanReceivePushNotifications(new HttpParams().set('id', JSON.parse(window.localStorage.getItem('currentDentist')).id).set('token', JSON.parse(window.localStorage.getItem('currentDentist')).token).toString()).subscribe((response: any) => {\n                if (response.success && response.data.length) {\n                    this.currentDentistPatients = JSON.stringify(response.data);\n                    this.showCurrentDentistPatients = true;\n                }\n            });\n        }\n    }\n}","<div class=\"basic-admin-panel\">\r\n    <div class=\"container padding-top-20\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-5 padding-right-0 enableBlur dentist-logo\">\r\n                <div class=\"dentist-logo-wrapper platform-border-color important show-in-edit-mode inline-block-mode\">\r\n                    <button type=\"button\" class=\"dentist-logo-btn\">\r\n                        <label for=\"dentist-logo\"></label>\r\n                    </button>\r\n                    <input type=\"file\" accept=\".jpg,.jpeg,.png\" class=\"hide\" id=\"dentist-logo\"/>\r\n                    <input type=\"hidden\" class=\"hide\" id=\"dentist-logo-media\"/>\r\n                    <input type=\"hidden\" class=\"hide\" id=\"dentist-logo-media-name\"/>\r\n                    <label for=\"dentist-logo\" class=\"platform-color fs-16 calibri-bold add-logo padding-top-10 padding-bottom-10\">Add logo</label>\r\n                </div>\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"hide-in-edit-mode visible-dentist-logo\"></figure>\r\n            </div>\r\n            <div class=\"col-xs-2 text-center pick-dentist-color-parent disableBlur\">\r\n                <a href=\"javascript:void(0);\" class=\"pick-dentist-color show-in-edit-mode\" data-opened=\"false\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"platform-border-color important\">\r\n                        <img src=\"assets/images/change-color-icon.png\" alt=\"Change color icon\"/>\r\n                    </figure>\r\n                    <div class=\"padding-top-5 calibri-bold platform-color fs-16 hide-xs text-center\">Edit colours</div>\r\n                </a>\r\n                <div class=\"custom-dropdown-with-color-pickers\"></div>\r\n            </div>\r\n            <div class=\"col-sm-5 col-xs-7 text-right basic-admin-panel-navigation enableBlur padding-left-0 hide-in-edit-mode-sm\">\r\n                <div class=\"hide-in-edit-mode\">\r\n                    <a (click)=\"this.redirectsService.redirectToMyPatients()\" class=\"module platform-custom-button-opposite-colors inline-block platform-color platform-border-color hover hide-sm\">Admin</a>\r\n                    <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover margin-left-10 edit-page inline-block hide-sm\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> {{'edit-page' | translate}}</a>\r\n                    <div class=\"lang-switcher module inline-block hide-in-edit-mode\">\r\n                        <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"platform-text-color fix-selects-for-ios\">\r\n                            <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                            <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                            <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                            <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"show-in-edit-mode hide-sm\">\r\n                    <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover save-changes\">SAVE CHANGES</a>\r\n                    <a class=\"module platform-custom-button platform-background-color platform-border-color hover cancel-changes padding-left-10 padding-right-10 margin-left-5\" href=\"javascript:void(0);\">CANCEL</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row enableBlur\">\r\n            <div class=\"col-xs-12 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3 basic-admin-panel-apps-wrapper\">\r\n                <div class=\"hub-title\">\r\n                    <div class=\"hide-in-edit-mode padding-top-40 padding-top-xs-20 padding-bottom-10\">\r\n                        <h1 class=\"fs-30 fs-xs-22 calibri-bold text-center title-label platform-text-color\"></h1>\r\n                    </div>\r\n                    <div class=\"show-in-edit-mode padding-top-40 padding-top-xs-20 padding-bottom-10\">\r\n                        <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\r\n                            <label for=\"hub-title\" class=\"active-label platform-color\">Title:</label>\r\n                            <input type=\"text\" id=\"hub-title\" class=\"full-rounded form-field colorful-border platform-border-color\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container-fluid dentist-helper text-center padding-top-10 padding-bottom-10\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12\">\r\n                <div class=\"wrapper fs-0\">\r\n                    <div class=\"text fs-16 inline-block-top\">{{'dentist-helper' | translate}}</div>\r\n                    <div class=\"close-dentist-helper inline-block-top text-right\">\r\n                        <a href=\"javascript:void(0);\" class=\"fs-30 line-height-24\">Ã</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"container padding-top-20 padding-bottom-15\">\r\n        <div class=\"row enableBlur\">\r\n            <div class=\"col-xs-12 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3 basic-admin-panel-apps-wrapper\">\r\n                <div class=\"row fs-0 apps-list\" [attr.data-account-section-url]=\"myAccountLink\">\r\n                    <div class=\"col-xs-4 text-center padding-bottom-15 inline-block-top single-app empty\">\r\n                        <div class=\"wrapper\">\r\n                            <button class=\"fs-60 line-height-60 calibri-bold add-app platform-color-important platform-border-color important\" [attr.data-default-apps-title]=\"'default-apps-title' | translate\" [attr.data-adding-custom-app-title]=\"'adding-custom-app-title' | translate\">+</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"row mobile-btns-row show-on-sm padding-top-30 padding-bottom-20 enableBlur\">\r\n            <div class=\"col-xs-6 padding-right-5 text-right hide-in-edit-mode\">\r\n                <a (click)=\"this.redirectsService.redirectToMyPatients()\" class=\"module platform-custom-button-opposite-colors inline-block platform-color platform-border-color hover padding-left-10 padding-right-10\">Admin</a>\r\n            </div>\r\n            <div class=\"col-xs-6 padding-left-5 hide-in-edit-mode\">\r\n                <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover edit-page inline-block padding-left-10 padding-right-10\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> {{'edit-page' | translate}}</a>\r\n            </div>\r\n            <div class=\"col-xs-12 text-center show-in-edit-mode\">\r\n                <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover save-changes padding-left-10 padding-right-10\">SAVE CHANGES</a>\r\n                <a class=\"module platform-custom-button platform-background-color platform-border-color hover cancel-changes padding-left-10 padding-right-10 margin-left-5\" href=\"javascript:void(0);\">CANCEL</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {RedirectsService} from '../../_services/redirects.service';\nimport {LanguageService} from '../../_services/language.service';\nimport {AdditionalService} from '../../_services/additional.service';\n// import * as $ from 'jquery';\n\n@Component({\n    selector: 'app-basic-admin-panel',\n    templateUrl: './basic-admin-panel.component.html'\n})\nexport class BasicAdminPanelComponent implements OnInit {\n    public myAccountLink: string;\n\n    constructor(public translate: TranslateService, public redirectsService: RedirectsService, public languageService: LanguageService, public additionalService: AdditionalService) {\n    }\n\n    ngOnInit() {\n        this.myAccountLink = this.additionalService.generateAccountLink();\n    }\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {environment} from './../environments/environment';\r\n\r\nimport { PatientLoginPageComponent } from './patient-login-page/patient-login-page.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { BasicAdminPanelComponent } from './admin/basic-admin-panel/basic-admin-panel.component';\r\nimport { AdvancedAdminPanelComponent } from './admin/advanced-admin-panel/advanced-admin-panel.component';\r\nimport { PushNotificationsComponent } from './admin/advanced-admin-panel/push-notifications/push-notifications.component';\r\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\r\nimport { FrontEndLanguageComponent } from './front-end-language/front-end-language.component';\r\nimport { VerifyAccountComponent } from './verify-account/verify-account.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LandingPageComponent } from './landing-page/landing-page.component';\r\nimport { MyWalletComponent } from './my-wallet/my-wallet.component';\r\nimport { EditAccountComponent } from './edit-account/edit-account.component';\r\nimport { ManagePrivacyComponent } from './manage-privacy/manage-privacy.component';\r\nimport { LoggedInWrapperComponent } from './logged-in-wrapper/logged-in-wrapper.component';\r\nimport { RequestAccountComponent } from './request-account/request-account.component';\r\nimport { ForgottenPasswordComponent } from './forgotten-password/forgotten-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { NotLoggedInWrapperComponent } from './not-logged-in-wrapper/not-logged-in-wrapper.component';\r\nimport { PatientRegisterByInviteComponent } from './patient-register-by-invite/patient-register-by-invite.component';\r\nimport { DentistRequestAccountComponent } from './dentist-request-account/dentist-request-account.component';\r\nimport { MyPatientsComponent } from './admin/advanced-admin-panel/my-patients/my-patients.component';\r\n\r\n/*const routes: Routes = [\r\n    {path: '', pathMatch: 'full', redirectTo: '/' + environment.default_language},\r\n    {path: ':lang', component: FrontEndLanguageComponent, children: [\r\n            {path: '', component: LoggedInWrapperComponent, children: [\r\n                    {path: '', component: HomeComponent},\r\n                    /!*{path: 'my-wallet', component: MyWalletComponent},\r\n                    {path: 'edit-account', component: EditAccountComponent},\r\n                    {path: 'manage-privacy', component: ManagePrivacyComponent},*!/\r\n                ]},\r\n            {path: '', component: NotLoggedInWrapperComponent, children: [\r\n                    {path: 'dentist-request-account', component: DentistRequestAccountComponent},\r\n                    {path: 'request-account', component: RequestAccountComponent},\r\n                    {path: 'login', component: PatientLoginPageComponent},\r\n                    {path: 'patient-register-by-invite', component: PatientRegisterByInviteComponent},\r\n                    /!*{path: 'forgotten-password', component: ForgottenPasswordComponent},\r\n                    {path: 'change-password/:token', component: ChangePasswordComponent},\r\n                    {path: 'verify-account', children: [\r\n                        {path: ':token', component: VerifyAccountComponent}\r\n                    ]},*!/\r\n                ]},\r\n            {path: 'admin-login', component: AdminLoginComponent},\r\n            {path: 'admin', component: AdminComponent,\r\n                children: [\r\n                    {\r\n                        path: '',\r\n                        component: BasicAdminPanelComponent\r\n                    },\r\n                    {\r\n                        path: 'advanced',\r\n                        component: AdvancedAdminPanelComponent,\r\n                        children: [\r\n                            {\r\n                                path: 'my-patients',\r\n                                component: MyPatientsComponent\r\n                            },\r\n                            {\r\n                                path: 'push-notifications',\r\n                                component: PushNotificationsComponent\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }\r\n        ]},\r\n    {path: '**', redirectTo: '/' + environment.default_language}\r\n];*/\r\n\r\nconst routes: Routes = environment.hybrid ? [\r\n    {path: '', pathMatch: 'full', redirectTo: '/' + environment.default_language},\r\n    {path: ':lang', component: FrontEndLanguageComponent, children: [\r\n        {path: '', component: LoggedInWrapperComponent, children: [\r\n            {path: '', component: HomeComponent}\r\n        ]},\r\n        {path: '', component: NotLoggedInWrapperComponent, children: [\r\n            {path: 'dentist-request-account', component: DentistRequestAccountComponent},\r\n            {path: 'request-account', component: RequestAccountComponent},\r\n            {path: 'login', component: PatientLoginPageComponent},\r\n            {path: 'patient-register-by-invite', component: PatientRegisterByInviteComponent}\r\n        ]}\r\n    ]},\r\n    {path: '**', redirectTo: '/' + environment.default_language}\r\n] : [\r\n    {path: '', pathMatch: 'full', redirectTo: '/' + environment.default_language},\r\n    {path: ':lang', component: FrontEndLanguageComponent, children: [\r\n        {path: '', component: LandingPageComponent},\r\n        {path: '', component: LoggedInWrapperComponent, children: [\r\n            {path: 'patients', component: HomeComponent}\r\n        ]},\r\n        {path: '', component: NotLoggedInWrapperComponent, children: [\r\n            {path: 'dentist-request-account', component: DentistRequestAccountComponent},\r\n            {path: 'request-account', component: RequestAccountComponent},\r\n            {path: 'login', component: PatientLoginPageComponent},\r\n            {path: 'patient-register-by-invite', component: PatientRegisterByInviteComponent}\r\n        ]},\r\n        {path: 'admin-login', component: AdminLoginComponent},\r\n        {path: 'admin', component: AdminComponent,\r\n            children: [\r\n                {\r\n                    path: '',\r\n                    component: BasicAdminPanelComponent\r\n                },\r\n                {\r\n                    path: 'advanced',\r\n                    component: AdvancedAdminPanelComponent,\r\n                    children: [\r\n                        {\r\n                            path: 'my-patients',\r\n                            component: MyPatientsComponent\r\n                        },\r\n                        {\r\n                            path: 'push-notifications',\r\n                            component: PushNotificationsComponent\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]},\r\n    {path: '**', redirectTo: '/' + environment.default_language}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n\r\nexport const routingComponents = [FrontEndLanguageComponent, PatientLoginPageComponent, BasicAdminPanelComponent, AdminComponent, AdvancedAdminPanelComponent, PushNotificationsComponent, AdminLoginComponent, VerifyAccountComponent, HomeComponent, LandingPageComponent, MyWalletComponent, EditAccountComponent, ManagePrivacyComponent, LoggedInWrapperComponent, RequestAccountComponent, ForgottenPasswordComponent, ChangePasswordComponent, NotLoggedInWrapperComponent, PatientRegisterByInviteComponent, DentistRequestAccountComponent, MyPatientsComponent];\r\n","<div class=\"main-content\" [attr.data-lang]=\"translate.currentLang\" [attr.hybrid]=\"hybrid ? 'true' : null\" [attr.data-dentacoinDomain]=\"dentacoinDomain\" [attr.data-production]=\"production\">\r\n    <router-outlet></router-outlet>\r\n</div>\r\n<div class=\"mobile-app-banner\" [attr.data-banner-title-desktop]=\"this.translate.instant('banner-title-desktop')\" [attr.data-banner-title-mobile]=\"this.translate.instant('banner-title-mobile')\"></div>","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {environment} from '../environments/environment';\nimport {AdditionalService} from './_services/additional.service';\nimport {RedirectsService} from './_services/redirects.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n    hybrid = environment.hybrid;\n    dentacoinDomain = environment.dentacoinDomain;\n    production = environment.production;\n\n    constructor(public translate: TranslateService, public additionalService: AdditionalService, public redirectsService: RedirectsService) {\n\n    }\n\n    ngOnInit() {\n        document.addEventListener('hideLoader', (e: any) => {\n            this.additionalService.hideLoader();\n        });\n\n        document.addEventListener('showLoader', (e: any) => {\n            this.additionalService.showLoader();\n        });\n\n        document.addEventListener('redirectToPatientsRegisterByInvite', (e: any) => {\n            this.redirectsService.redirectToPatientInvite(e.detail.response_data.invite, e.detail.response_data.inviteId);\n        });\n    }\n}","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {AppRoutingModule, routingComponents} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { AccountSidebarComponent } from './partials/account-sidebar/account-sidebar.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        routingComponents,\n        AccountSidebarComponent,\n        LandingPageComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n\n        // ngx-translate and the loader module\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/languages/');\n}","import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {AuthenticationServiceService} from \"../_services/authentication-service.service\";\nimport {RedirectsService} from \"../_services/redirects.service\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"../../../node_modules/@angular/common/http\";\nimport {AdditionalService} from \"../_services/additional.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LanguageService} from \"../_services/language.service\";\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: './change-password.component.html'\n})\nexport class ChangePasswordComponent implements OnInit {\n    changePasswordForm: FormGroup;\n    changePasswordFormSubmitted = false;\n    differentPasswords = false;\n    failedChangePassword = false;\n\n    constructor(public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public http: HttpClient, public activatedRoute: ActivatedRoute, public redirectsService: RedirectsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.changePasswordForm = this.formBuilder.group({\n                password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ])),\n                repeat_password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ]))\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get change_password_form_data() {\n        return this.changePasswordForm.controls;\n    }\n\n    // dentist trying to log in\n    onchangePasswordFormSubmit() {\n        this.differentPasswords = false;\n        this.changePasswordFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.changePasswordForm.invalid) {\n            return;\n        }\n\n        if (this.change_password_form_data.password.value.trim() !== this.change_password_form_data.repeat_password.value.trim()) {\n            this.differentPasswords = true;\n            return;\n        }\n\n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n\n        this.activatedRoute.params.subscribe( (params: Params) => {\n            this.additionalService.showLoader();\n            const body = new HttpParams().set('recoverToken', '123').set('password', this.change_password_form_data.password.value.trim());\n            this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/change-password', body.toString(), ParseHeaders).subscribe({\n                next: (response: any) => {\n                    this.additionalService.hideLoader();\n                    if (response.success) {\n                        this.redirectsService.redirectToPatientLogin('change-password');\n                    } else if (response.errors) {\n                        this.failedChangePassword = true;\n                    }\n                },\n                error: error => this.authenticationServiceService.logout('patient')\n            });\n        });\n    }\n}\n","<div class=\"row padding-top-50 padding-top-xs-15 padding-top-sm-15 dentist-request-account\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 max-width-xs-100 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-36 fs-xs-26 lato-bold padding-top-10 padding-top-xs-0\">{{'dentist-request-account-title' | translate}}</h1>\n        <h2 class=\"fs-20 lato-light padding-bottom-30 padding-bottom-xs-10\">{{'dentist-request-account-subtitle' | translate}}</h2>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n        <form [formGroup]=\"dentistRequestAccountForm\" (ngSubmit)=\"onAccountRequestFormSubmit()\">\n            <div class=\"success-handle margin-bottom-20\" *ngIf=\"sendRequestSucceed\">{{'request-account-thank-you' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20\" *ngIf=\"sendRequestFailed\">{{'request-account-saving-failed' | translate}}</div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-name\" class=\"platform-color\">{{'fullName-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-name\" formControlName=\"fullName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.fullName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.fullName.errors.required\">{{'fullName-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.fullName.hasError('maxlength')\">{{'fullName-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-email\" class=\"platform-color\">{{'email-label' | translate}}</label>\n                    <input maxlength=\"100\" type=\"text\" id=\"request-account-email\" formControlName=\"email\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.email.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.email.errors.required\">{{'email-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.email.errors.email\">{{'valid-email' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-practice\" class=\"platform-color\">{{'practice-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-practice\" formControlName=\"practice\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.practice.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.practice.errors.required\">{{'practice-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.practice.hasError('maxlength')\">{{'practice-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\" *ngIf=\"(showCountries == true)\">\n                <div class=\"custom-google-select-style module\">\n                    <label class=\"platform-color\" for=\"country\">{{'country-label' | translate}}</label>\n                    <select id=\"country\" class=\"platform-border-color\" formControlName=\"country\">\n                        <option [selected]=\"true\">Select country:</option>\n                        <ng-container *ngFor=\"let item of countriesList | keyvalue\">\n                            <option value=\"{{item.value.code}}\">{{item.value.name}}</option>\n                        </ng-container>\n                    </select>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.country.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.country.errors.required\">{{'country-required' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-phone\" class=\"platform-color\">{{'phone-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"20\" id=\"request-account-phone\" formControlName=\"phone\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.phone.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.phone.errors.required\">{{'phone-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.phone.hasError('maxlength')\">{{'phone-max-length-validation' | translate}}</div>\n                </div>\n                <div class=\"error-handle\" *ngIf=\"notValidPhone\">{{'not-valid-phone' | translate}}</div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-website\" class=\"platform-color\">{{'website-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"500\" id=\"request-account-website\" formControlName=\"website\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.website.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.website.errors.required\">{{'website-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.website.hasError('maxlength')\">{{'website-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"patient-register-checkboxes padding-top-15 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"privacy-policy-registration-patient\" formControlName=\"privacyPolicy\"/>\n                    <label class=\"fs-15 custom-checkbox-label\" for=\"privacy-policy-registration-patient\">{{'i-agree' | translate}} <a href='https://dentacoin.com/privacy-policy' class='in-app-browser-link platform-color lato-bold' target='_blank'>{{'privacy-policy' | translate}}</a> {{'i-agree-end' | translate}}.</label>\n                </div>\n                <div class=\"error-handle\" *ngIf=\"isDentistPrivacyAccepted.invalid\">{{'privacy-policy-agree' | translate}}</div>\n            </div>\n            <div class=\"padding-top-30 text-center\">\n                <button class=\"module lato-bold platform-custom-button platform-background-color platform-border-color hover\">{{'request-account-button' | translate}}</button>\n            </div>\n            <div class=\"links-below-form margin-0-auto padding-top-20 margin-top-50 padding-bottom-10 text-center fs-16 platform-color\">\n                <a [routerLink]=\"['/'+translate.currentLang]\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'go-back' | translate}}</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n  selector: 'app-dentist-request-account',\n  templateUrl: './dentist-request-account.component.html'\n})\nexport class DentistRequestAccountComponent implements OnInit {\n    dentistRequestAccountForm: FormGroup;\n    dentistRequestAccountFormSubmitted: boolean = false;\n    sendRequestSucceed: boolean = false;\n    sendRequestFailed: boolean = false;\n    public notValidPhone: boolean = false;\n    public showCountries: boolean = false;\n    countriesList = {};\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public requestsService: RequestsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.requestsService.getCountries().subscribe((response: any) => {\n                if (response.success && response.data) {\n                    this.countriesList = response.data;\n                    this.showCountries = true;\n                }\n            });\n\n            this.dentistRequestAccountForm = this.formBuilder.group({\n                fullName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(100)\n                ])),\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ])),\n                practice: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(200)\n                ])),\n                country: new FormControl('', Validators.compose([\n                    Validators.required\n                ])),\n                phone: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(20)\n                ])),\n                website: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(500)\n                ])),\n                privacyPolicy: new FormControl('', Validators.requiredTrue)\n            });\n        }\n    }\n\n    get isDentistPrivacyAccepted() {\n        return this.dentistRequestAccountForm.get('privacyPolicy');\n    }\n\n    // convenience getter for easy access to form fields\n    get dentist_request_form_data() { return this.dentistRequestAccountForm.controls; }\n\n    // on request form account submit\n    onAccountRequestFormSubmit() {\n        this.additionalService.showLoader();\n        this.dentistRequestAccountFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.dentistRequestAccountForm.invalid) {\n            this.additionalService.hideLoader();\n            return;\n        }\n\n        let paramsMap = new Map<any,any>();\n        paramsMap.set('fullName', this.dentist_request_form_data.fullName.value);\n        paramsMap.set('email', this.dentist_request_form_data.email.value);\n        paramsMap.set('practice', this.dentist_request_form_data.practice.value);\n        paramsMap.set('country', this.dentist_request_form_data.country.value);\n        paramsMap.set('phone', this.dentist_request_form_data.phone.value);\n        paramsMap.set('website', this.dentist_request_form_data.website.value);\n\n        let params = new HttpParams();\n        paramsMap.forEach((value: any, key: any) => {\n            params = params.set(key, value);\n        });\n\n        this.requestsService.validatePhone(new HttpParams().set('phone', this.dentist_request_form_data.phone.value).set('country_code', this.dentist_request_form_data.country.value).toString()).subscribe((validatePhoneResponse: any) => {\n            if (validatePhoneResponse.success) {\n                this.requestsService.dentistSendRequestAccountMail(params.toString()).subscribe((response: any) => {\n                    if (response.success) {\n                        this.dentistRequestAccountForm.reset();\n\n                        Object.keys(this.dentistRequestAccountForm.controls).forEach(key => {\n                            this.dentistRequestAccountForm.get(key).setErrors(null) ;\n                        });\n\n                        this.sendRequestSucceed = true;\n                        this.sendRequestFailed = false;\n                        this.additionalService.hideLoader();\n                    } else {\n                        this.sendRequestFailed = true;\n                        this.sendRequestSucceed = false;\n                        this.additionalService.hideLoader();\n                    }\n                });\n            } else {\n                this.notValidPhone = true;\n                this.additionalService.hideLoader();\n            }\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpParams} from '../../../node_modules/@angular/common/http';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {AdditionalService} from '../_services/additional.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-account',\r\n  templateUrl: './edit-account.component.html'\r\n})\r\n\r\nexport class EditAccountComponent implements OnInit {\r\n    patientsEditAccountForm: FormGroup;\r\n    patientsEditAccountFormSubmitted = false;\r\n    public showCountries: boolean = false;\r\n    countriesList = {};\r\n    public showTitles: boolean = false;\r\n    titlesList = {};\r\n    patientData = {};\r\n    patientName: string;\r\n    patientEncryptedPassword: string;\r\n    public editAccountSuccess: boolean = false;\r\n    public editAccountFailed: boolean = false;\r\n    public editPasswordFailed: boolean = false;\r\n    public passwordsNotMatching: boolean = false;\r\n    public updateCoreDBData: boolean = false;\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public formBuilder: FormBuilder, public requestsService: RequestsService, public additionalService: AdditionalService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        } else {\r\n            this.additionalService.showLoader();\r\n\r\n            this.patientsEditAccountForm = this.formBuilder.group({\r\n                title: new FormControl('', Validators.compose([\r\n                    Validators.required\r\n                ])),\r\n                firstName: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.maxLength(100)\r\n                ])),\r\n                lastName: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.maxLength(100)\r\n                ])),\r\n                phone: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.maxLength(20)\r\n                ])),\r\n                country: new FormControl('', Validators.compose([\r\n                    Validators.required\r\n                ])),\r\n                password: new FormControl('', Validators.compose([\r\n                    Validators.minLength(6), Validators.maxLength(20)\r\n                ])),\r\n                repeatPassword: new FormControl('', Validators.compose([\r\n                    Validators.minLength(6), Validators.maxLength(20)\r\n                ]))\r\n            });\r\n\r\n            this.requestsService.getCountries().subscribe((response: any) => {\r\n                if (response.success && response.data) {\r\n                    this.countriesList = response.data;\r\n                    this.showCountries = true;\r\n                }\r\n            });\r\n\r\n            this.requestsService.getTitles().subscribe({\r\n                next: (response:any) => {\r\n                    if (response.success && response.data) {\r\n                        this.titlesList = response.data.titles;\r\n                        this.showTitles = true;\r\n                    }\r\n                },\r\n                error: error => this.authenticationServiceService.logout('patient')\r\n            });\r\n\r\n            this.requestsService.getUserData(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n                next: (response:any) => {\r\n                    this.additionalService.hideLoader();\r\n                    if (response.success && response.data) {\r\n                        this.patientData = response.data;\r\n                        this.patientName = response.data.name;\r\n                        this.patientEncryptedPassword = response.data.password;\r\n                        if (response.data.title !== '' && response.data.title !== null) {\r\n                            this.patientsEditAccountForm.controls['title'].setValue(response.data.title);\r\n                        }\r\n                        if (response.data.name !== '' && response.data.name !== null) {\r\n                            this.patientsEditAccountForm.controls['firstName'].setValue(response.data.name);\r\n                        }\r\n                        if (response.data.phone !== '' && response.data.phone !== null) {\r\n                            this.patientsEditAccountForm.controls['phone'].setValue(response.data.phone);\r\n                        }\r\n                        if (response.data.country !== '' && response.data.country !== null) {\r\n                            this.patientsEditAccountForm.controls['country'].setValue(response.data.country);\r\n                        }\r\n                    }\r\n                },\r\n                error: error => this.authenticationServiceService.logout('patient')\r\n            });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get patients_edit_account_form_data() { return this.patientsEditAccountForm.controls; }\r\n\r\n    // patient trying to log in\r\n    onPatientsEditAccountFormSubmit() {\r\n        this.additionalService.showLoader();\r\n\r\n        this.patientsEditAccountFormSubmitted = true;\r\n        let paramsMap = new Map<any,any>();\r\n        paramsMap.set('title', this.patients_edit_account_form_data.title.value);\r\n        paramsMap.set('name', this.patients_edit_account_form_data.firstName.value);\r\n        paramsMap.set('phone', this.patients_edit_account_form_data.phone.value);\r\n        paramsMap.set('country', this.patients_edit_account_form_data.country.value);\r\n\r\n        let coreDBparamsMap = new Map<any,any>();\r\n\r\n        if (this.patients_edit_account_form_data.password.value.trim() !== '' || this.patients_edit_account_form_data.repeatPassword.value.trim() !== '') {\r\n            if (this.patients_edit_account_form_data.password.value.trim() !== this.patients_edit_account_form_data.repeatPassword.value.trim()) {\r\n                this.passwordsNotMatching = true;\r\n            } else {\r\n                this.passwordsNotMatching = false;\r\n                this.updateCoreDBData = true;\r\n                paramsMap.set('password', this.patients_edit_account_form_data.password.value.trim());\r\n                coreDBparamsMap.set('password', this.patients_edit_account_form_data.password.value.trim());\r\n                coreDBparamsMap.set('repeat-password', this.patients_edit_account_form_data.repeatPassword.value.trim());\r\n            }\r\n        }\r\n\r\n        if (this.patients_edit_account_form_data.firstName.value.trim() !== '' || this.patients_edit_account_form_data.lastName.value.trim() !== '') {\r\n            this.updateCoreDBData = true;\r\n            coreDBparamsMap.set('name', this.patients_edit_account_form_data.firstName.value.trim() + ' ' + this.patients_edit_account_form_data.lastName.value.trim());\r\n        }\r\n\r\n        // stop here if form is invalid\r\n        if (this.patientsEditAccountForm.invalid || this.passwordsNotMatching) {\r\n            window.scrollTo(0, 0);\r\n            this.additionalService.hideLoader();\r\n            return;\r\n        }\r\n\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n\r\n        let coreDBparams = new HttpParams();\r\n        coreDBparamsMap.forEach((value: any, key: any) => {\r\n            coreDBparams = coreDBparams.set(key, value);\r\n        });\r\n\r\n        this.requestsService.editProfile(coreDBparams.toString(), JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n            next: (response: any) => {\r\n                if (response.success) {\r\n                    this.additionalService.hideLoader();\r\n                    this.patientsEditAccountForm.controls['password'].setValue('');\r\n                    this.patientsEditAccountForm.controls['repeatPassword'].setValue('');\r\n                    this.editAccountSuccess = true;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.additionalService.hideLoader();\r\n                    this.patientsEditAccountForm.controls['password'].setValue('');\r\n                    this.patientsEditAccountForm.controls['repeatPassword'].setValue('');\r\n                    this.editPasswordFailed = true;\r\n                    window.scrollTo(0, 0);\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-forgotten-password',\n    templateUrl: './forgotten-password.component.html'\n})\nexport class ForgottenPasswordComponent implements OnInit {\n    forgottenPasswordForm: FormGroup;\n    forgottenPasswordFormSubmitted = false;\n    sendFormSucceed = false;\n    sendFormFailed = false;\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public requestsService: RequestsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.forgottenPasswordForm = this.formBuilder.group({\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ]))\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get forgotten_password_form_data() {\n        return this.forgottenPasswordForm.controls;\n    }\n\n    // on request form account submit\n    onForgottenPasswordFormSubmit() {\n        this.additionalService.showLoader();\n        this.forgottenPasswordFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.forgottenPasswordForm.invalid) {\n            this.additionalService.hideLoader();\n            return;\n        }\n\n        let paramsMap = new Map<any, any>();\n        paramsMap.set('email', this.forgotten_password_form_data.email.value);\n        paramsMap.set('type_language', this.translate.currentLang);\n\n        let params = new HttpParams();\n        paramsMap.forEach((value: any, key: any) => {\n            params = params.set(key, value);\n        });\n\n        this.requestsService.requestForgottenPasswordToken(params.toString()).subscribe((response: any) => {\n            if (response.success) {\n                this.forgottenPasswordForm.reset();\n\n                Object.keys(this.forgottenPasswordForm.controls).forEach(key => {\n                    this.forgottenPasswordForm.get(key).setErrors(null);\n                });\n\n                this.sendFormSucceed = true;\n                this.sendFormFailed = false;\n                this.additionalService.hideLoader();\n            } else {\n                this.sendFormFailed = true;\n                this.sendFormSucceed = false;\n                this.additionalService.hideLoader();\n            }\n        });\n    }\n\n}\n","<router-outlet></router-outlet>","import {Component, NgZone, OnInit} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Router} from '@angular/router';\nimport {environment} from './../../environments/environment.prod';\nimport {RedirectsService} from '../_services/redirects.service';\n\n@Component({\n    selector: 'app-front-end-language',\n    template: '<router-outlet></router-outlet>'\n})\nexport class FrontEndLanguageComponent implements OnInit {\n    channelArray: Array<string> = ['de', 'en'];\n    exceptions: Array<string> = ['apple-app-site-association', 'hubapp.dentacoin.com#apple-app-site-association'];\n\n    constructor(public activatedRoute: ActivatedRoute, public translate: TranslateService, public router: Router, public redirectsService: RedirectsService, private ngZone: NgZone) {\n    }\n\n    ngOnInit() {\n        this.activatedRoute.params.subscribe( (params : Params) => {\n            if (this.exceptions.indexOf(params['lang']) === -1) {\n                if (this.channelArray.indexOf(params['lang']) > -1) {\n                    this.translate.use(params['lang']);\n                } else if (params['lang'] === 'admin') {\n                    this.translate.use(environment.default_language);\n                    this.redirectsService.redirectToAdmin();\n                }  else {\n                    this.translate.use(environment.default_language);\n                    if (params.hasOwnProperty('lang')) {\n                        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/' + params['lang'])).then();\n                    } else {\n                        this.router.navigateByUrl(environment.default_language);\n                    }\n                }\n            }\n        });\n    }\n\n}","<div class=\"container homepage-container\">\r\n    <div class=\"row\">\r\n        <div class=\"{{pageColumnClass}}\">\r\n            <h1 class=\"platform-text-color fs-30 fs-xs-22 calibri-bold text-center title-label padding-top-45 padding-top-xs-10 padding-bottom-50 padding-bottom-xs-25\" *ngIf=\"(translate.currentLang == 'en')\" [innerHTML]=\"hubTitleEn\"></h1>\r\n            <h1 class=\"platform-text-color fs-30 fs-xs-22 calibri-bold text-center title-label padding-top-45 padding-top-xs-10 padding-bottom-50 padding-bottom-xs-25\" *ngIf=\"(translate.currentLang == 'de')\" [innerHTML]=\"hubTitleDe\">}</h1>\r\n            <div class=\"row fs-0 apps-list\">\r\n                <ng-container *ngFor=\"let application of applications; index as i;\">\r\n                    <div class=\"{{applicationsColumnClass}} text-center padding-bottom-20 padding-left-20 padding-right-20 padding-left-xs-10 padding-right-xs-10 inline-block-top single-app\" [attr.data-id]=\"application.id\" *ngIf=\"(translate.currentLang == 'en' && (application.name_en != '' || application.description_en != ''))\">\r\n                        <a href=\"{{application.url}}\" [attr.data-phone]=\"application.type == 'phone' ? 'true' : null\" [attr.target]=\"application.type == 'phone' ? '_self' : '_blank'\" class=\"platform-text-color in-app-browser-link\">\r\n                            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" *ngIf=\"(application.resource_type == 'image')\">\r\n                                <img alt=\"\" class=\"width-100 app-media\" itemprop=\"contentUrl\" src=\"{{application.media}}\"/>\r\n                            </figure>\r\n                            <div *ngIf=\"(application.resource_type == 'svg')\" class=\"svg-parent\" [attr.data-svg]=\"application.media\"></div>\r\n                            <h2 class=\"platform-text-color fs-17 fs-xs-16 padding-top-10 calibri-bold app-name\">{{application.name_en}}</h2>\r\n                            <p class=\"platform-text-color fs-15 fs-xs-14 line-height-16 app-description\">{{application.description_en}}</p>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"{{applicationsColumnClass}} text-center padding-bottom-20 padding-left-20 padding-right-20 padding-left-xs-10 padding-right-xs-10 inline-block-top single-app\" [attr.data-id]=\"application.id\" *ngIf=\"(translate.currentLang == 'de' && (application.name_de != '' || application.description_de != ''))\">\r\n                        <a href=\"{{application.url}}\" [attr.data-phone]=\"application.type == 'phone' ? 'true' : null\" [attr.target]=\"application.type == 'phone' ? '_self' : '_blank'\" class=\"platform-text-color in-app-browser-link\">\r\n                            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" *ngIf=\"(application.resource_type == 'image')\">\r\n                                <img alt=\"\" class=\"width-100 app-media\" itemprop=\"contentUrl\" src=\"{{application.media}}\"/>\r\n                            </figure>\r\n                            <div *ngIf=\"(application.resource_type == 'svg')\" class=\"svg-parent\" [attr.data-svg]=\"application.media\"></div>\r\n                            <h2 class=\"platform-text-color fs-17 fs-xs-16 padding-top-10 calibri-bold app-name\">{{application.name_de}}</h2>\r\n                            <p class=\"platform-text-color fs-15 fs-xs-14 line-height-16 app-description\">{{application.description_de}}</p>\r\n                        </a>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {HttpHeaders, HttpParams} from '../../../node_modules/@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    public applications = [];\r\n    public pageColumnClass: string = 'col-xs-12 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3';\r\n    public applicationsColumnClass: string = 'col-xs-4';\r\n    public hubTitleEn: string;\r\n    public hubTitleDe: string;\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService, public translate: TranslateService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        } else {\r\n            this.requestsService.getDentistData(JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).subscribe((response: any) => {\r\n                this.requestsService.getDentistSlug(new HttpParams().set('id', JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).toString()).subscribe((dentistSlugResponse: any) => {\r\n                    console.log(dentistSlugResponse, 'dentistSlugResponse');\r\n\r\n                    this.hubTitleEn = response.data.hub_title_en;\r\n                    this.hubTitleDe = response.data.hub_title_de;\r\n                    this.applications = Object.keys(response.data.applications).map(i => response.data.applications[i]);\r\n\r\n                    if (this.applications.length) {\r\n                        for (let i = 0; i < this.applications.length; i += 1) {\r\n                            // setting dynamic dentist trp profile link\r\n                            if (this.applications[i].url.includes('reviews.dentacoin.com') && dentistSlugResponse.success) {\r\n                                // setting up trp link to head to dentist profile and cross login\r\n                                this.applications[i].url = this.applications[i].url + '/custom-cookie?slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_token) + '&dentist_slug=' + dentistSlugResponse.data;\r\n                            } else if (this.applications[i].url.includes('dentavox.dentacoin.com') || this.applications[i].url.includes('assurance.dentacoin.com')) {\r\n                                // setting up dentavox and assurance cross login\r\n                                this.applications[i].url = this.applications[i].url + '/custom-cookie?slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_token);\r\n                            }\r\n\r\n                            if (this.applications[i].resource_type === 'svg') {\r\n                                this.applications[i].media = encodeURIComponent(this.applications[i].media);\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (this.applications.length >= 7) {\r\n                        this.pageColumnClass = 'col-xs-12 col-md-8 col-md-offset-2';\r\n                        this.applicationsColumnClass = 'col-xs-4 col-sm-3';\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport interface DentistDataObject {\r\n    hubTitleEn: string;\r\n    hubTitleDe: string;\r\n}","<div class=\"landing-page-container\">\r\n    <section class=\"container-fluid padding-top-15 padding-bottom-10 section-header\" [attr.data-loggedin]=\"isNotAPartnerDentistLoggedIn == true ? 'true' : null\">\r\n        <div class=\"row\">\r\n            <figure itemscope=\"\" itemtype=\"http://schema.org/Organization\" class=\"col-xs-4 padding-right-xs-0\">\r\n                <a itemprop=\"url\" routerLink=\"/\">\r\n                    <img src=\"assets/images/hub-app-white-logo-with-text.svg\" itemprop=\"logo\" alt=\"Dentacoin logo\" class=\"max-width-150 width-100\"/>\r\n                </a>\r\n            </figure>\r\n            <div class=\"col-xs-8 text-right\">\r\n                <a [routerLink]=\"['/'+translate.currentLang+'/admin-login']\" *ngIf=\"isNotAPartnerDentistLoggedIn == false\" itemprop=\"url\" class=\"module black-white-button\">SIGN IN</a>\r\n                <div *ngIf=\"isNotAPartnerDentistLoggedIn == true\" class=\"fs-14 inline-block-top padding-bottom-15 logged-in-content\">\r\n                    <div class=\"inline-block\">\r\n                        <div class=\"padding-bottom-5\">{{dentistData.name}}</div>\r\n                        <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\r\n                    </div>\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block margin-left-15 max-width-40 dentist-avatar\">\r\n                        <img alt=\"Dentist avatar\" class=\"width-100\" src=\"{{dentistData.avatar_url}}\"/>\r\n                    </figure>\r\n                    <div class=\"logout-button\">\r\n                        <span class=\"up-arrow\">â²</span>\r\n                        <a href=\"javascript:void(0)\" itemprop=\"url\" class=\"inline-block logout margin-right-15\" (click)=\"this.authenticationServiceService.logout('dentist')\">\r\n                            <span class=\"inline-block fs-16\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i> {{'admin-menu-element-logout' | translate}}</span>\r\n                        </a>\r\n                        <a href=\"{{myAccountLink}}\" target=\"_blank\" itemprop=\"url\" class=\"inline-block module white-light-blue-button lato-bold my-account\">My Account</a>\r\n                    </div>\r\n                </div>\r\n                <!--<div class=\"lang-switcher inline-block-top margin-left-10\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"platform-text-color fix-selects-for-ios\">\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>-->\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section class=\"section-top-image\">\r\n        <div class=\"top-image-wrapper\">\r\n            <picture itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"top-image\">\r\n                <source media=\"(max-width: 768px)\" srcset=\"assets/images/mobile-image.png\">\r\n                <img alt=\"Header image\" src=\"assets/images/header-image.png\" itemprop=\"contentUrl\"/>\r\n            </picture>\r\n            <div class=\"top-image-description text-center-xs padding-bottom-xs-60\">\r\n                <h1 class=\"fs-46 fs-md-34 fs-xs-28 line-height-xs-32 line-height-54 fs-sm-26 line-height-sm-30 lato-bold color-black\">LAUNCH YOUR <br class=\"hide-xs\"> OWN LOYALTY APP</h1>\r\n                <div class=\"fs-28 fs-sm-20 fs-xs-20 lato-light padding-top-15 padding-bottom-25 padding-bottom-sm-15 padding-bottom-xs-15\">Retain and reward loyal patients at no cost</div>\r\n                <a [routerLink]=\"['/'+translate.currentLang+'/dentist-request-account']\" itemprop=\"url\" class=\"module white-light-blue-button fs-24 lato-bold padding-left-40 padding-right-40\">START NOW</a>\r\n            </div>\r\n        </div>\r\n        <div class=\"delimeter\">\r\n            <div class=\"line\"></div>\r\n            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"tile-image\">\r\n                <img alt=\"Tile image\" src=\"assets/images/absolute-element.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                <figcaption class=\"color-white lato-bold text-center fs-18 fs-xs-14 padding-bottom-20 padding-bottom-xs-10 padding-right-10\">NO DEVELOPMENT NEEDED</figcaption>\r\n            </figure>\r\n        </div>\r\n    </section>\r\n    <section class=\"section-everything-you-need\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 padding-top-100 padding-bottom-50 text-center padding-top-xs-60\">\r\n                    <h2 class=\"lato-bold fs-38 fs-xs-24 color-mid-gray\">EVERYTHING YOU NEED TO <br class=\"hide-xs\"> GET MORE LOYAL PATIENTS</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row fs-0 text-center-xs padding-bottom-xs-50\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"col-xs-12 col-sm-6 padding-right-60 inline-block padding-bottom-xs-20 padding-right-xs-15\">\r\n                    <img alt=\"Phone image\" src=\"assets/images/phone-img1.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                </figure>\r\n                <div class=\"col-xs-12 col-sm-6 color-black inline-block\">\r\n                    <h3 class=\"fs-36 line-height-40 fs-xs-26 line-height-xs-28 fs-sm-24 line-height-sm-28 lato-bold padding-bottom-15\">Use a ready mobile app with your patients</h3>\r\n                    <div class=\"fs-18 fs-xs-16\">Customize it with your own logo, colors, and shortcuts for appointments booking, your website,featured treatments and any other information you want to emphasize.</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row fs-0 flex text-center-xs padding-bottom-xs-50\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"col-xs-12 col-sm-7 inline-block padding-bottom-xs-20\">\r\n                    <img alt=\"Phone image\" src=\"assets/images/phone-img2.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                </figure>\r\n                <div class=\"col-xs-12 col-sm-5 color-black inline-block content\">\r\n                    <h3 class=\"fs-36 line-height-40 fs-xs-26 line-height-xs-28 fs-sm-24 line-height-sm-28 lato-bold padding-bottom-15\">Drive loyalty with free rewards for your patients</h3>\r\n                    <div class=\"fs-18 fs-xs-16\">Patients earn rewards in Dentacoin digital currency through the app for various  activities such as submitting an online review for your practice, participating in surveys on dental topics, and improving their oral care routine.</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row fs-0 text-center-xs\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"col-xs-12 col-sm-6 padding-right-60 inline-block padding-bottom-xs-20 padding-right-xs-15\">\r\n                    <img alt=\"Phone image\" src=\"assets/images/phone-img3.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                </figure>\r\n                <div class=\"col-xs-12 col-sm-6 color-black inline-block\">\r\n                    <h3 class=\"fs-36 line-height-40 fs-xs-26 line-height-xs-28 fs-sm-24 line-height-sm-28 lato-bold padding-bottom-15\">Deliver notifications to patientâs smart phone</h3>\r\n                    <div class=\"fs-18 fs-xs-16\">Send push notifications for promotions, special offers, change of hours and other updates to engage and keep in touch with patients. No coding experience needed!</div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 col-sm-10 col-sm-offset-1 text-center padding-top-50\">\r\n                    <div class=\"padding-bottom-80\">\r\n                        <a [routerLink]=\"['/'+translate.currentLang+'/dentist-request-account']\" itemprop=\"url\" class=\"module white-light-blue-button fs-24 lato-bold padding-left-40 padding-right-40\">START NOW</a>\r\n                    </div>\r\n                    <div class=\"small-delimeter-line\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <section class=\"section-how-it-works padding-bottom-120\">\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div class=\"col-xs-12 text-center\">\r\n                    <h2 class=\"lato-bold fs-38 fs-xs-24 color-mid-gray padding-top-30 padding-bottom-50\">HOW IT WORKS</h2>\r\n                </div>\r\n            </div>\r\n            <div class=\"row list-with-icons\">\r\n                <div class=\"col-xs-12 col-sm-10 col-sm-offset-1 fs-0\">\r\n                    <div class=\"padding-bottom-20 padding-bottom-xs-40\">\r\n                        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"icon inline-block\">\r\n                            <img alt=\"How it works image\" src=\"assets/images/steps-icon1.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                        </figure>\r\n                        <div class=\"content inline-block\"><span class=\"lato-bold fs-22 fs-xs-18\">Create a dentist profile on dentacoin.com</span>\r\n                            <a *ngIf=\"isNotAPartnerDentistLoggedIn == false\" href=\"https://dentacoin.com/?dcn-gateway-type=dentist-register\" target=\"_blank\" class=\"white-purple-gradient-button module lato-bold margin-left-25 padding-left-50 padding-right-50 fs-20\">SIGN UP</a>\r\n                            <span *ngIf=\"isNotAPartnerDentistLoggedIn == true\" class=\"white-gray-button-with-check module lato-bold margin-left-25 padding-left-30 padding-right-60 fs-20\">SIGNED</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"padding-bottom-20 padding-bottom-xs-40\">\r\n                        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"icon inline-block\">\r\n                            <img alt=\"How it works image\" src=\"assets/images/steps-icon2.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                        </figure>\r\n                        <div class=\"content inline-block\"><span class=\"lato-bold fs-22 fs-xs-18\">Wait for a verification email from the Onboarding Team</span></div>\r\n                    </div>\r\n                    <div class=\"padding-bottom-20 padding-bottom-xs-40\">\r\n                        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"icon inline-block\">\r\n                            <img alt=\"How it works image\" src=\"assets/images/steps-icon3.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                        </figure>\r\n                        <div class=\"content inline-block\"><span class=\"lato-bold fs-22 fs-xs-18\">Join Dentacoin partner network</span> <a [routerLink]=\"['/'+translate.currentLang+'/dentist-request-account']\" class=\"white-purple-gradient-button module lato-bold margin-left-25 padding-left-50 padding-right-50 fs-20\">JOIN NOW</a></div>\r\n                    </div>\r\n                    <div class=\"padding-bottom-20 padding-bottom-xs-40\">\r\n                        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"icon inline-block\">\r\n                            <img alt=\"How it works image\" src=\"assets/images/steps-icon4.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                        </figure>\r\n                        <div class=\"content inline-block\"><span class=\"lato-bold fs-22 fs-xs-18\">Access and customize your app screen</span></div>\r\n                    </div>\r\n                    <div class=\"padding-bottom-20 padding-bottom-xs-40\">\r\n                        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"icon inline-block\">\r\n                            <img alt=\"How it works image\" src=\"assets/images/steps-icon5.png\" itemprop=\"contentUrl\" class=\"width-100\"/>\r\n                        </figure>\r\n                        <div class=\"content inline-block\"><span class=\"lato-bold fs-22 fs-xs-18\">Invite patients to download your app</span></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </section>\r\n</div>\r\n<section class=\"section-footer padding-bottom-30 padding-top-40 color-white\">\r\n    <div class=\"container\">\r\n        <div class=\"row fs-0\">\r\n            <div class=\"col-xs-12 col-md-3 inline-block text-center-xs text-center-sm padding-bottom-xs-20 padding-bottom-sm-20\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/Organization\">\r\n                    <a itemprop=\"url\" href=\"//dentacoin.com\" class=\"fs-14\">\r\n                        <img src=\"assets/images/round-logo-white.svg\" itemprop=\"logo\" class=\"max-width-30\" alt=\"Dentacoin logo\"/>\r\n                        <span class=\"color-white padding-left-10 inline-block\">Powered by Dentacoin</span>\r\n                    </a>\r\n                </figure>\r\n            </div>\r\n            <div class=\"col-xs-12 col-md-6 text-center inline-block padding-bottom-xs-20 padding-bottom-sm-20\">\r\n                <ul itemscope=\"\" itemtype=\"http://schema.org/SiteNavigationElement\" class=\"fs-14\">\r\n                    <li class=\"inline-block-top\"><a target=\"_blank\" itemprop=\"url\" href=\"https://hubapp.dentacoin.com/patients\"><span class=\"color-white\" itemprop=\"name\">for Patients</span></a></li>\r\n                    <li class=\"inline-block-top separator\">|</li>\r\n                    <li class=\"inline-block-top\"><a target=\"_blank\" itemprop=\"url\" href=\"https://dentavox.dentacoin.com/\" class=\"vox-link-tracker\"><span class=\"color-white\" itemprop=\"name\">DentaVox</span></a></li>\r\n                    <li class=\"inline-block-top separator\">|</li>\r\n                    <li class=\"inline-block-top\"><a target=\"_blank\" itemprop=\"url\" href=\"https://reviews.dentacoin.com/\" class=\"trp-link-tracker\"><span class=\"color-white\" itemprop=\"name\">Trusted Reviews</span></a></li>\r\n                    <li class=\"inline-block-top separator\">|</li>\r\n                    <li class=\"inline-block-top\"><a target=\"_blank\" itemprop=\"url\" href=\"https://assurance.dentacoin.com/\"><span class=\"color-white\" itemprop=\"name\">Assurance</span></a></li>\r\n                    <li class=\"inline-block-top separator\">|</li>\r\n                    <li class=\"inline-block-top\"><a target=\"_blank\" itemprop=\"url\" href=\"https://wallet.dentacoin.com/\"><span class=\"color-white\" itemprop=\"name\">Wallet</span></a></li>\r\n                    <li class=\"inline-block-top separator\">|</li>\r\n                    <li class=\"inline-block-top\"><a target=\"_blank\" itemprop=\"url\" href=\"https://jawsofbattle.dentacoin.com/\"><span class=\"color-white\" itemprop=\"name\">Jaws of Battle</span></a></li> </ul>\r\n            </div>\r\n            <div class=\"col-xs-12 col-md-3 inline-block text-right socials text-center-xs text-center-sm\" itemscope=\"\" itemtype=\"http://schema.org/Organization\">\r\n                <link itemprop=\"url\" [routerLink]=\"['/'+translate.currentLang]\">\r\n                <ul class=\"inline-block\">\r\n                    <li class=\"inline-block fs-14\">Stay in the loop: </li>\r\n                    <li class=\"inline-block\">\r\n                        <a itemprop=\"sameAs\" target=\"_blank\" href=\"https://www.facebook.com/dentacare.dentacoin/\"><i class=\"fa fa-facebook\" aria-hidden=\"true\"></i></a>\r\n                    </li>\r\n                    <li class=\"inline-block telegram\">\r\n                        <a itemprop=\"sameAs\" target=\"_blank\" href=\"https://t.me/dentacoin\"><i class=\"fa fa-telegram\"></i></a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12 text-center fs-14 padding-top-20 fs-12\">Â© {{year}} Dentacoin Foundation. All rights reserved.</div>\r\n        </div>\r\n    </div>\r\n</section>","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {DentistDataObject} from '../admin/advanced-admin-panel/advanced-admin-panel.component';\nimport {AdditionalService} from '../_services/additional.service';\nimport {RequestsService} from '../_services/requests.service';\nimport {HttpClient} from '../../../node_modules/@angular/common/http';\nimport {RedirectsService} from '../_services/redirects.service';\n\n@Component({\n    selector: 'app-landing-page',\n    templateUrl: './landing-page.component.html'\n})\nexport class LandingPageComponent implements OnInit {\n    public year = new Date().getFullYear();\n    public isNotAPartnerDentistLoggedIn: boolean;\n    public myAccountLink: string;\n    public dcnAmount: number = 0;\n    public usdAmount: number = 0;\n    public updateDentistDcnAndUsdBalanceTimer: any;\n    public dentistData: DentistDataObject = {\n        name: '',\n        email: '',\n        avatar_url: ''\n    };\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public translate: TranslateService, public languageService: LanguageService, public additionalService: AdditionalService, public requestsService: RequestsService, private redirectsService: RedirectsService) {\n        this.isNotAPartnerDentistLoggedIn = authenticationServiceService.hasNotAPartnerDentistStorageSession();\n    }\n\n    ngOnInit() {\n        if (window.localStorage.getItem('currentDentist') != null) {\n            this.redirectsService.redirectToAdmin();\n        } else if (window.localStorage.getItem('currentNotAPartnerDentist') != null) {\n            this.myAccountLink = this.additionalService.generateNotAPartnerDentistAccountLink();\n\n            this.requestsService.getUserData(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).token).subscribe({\n                next: (response: any) => {\n                    this.dentistData.name = response.data.name;\n                    this.dentistData.email = response.data.email;\n                    this.dentistData.avatar_url = response.data.avatar_url;\n\n                    if (response.data.is_partner === true || response.data.is_hub_app_dentist === true) {\n                        this.redirectsService.redirectToAdmin();\n                    }\n                },\n                error: error => this.authenticationServiceService.logout('dentist')\n            });\n\n            this.updateDentistDcnAndUsdBalance();\n\n            if (typeof(this.updateDentistDcnAndUsdBalanceTimer) !== 'undefined') {\n                clearInterval(this.updateDentistDcnAndUsdBalanceTimer);\n                this.updateDentistDcnAndUsdBalanceTimer = undefined;\n            }\n\n            this.updateDentistDcnAndUsdBalanceTimer = setInterval(() => {\n                if (!this.authenticationServiceService.hasPatientStorageSession()) {\n                    clearInterval(this.updateDentistDcnAndUsdBalanceTimer);\n                    this.updateDentistDcnAndUsdBalanceTimer = undefined;\n                } else {\n                    this.updateDentistDcnAndUsdBalance();\n                }\n            }, 5000);\n        }\n    }\n\n    updateDentistDcnAndUsdBalance() {\n        this.requestsService.getDCNBalance(JSON.parse(window.localStorage.getItem('currentNotAPartnerDentist')).token).subscribe({\n            next: (response: any) => {\n                if (response.success) {\n                    this.dcnAmount = response.data;\n\n                    this.requestsService.getDentacoinDataByExternalProvider('USD').subscribe((coingeckoResponse: any) => {\n                        this.usdAmount = Number(((1 / Number(Number(coingeckoResponse) / 100)) * this.dcnAmount).toFixed(2));\n                    });\n                }\n            },\n            error: error => this.authenticationServiceService.logout('dentist')\n        });\n    }\n\n}\n","<div class=\"logged-mobile-profile-menu\">\r\n    <nav class=\"profile-menu module\">\r\n        <a href=\"javascript:void(0)\" class=\"close-logged-mobile-profile-menu\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n        <ul itemscope=\"\" itemtype=\"http://schema.org/SiteNavigationElement\">\r\n            <!--<li>\r\n                <a (click)=\"this.redirectsService.redirectToLoggedHome()\" itemprop=\"url\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Home icon\" src=\"assets/images/home.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'home-btn' | translate}}</span>\r\n                </a>\r\n            </li>-->\r\n            <li>\r\n                <a href=\"{{myAccountLink}}\" target=\"_blank\" itemprop=\"url\" class=\"in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Wallet icon\" src=\"assets/images/wallet-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'my-wallet-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href=\"{{myAccountLink}}&route=edit-account\" target=\"_blank\" itemprop=\"url\" class=\"in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Edit account icon\" src=\"assets/images/edit-account-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'edit-account-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href=\"{{myAccountLink}}&route=manage-privacy\" target=\"_blank\" itemprop=\"url\" class=\"in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Privacy icon\" src=\"assets/images/privacy-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'manage-privacy-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a (click)=\"this.authenticationServiceService.logout('patient')\" itemprop=\"url\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Logout icon\" src=\"assets/images/logout-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'log-out-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"lang-switcher\">\r\n                <div class=\"border-top\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"fix-selects-for-ios\">\r\n                        <option value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</div>\r\n<header>\r\n    <div class=\"container\">\r\n        <div class=\"row fs-0\">\r\n            <figure itemscope=\"\" itemtype=\"http://schema.org/Organization\" class=\"col-xs-5 inline-block padding-left-xs-10 padding-right-xs-10\">\r\n                <a itemprop=\"url\" routerLink=\"/\" *ngIf=\"dentistData.logo != null\">\r\n                    <img src=\"{{dentistData.logo}}\" itemprop=\"logo\" class=\"dentist-logo-img\" alt=\"Dentist logo\"/>\r\n                </a>\r\n            </figure>\r\n            <div class=\"col-xs-7 logged-user-right-nav inline-block text-right padding-left-xs-10 padding-right-xs-10\">\r\n                <!--<div class=\"hidden-box-parent\">\r\n                    <div class=\"\" [ngClass]=\"(this.isAccountPage() === false) ? 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 color-white-on-hub platform-text-color' : 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 color-white-on-hub'\">\r\n                        <span class=\"user-name\">{{patientData.name}}</span>\r\n                        <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\r\n                    </div>\r\n                    <span [ngClass]=\"(showApplications === true) ? 'up-arrow platform-background' : 'up-arrow background-white'\"></span>\r\n                    <div class=\"hidden-box\">\r\n                        <div class=\"hidden-box-hub container-fluid platform-background\" *ngIf=\"(showApplications === true)\">\r\n                            <div class=\"row close-btn\">\r\n                                <div class=\"col-xs-12\"><a href=\"javascript:void(0)\">Close <span><i class=\"fa fa-times fs-24\" aria-hidden=\"true\"></i></span></a></div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <ng-container *ngFor=\"let application of applications; index as i;\">\r\n                                    <a class=\"col-md-3 col-xs-4 application inline-block-top\" target=\"_blank\" href=\"{{application.url}}\" *ngIf=\"(translate.currentLang == 'en' && (application.name_en != '' || application.description_en != ''))\">\r\n                                        <figure class=\"text-center\" itemtype=\"http://schema.org/ImageObject\">\r\n                                            <img src=\"{{application.media}}\" itemprop=\"contentUrl\" alt=\"\"/>\r\n                                            <figcaption class=\"color-white fs-14 fs-xs-20 padding-bottom-15 platform-text-color\">{{application.name_en}}</figcaption>\r\n                                        </figure>\r\n                                    </a>\r\n                                    <a class=\"col-md-3 col-xs-4 application inline-block-top\" target=\"_blank\" href=\"{{application.url}}\" *ngIf=\"(translate.currentLang == 'de' && (application.name_de != '' || application.description_de != ''))\">\r\n                                        <figure class=\"text-center\" itemtype=\"http://schema.org/ImageObject\">\r\n                                            <img src=\"{{application.media}}\" itemprop=\"contentUrl\" alt=\"\"/>\r\n                                            <figcaption class=\"color-white fs-14 fs-xs-20 padding-bottom-15 platform-text-color\">{{application.name_de}}</figcaption>\r\n                                        </figure>\r\n                                    </a>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"container-fluid text-center hidden-box-footer\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-6 padding-left-10 padding-right-10 inline-block\">\r\n                                    <a (click)=\"this.authenticationServiceService.logout('patient')\" class=\"logout\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i> Log out</a>\r\n                                </div>\r\n                                <div class=\"col-xs-6 padding-left-10 padding-right-10 inline-block\">\r\n                                    <a [routerLink]=\"['my-wallet']\" class=\"fs-16 module platform-custom-button platform-background-color platform-border-color hover padding-left-10 padding-right-10\">My Account</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a href=\"javascript:void(0)\" class=\"hamburger\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></a>\r\n                <div [ngClass]=\"(this.isAccountPage() === true) ? 'account-page lang-switcher inline-block' : 'lang-switcher inline-block'\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" [ngClass]=\"(this.isAccountPage() === false) ? 'platform-text-color' : ''\">\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>-->\r\n                <div [ngClass]=\"(this.isAccountPage() === false) ? 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 padding-top-10 padding-bottom-10 platform-text-color' : 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 padding-top-10 padding-bottom-10'\">\r\n                    <span class=\"user-name\">{{patientData.name}}</span>\r\n                    <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\r\n                </div>\r\n                <div class=\"logged-nav inline-block\">\r\n                    <a href=\"javascript:void(0);\"><i class=\"fa fa-bars\" [ngClass]=\"(this.isAccountPage() === false) ? 'color-white-on-hub platform-text-color' : 'color-white-on-hub'\" aria-hidden=\"true\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"camping-currently-offline\"></div>\r\n</header>\r\n<main>\r\n    <router-outlet></router-outlet>\r\n</main>\r\n<footer class=\"opacity-not-visible text-center padding-top-40 padding-bottom-10 padding-top-xs-30 padding-top-sm-20\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12\">\r\n                <a href=\"https://dentacoin.com\" target=\"_blank\" class=\"inline-block in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                        <img src=\"assets/images/dentacoin-logo.png\" alt=\"Dentacoin logo\" itemprop=\"contentUrl\"/>\r\n                        <figcaption class=\"fs-14 padding-top-5\">{{'powered-by-dcn' | translate}}</figcaption>\r\n                    </figure>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {RequestsService} from '../_services/requests.service';\nimport {LanguageService} from '../_services/language.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Router} from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-logged-in-wrapper',\n    templateUrl: './logged-in-wrapper.component.html'\n})\nexport class LoggedInWrapperComponent implements OnInit {\n    public dentistData: DentistDataObject = {\n        logo: ''\n    };\n    public patientData: PatientDataObject = {\n        name: ''\n    };\n    /*public applications = [];\n    public showApplications: boolean = false;*/\n    public dcnAmount: number = 0;\n    public usdAmount: number = 0;\n    public updatePatientDcnAndUsdBalanceTimer: any;\n    public myAccountLink: string;\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService, public languageService: LanguageService, public translate: TranslateService, public router: Router) {}\n\n    ngOnInit() {\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\n            this.redirectsService.redirectToPatientLogin('login');\n        } else {\n            if (environment.hybrid === true) {\n                document.addEventListener('shouldLogoutPatient', () => {\n                    this.authenticationServiceService.logout('patient');\n                });\n\n                this.myAccountLink = environment.accountDomain + '/custom-cookie?mobile-app=hubapp&slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_token);\n            } else {\n                this.myAccountLink = environment.accountDomain + '/custom-cookie?slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_token);\n            }\n\n            this.requestsService.getDentistData(JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).subscribe((response: any) => {\n                this.dentistData.logo = response.data.logo;\n            });\n\n            this.requestsService.getUserData(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\n                next: (response:any) => {\n                    this.patientData.name = response.data.name;\n                },\n                error: error => this.authenticationServiceService.logout('patient')\n            });\n\n            this.updatePatientDcnAndUsdBalance();\n\n            if (typeof(this.updatePatientDcnAndUsdBalanceTimer) !== 'undefined') {\n                clearInterval(this.updatePatientDcnAndUsdBalanceTimer);\n                this.updatePatientDcnAndUsdBalanceTimer = undefined;\n            }\n\n            this.updatePatientDcnAndUsdBalanceTimer = setInterval(() => {\n                if (!this.authenticationServiceService.hasPatientStorageSession()) {\n                    clearInterval(this.updatePatientDcnAndUsdBalanceTimer);\n                    this.updatePatientDcnAndUsdBalanceTimer = undefined;\n                } else {\n                    this.updatePatientDcnAndUsdBalance();\n                }\n            }, 5000);\n        }\n    }\n\n    updatePatientDcnAndUsdBalance() {\n        this.requestsService.getDCNBalance(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\n            next: (response:any) => {\n                if (response.success) {\n                    this.dcnAmount = response.data;\n\n                    this.requestsService.getDentacoinDataByExternalProvider('USD').subscribe((coingeckoResponse: any) => {\n                        this.usdAmount = Number(((1 / Number(Number(coingeckoResponse) / 100)) * this.dcnAmount).toFixed(2));\n                    });\n                }\n            },\n            error: error => this.authenticationServiceService.logout('patient')\n        });\n    }\n\n    isAccountPage() {\n        if (this.router.url.indexOf('my-wallet') !== -1 || this.router.url.indexOf('edit-account') !== -1 || this.router.url.indexOf('manage-privacy') !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport interface DentistDataObject {\n    logo: string;\n}\n\nexport interface PatientDataObject {\n    name: string;\n}","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport { environment } from '../../environments/environment';\r\nimport {HttpParams} from '../../../node_modules/@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-manage-privacy',\r\n  templateUrl: './manage-privacy.component.html'\r\n})\r\nexport class ManagePrivacyComponent implements OnInit {\r\n    accountDataDownloadingFailed: boolean = false;\r\n    accountDeletionFailed: boolean = false;\r\n    downloadingGDPRDataFailed: boolean = false;\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        }\r\n    }\r\n\r\n    deleteAccountMethod() {\r\n        const deleteAccount = confirm('Warning! Are you sure you want to delete your account? Deleting your account is permanent action.');\r\n        if (deleteAccount === true) {\r\n            this.requestsService.deleteProfile(new HttpParams().set('self_deleted', 'true').toString(), JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n                next: (response:any) => {\r\n                    if (response.success && response.data) {\r\n                        this.authenticationServiceService.logout('patient');\r\n                    } else {\r\n                        this.accountDeletionFailed = true;\r\n                    }\r\n                },\r\n                error: error => this.authenticationServiceService.logout('patient')\r\n            });\r\n        }\r\n    }\r\n\r\n    downloadGDPRDataMethod() {\r\n        console.log('downloadGDPRDataMethod');\r\n        this.requestsService.downloadGDPRData(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n            next: (response:any) => {\r\n                if (response.success && response.data) {\r\n                    window.open(response.data, '_system');\r\n                    return false;\r\n                } else {\r\n                    this.downloadingGDPRDataFailed = true;\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpParams} from '../../../node_modules/@angular/common/http';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {AdditionalService} from '../_services/additional.service';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-my-wallet',\r\n  templateUrl: './my-wallet.component.html'\r\n})\r\nexport class MyWalletComponent implements OnInit {\r\n    withdrawForm: FormGroup;\r\n    withdrawFormSubmitted = false;\r\n    dcnAmount: number;\r\n    usdAmount: number;\r\n    currenciesList: {};\r\n    showCurrenciesList: boolean = false;\r\n    showWithdrawHistory: boolean = false;\r\n    withdrawHistory = [];\r\n    withdrawFailed: boolean = false;\r\n    withdrawSucceed: boolean = false;\r\n    errorMessage: string;\r\n    successMessage: string;\r\n    usdVal: number = 0;\r\n    eurVal: number = 0;\r\n    gbpVal: number = 0;\r\n    rubVal: number = 0;\r\n    public addresses = [];\r\n    public currencies = ['USD', 'EUR', 'GBP', 'RUB'];\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public formBuilder: FormBuilder, public requestsService: RequestsService, public additionalService: AdditionalService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        } else {\r\n            this.withdrawForm = this.formBuilder.group({\r\n                address: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.minLength(42), Validators.maxLength(42)\r\n                ])),\r\n                amount: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.min(10000)\r\n                ]))\r\n            });\r\n\r\n            $('form#withdraw .disabled-amount').on('click', (e) => {\r\n                $(e.currentTarget).hide();\r\n                $('form#withdraw .amount').show().focus();\r\n            });\r\n\r\n            $(document).on('click', '.search-result .search-body ul li a', (e) => {\r\n                this.withdrawForm.controls['address'].setValue($(e.currentTarget).attr('data-value'));\r\n                $('.search-result').hide();\r\n            });\r\n\r\n            this.requestsService.getAddresses(JSON.parse(window.localStorage.getItem('currentPatient')).id).subscribe((response: any) => {\r\n                if (response.success) {\r\n                    if (response.data.length) {\r\n                        this.addresses = Object.keys(response.data).map(i => response.data[i]);\r\n                        if (this.addresses.length) {\r\n                            this.withdrawForm.controls['address'].setValue(this.addresses[0].dcn_address);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.updateDCNBalance();\r\n            this.updateDCNWithdrawHistory();\r\n        }\r\n    }\r\n\r\n    updateDCNBalance() {\r\n        this.requestsService.getDCNBalance(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n            next: async (response:any) => {\r\n                if (response.success) {\r\n                    this.withdrawForm.controls['amount'].setValue(response.data);\r\n                    this.dcnAmount = response.data;\r\n\r\n                    for (let i = 0, len = this.currencies.length; i < len; i++) {\r\n                        this.requestsService.getDentacoinDataByExternalProvider(this.currencies[i]).subscribe((coingeckoResponse: any) => {\r\n                            if (this.currencies[i] === 'USD') {\r\n                                this.usdVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n\r\n                                this.usdAmount = Number((this.usdVal * this.dcnAmount).toFixed(4));\r\n                            } else if (this.currencies[i] === 'EUR') {\r\n                                this.eurVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n                            } else if (this.currencies[i] === 'GBP') {\r\n                                this.gbpVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n                            } else if (this.currencies[i] === 'RUB') {\r\n                                this.rubVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    let checkingIfRequestsFinished = setInterval(() => {\r\n                        console.log('checkingIfRequestsFinished');\r\n                        if (this.usdVal !== 0 && this.eurVal !== 0 && this.gbpVal !== 0 && this.rubVal !== 0) {\r\n                            clearInterval(checkingIfRequestsFinished);\r\n\r\n                            $(document).ready(function() {\r\n                                $('.my-wallet-container .dropdown-hidden-menu button').on('click', (e) => {\r\n                                    var this_btn = $(e.currentTarget);\r\n                                    $('.my-wallet-container .current-converted-price .amount').html((parseFloat($('.current-dcn-amount').html()) * parseFloat(this_btn.attr('data-multiple-with'))).toFixed(2));\r\n                                    $('.my-wallet-container .current-converted-price .symbol span').html(this_btn.html());\r\n                                });\r\n                            });\r\n                        }\r\n                    }, 500);\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n    \r\n    updateDCNWithdrawHistory() {\r\n        const withdrawHistoryBody = new HttpParams().set('id', JSON.parse(window.localStorage.getItem('currentPatient')).id).set('token', JSON.parse(window.localStorage.getItem('currentPatient')).token);\r\n        this.requestsService.getWithdrawHistory(withdrawHistoryBody.toString()).subscribe({\r\n            next: (withdrawHistoryResponse:any) => {\r\n                if (withdrawHistoryResponse.success) {\r\n                    this.withdrawHistory = Object.keys(withdrawHistoryResponse.data).map(i => withdrawHistoryResponse.data[i]);\r\n                    this.showWithdrawHistory = true;\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get withdraw_form_data() { return this.withdrawForm.controls; }\r\n\r\n    withdraw(body) {\r\n        this.requestsService.withdraw(body).subscribe((withdrawResponse: any) => {\r\n            this.additionalService.hideLoader();\r\n\r\n            if (withdrawResponse.success) {\r\n                this.updateDCNBalance();\r\n                this.updateDCNWithdrawHistory();\r\n                this.successMessage = withdrawResponse.message;\r\n                this.withdrawSucceed = true;\r\n            } else {\r\n                this.errorMessage = withdrawResponse.error;\r\n                this.withdrawFailed = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    // patient saving his DCN addess in CoreDB\r\n    onWithdrawSubmit() {\r\n        this.additionalService.showLoader();\r\n\r\n        this.withdrawFormSubmitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.withdrawForm.invalid) {\r\n            this.additionalService.hideLoader();\r\n            return;\r\n        }\r\n\r\n\r\n        // if the withdraw to address is the same as the last time withdrawing\r\n        const withdrawBody = new HttpParams().set('amount', this.withdraw_form_data.amount.value).set('address', this.withdraw_form_data.address.value.trim()).set('id', JSON.parse(window.localStorage.getItem('currentPatient')).id).set('token', JSON.parse(window.localStorage.getItem('currentPatient')).token);\r\n\r\n        this.withdraw(withdrawBody.toString());\r\n        return;\r\n    }\r\n}\r\n","<header class=\"padding-top-15\">\r\n    <div class=\"container\">\r\n        <div class=\"row fs-0\">\r\n            <!--<div class=\"col-xs-6 inline-block\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                    <a [routerLink]=\"['/'+translate.currentLang+'/login']\" itemprop=\"url\">\r\n                        <img src=\"{{dentistLogo}}\" alt=\"Dentaprime logo\" class=\"dentist-logo-img {{dentistLogoClass}}\"/>\r\n                    </a>\r\n                </figure>\r\n            </div>-->\r\n            <div class=\"col-xs-6 col-xs-offset-6 text-right inline-block\">\r\n                <div class=\"lang-switcher inline-block\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"platform-text-color fix-selects-for-ios\">\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"camping-currently-offline\"></div>\r\n</header>\r\n<main class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</main>\r\n<footer class=\"opacity-not-visible text-center padding-top-100 padding-top-xs-40 padding-bottom-10\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12\">\r\n                <a href=\"https://dentacoin.com\" target=\"_blank\" class=\"inline-block in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                        <img src=\"assets/images/dentacoin-logo.png\" alt=\"Dentacoin logo\" itemprop=\"contentUrl\"/>\r\n                        <figcaption class=\"fs-14 padding-top-5\">{{'powered-by-dcn' | translate}}</figcaption>\r\n                    </figure>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</footer>","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RequestsService} from '../_services/requests.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-not-logged-in-wrapper',\n    templateUrl: './not-logged-in-wrapper.component.html'\n})\n\nexport class NotLoggedInWrapperComponent implements OnInit {\n    dentistLogo = '';\n    dentistLogoClass = '';\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public requestsService: RequestsService, public translate: TranslateService, public languageService: LanguageService) {}\n\n    ngOnInit() {\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\n            if (window.localStorage.getItem('currentPatient') != null) {\n                this.requestsService.getDentistData(JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).subscribe((response: any) => {\n                    if (response.success) {\n                        this.dentistLogo = response.data.logo;\n                    }\n                });\n            } else {\n                this.dentistLogo = 'assets/images/one-line-logo-black.svg';\n                this.dentistLogoClass = 'max-width-140';\n            }\n        }\n    }\n}\n","<div class=\"row padding-top-50 padding-top-xs-10 patient-login\" [attr.data-cookies-error]=\"'cookies-error' | translate\" [attr.data-years-and-privacy-error]=\"'years-and-privacy-error' | translate\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 max-width-xs-100 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-30 fs-xs-26 lato-bold padding-top-10\">{{'patients-login-title' | translate}}</h1>\n        <h2 class=\"fs-20 fs-xs-18 lato-light padding-bottom-10\">{{'patients-login-subtitle' | translate}}</h2>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4 login-parent\">\n        <div class=\"max-width-400 margin-0-auto form-login-fields\">\n            <div class=\"error-handle margin-bottom-20 hide\" *ngIf=\"missingPatientAccount\" id=\"missing-patient-account-error\">\n                {{'missing-patient-account-error' | translate}}\n                <a [routerLink]=\"['/'+translate.currentLang+'/request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 lato-bold\">{{'request-one-here' | translate}}</a>\n            </div>\n            <div class=\"error-handle margin-bottom-20 custom-error hide\" id=\"custom-error\"></div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed\">{{'general-error' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-missing-email\">{{'patient-login-failed-missing-email' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-not-a-patient-of-any-dentist\">{{'patient-login-failed-not-a-patient-of-any-dentist' | translate}}</div>\n            <div class=\"padding-top-20 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/login'\" [attr.data-inviter]=\"inviter\" [attr.data-inviteid]=\"inviteId != '' ? inviteId : null\" class=\"facebook-custom-btn social-login-btn vanilla-js-event calibri-regular fs-20 fs-xs-18\">Continue with Facebook</a>\n            </div>\n            <div class=\"padding-top-10 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/login'\" [attr.data-inviter]=\"inviter\" [attr.data-inviteid]=\"inviteId != '' ? inviteId : null\" class=\"civic-custom-btn social-login-btn type-login vanilla-js-event calibri-regular fs-20 fs-xs-18 hide\">Continue with Civic</a>\n            </div>\n            <div class=\"padding-top-10 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/login'\" [attr.data-inviter]=\"inviter\" [attr.data-inviteid]=\"inviteId != '' ? inviteId : null\" class=\"apple-custom-btn is-dcn-hub-app social-login-btn type-login vanilla-js-event calibri-regular fs-20 fs-xs-18 hide\">Continue with Apple</a>\n            </div>\n            <div class=\"padding-top-40 padding-bottom-10 text-center fs-16\">\n                <div>{{'no-account-yet' | translate}}</div>\n                <a [routerLink]=\"['/'+translate.currentLang+'/request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'request-account-btn' | translate}}</a>\n                |\n                <a [routerLink]=\"['/'+translate.currentLang+'/dentist-request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'dentist-request-account-btn' | translate}}</a>\n            </div>\n        </div>\n    </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {LanguageService} from '../_services/language.service';\r\nimport { environment } from '../../environments/environment';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {AdditionalService} from '../_services/additional.service';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-patient-login-page',\r\n  templateUrl: './patient-login-page.component.html'\r\n})\r\nexport class PatientLoginPageComponent implements OnInit {\r\n    coreDbApiDomain = environment.coreDbApiDomain;\r\n    missingPatientAccount = true;\r\n    patientLoginEventsAdded = false;\r\n    public inviter = '';\r\n    public inviteId = '';\r\n\r\n    constructor(public router: Router, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public translate: TranslateService, public languageService: LanguageService, public requestsService: RequestsService, public additionalService: AdditionalService, public activatedRoute: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\r\n            // redirect to home if logged in\r\n            this.redirectsService.redirectToLoggedHome();\r\n        } else {\r\n            this.inviter = this.activatedRoute.snapshot.queryParamMap.get('invite');\r\n            this.inviteId = this.activatedRoute.snapshot.queryParamMap.get('inviteid');\r\n\r\n            if (!this.patientLoginEventsAdded) {\r\n                this.patientLoginEventsAdded = true;\r\n\r\n                document.addEventListener('patientAuthSuccessResponse', (e: any) => {\r\n                    console.log(e, 'patientAuthSuccessResponse');\r\n                    this.onPatientsLogin(e.detail.response_data.token, e.detail.response_data.data.id, e.detail.response_data.data.patient_of);\r\n                });\r\n\r\n                document.addEventListener('receiveCoredbTokenFromCivicAuth', (e: any) => {\r\n                    console.log(e, 'receiveCoredbTokenFromCivicAuth');\r\n\r\n                    this.requestsService.getUserData(e.detail.response_data).subscribe({\r\n                        next: (response: any) => {\r\n                            if (response.success) {\r\n                                this.onPatientsLogin(e.detail.response_data, response.data.id, response.data.patient_of);\r\n                            } else {\r\n                                this.authenticationServiceService.logout('patient');\r\n                            }\r\n                        },\r\n                        error: error => this.authenticationServiceService.logout('patient')\r\n                    });\r\n                });\r\n\r\n                document.addEventListener('receivedFacebookToken', (e: any) => {\r\n                    this.additionalService.showLoader();\r\n                });\r\n\r\n                document.addEventListener('civicRead', (e: any) => {\r\n                    this.additionalService.showLoader();\r\n                });\r\n\r\n                document.addEventListener('hideGatewayLoader', (e: any) => {\r\n                    this.additionalService.hideLoader();\r\n                });\r\n\r\n                document.addEventListener('registeredAccountMissingEmail', (e: any) => {\r\n                    document.getElementById('patient-login-failed-missing-email').classList.remove('hide');\r\n                });\r\n\r\n                document.addEventListener('patientAuthErrorResponse', (e: any) => {\r\n                    console.log(e, 'e');\r\n                    let errorsHtml = '';\r\n                    if (e.detail.response_data.not_registered) {\r\n                        this.missingPatientAccount = true;\r\n                        document.getElementById('missing-patient-account-error').classList.remove('hide');\r\n                    } else {\r\n                        if (e.detail.response_data.errors) {\r\n                            for (let key in e.detail.response_data.errors) {\r\n                                errorsHtml += e.detail.response_data.errors[key] + '<br>';\r\n                            }\r\n                        }\r\n\r\n                        document.getElementById('custom-error').classList.remove('hide');\r\n                        document.getElementById('custom-error').innerHTML = errorsHtml;\r\n                    }\r\n\r\n                    if ($('.log-link.open-dentacoin-gateway').length) {\r\n                        $('.log-link.open-dentacoin-gateway').on('click', () => {\r\n                            this.redirectsService.redirectToPatientLogin('login');\r\n                        });\r\n                    }\r\n\r\n                    this.additionalService.hideLoader();\r\n                });\r\n\r\n                document.addEventListener('noCoreDBApiConnection', (e: any) => {\r\n                    document.getElementById('patient-login-failed').classList.remove('hide');\r\n                    this.additionalService.hideLoader();\r\n                });\r\n\r\n                document.addEventListener('noExternalLoginProviderConnection', (e: any) => {\r\n                    document.getElementById('patient-login-failed').classList.remove('hide');\r\n                    this.additionalService.hideLoader();\r\n                });\r\n\r\n                window.addEventListener('message', (event: any) => {\r\n                    if (event.data.event_id === 'noUserIdReceived') {\r\n                        document.getElementById('patient-login-failed').classList.remove('hide');\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                    } else if (event.data.event_id === 'registeredAccountMissingEmail') {\r\n                        document.getElementById('patient-login-failed-missing-email').classList.remove('hide');\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                    } else if (event.data.event_id === 'patientProceedWithCreatingSession') {\r\n                        this.onPatientsLogin(event.data.data.token, event.data.data.data.id, event.data.data.data.patient_of);\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                    } else if (event.data.event_id === 'patientAuthErrorResponse') {\r\n                        let errorsHtml = '';\r\n                        if (event.data.data.not_registered) {\r\n                            this.missingPatientAccount = true;\r\n                            document.getElementById('missing-patient-account-error').classList.remove('hide');\r\n                        } else {\r\n                            if (event.data.data.errors) {\r\n                                for (let key in event.data.data.errors) {\r\n                                    errorsHtml += event.data.data.errors[key] + '<br>';\r\n                                }\r\n                            }\r\n\r\n                            document.getElementById('custom-error').classList.remove('hide');\r\n                            document.getElementById('custom-error').innerHTML = errorsHtml;\r\n                        }\r\n\r\n                        if ($('.log-link.open-dentacoin-gateway').length) {\r\n                            $('.log-link.open-dentacoin-gateway').on('click', () => {\r\n                                this.redirectsService.redirectToPatientLogin('login');\r\n                            });\r\n                        }\r\n\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                    } else if (event.data.event_id === 'noCoreDBApiConnection') {\r\n                        document.getElementById('patient-login-failed').classList.remove('hide');\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                    } else if (event.data.event_id === 'noExternalLoginProviderConnection') {\r\n                        document.getElementById('patient-login-failed').classList.remove('hide');\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                    } else if (event.data.event_id === 'removeCivicIframeAndRedirectToAccountPage') {\r\n                        document.getElementById('iframe-civic-popup').remove();\r\n                        window.open(event.data.data.redirect, '_system');\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // we already have the token, but we are passing the data to dcn hub app backend in order to encrypt it and save it user localstorage\r\n    onPatientsLogin(_token: any, _id: any, _patient_of: any) {\r\n        if (_patient_of !== null && _patient_of !== undefined) {\r\n            this.requestsService.coreDbLogin(new HttpParams().set('token', _token).set('id', _id).set('patient_of', _patient_of).toString()).subscribe({\r\n                next: (coredbResponse: any) => {\r\n                    window.scrollTo(0, 0);\r\n                    if (coredbResponse.success) {\r\n                        window.localStorage.setItem('currentPatient', JSON.stringify({\r\n                            token: _token,\r\n                            id: _id,\r\n                            patient_of: _patient_of,\r\n                            encrypted_id: coredbResponse.encrypted_id,\r\n                            encrypted_token: coredbResponse.encrypted_token,\r\n                            encrypted_type: coredbResponse.encrypted_type\r\n                        }));\r\n\r\n                        window.localStorage.setItem('dentist', String(_patient_of));\r\n\r\n                        this.authenticationServiceService.isPatientLoggedSubject.next(true);\r\n                        this.redirectsService.redirectToLoggedHome();\r\n                        this.additionalService.hideLoader();\r\n                    } else if (coredbResponse.error) {\r\n                        document.getElementById('custom-error').classList.remove('hide');\r\n                        document.getElementById('custom-error').innerHTML = coredbResponse.message;\r\n                        this.additionalService.hideLoader();\r\n                    }\r\n                },\r\n                error: error => {\r\n                    document.getElementById('patient-login-failed').classList.remove('hide');\r\n                    this.additionalService.hideLoader();\r\n                }\r\n            });\r\n        } else {\r\n            document.getElementById('patient-login-failed-not-a-patient-of-any-dentist').classList.remove('hide');\r\n            this.additionalService.hideLoader();\r\n        }\r\n    }\r\n}","<div class=\"row padding-top-50 padding-top-xs-10 patient-register-by-invite\" [attr.data-cookies-error]=\"'cookies-error' | translate\" [attr.data-years-and-privacy-error]=\"'years-and-privacy-error' | translate\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 max-width-xs-100 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-20 lato-light padding-top-15 padding-bottom-30 padding-bottom-xs-0\">{{'patients-register-title' | translate}}</h1>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4 register-parent\">\n        <div class=\"max-width-400 margin-0-auto form-register-fields\">\n            <div class=\"error-handle margin-bottom-20 custom-error hide\" id=\"custom-error\"></div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed\">{{'general-error' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-missing-email\">{{'patient-login-failed-missing-email' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-not-a-patient-of-any-dentist\">{{'patient-login-failed-not-a-patient-of-any-dentist' | translate}}</div>\n            <div class=\"padding-top-20 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/register'\" [attr.custom-stopper]=\"'true'\" [attr.data-inviter]=\"inviter\" [attr.data-inviteid]=\"inviteId != '' ? inviteId : null\" class=\"facebook-custom-btn social-login-btn vanilla-js-event calibri-regular fs-20 fs-xs-18 max-width-400\">Continue with Facebook</a>\n            </div>\n            <div class=\"padding-top-10 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/register'\" [attr.custom-stopper]=\"'true'\" [attr.data-inviter]=\"inviter\" [attr.data-inviteid]=\"inviteId != '' ? inviteId : null\" class=\"civic-custom-btn social-login-btn type-register vanilla-js-event calibri-regular fs-20 fs-xs-18 hide\">Continue with Civic</a>\n            </div>\n            <div class=\"padding-top-10 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/register'\" [attr.custom-stopper]=\"'true'\" [attr.data-inviter]=\"inviter\" [attr.data-inviteid]=\"inviteId != '' ? inviteId : null\" class=\"apple-custom-btn is-dcn-hub-app social-login-btn type-register vanilla-js-event calibri-regular fs-20 fs-xs-18 hide\">Continue with Apple</a>\n            </div>\n            <div class=\"padding-top-20 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"agree-over-eighteen\"/>\n                    <label class=\"fs-15 fs-xs-16 custom-checkbox-label\" for=\"agree-over-eighteen\">{{'i-confirm' | translate}}</label>\n                </div>\n            </div>\n            <div class=\"patient-register-checkboxes padding-top-5 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"privacy-policy-registration-patient\"/>\n                    <label class=\"fs-15 fs-xs-16 custom-checkbox-label\" for=\"privacy-policy-registration-patient\">{{'i-agree' | translate}} <a href='https://dentacoin.com/privacy-policy' class='in-app-browser-link platform-color lato-bold' target='_blank'>{{'privacy-policy' | translate}}</a> {{'i-agree-end' | translate}}.</label>\n                </div>\n            </div>\n            <div class=\"links-below-registration margin-0-auto padding-top-20 margin-top-50 padding-bottom-10 text-center fs-16 platform-color\">\n                <a *ngIf=\"(inviter == '' && inviteId == '')\" [routerLink]=\"['/'+translate.currentLang+'/login']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'login-here' | translate}}</a>\n                <a *ngIf=\"(inviter != '' && inviteId != '')\" [routerLink]=\"['/'+translate.currentLang+'/login']\" [queryParams]=\"{invite: inviter, inviteid: inviteId}\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'login-here' | translate}}</a>\n                |\n                <a [routerLink]=\"['/'+translate.currentLang+'/request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 fs-xs-16 lato-bold platform-color\">{{'request-account-btn' | translate}}</a>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {TranslateService} from '@ngx-translate/core';\nimport {environment} from '../../environments/environment';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport * as $ from 'jquery';\n\n@Component({\n    selector: 'app-patient-register-by-invite',\n    templateUrl: './patient-register-by-invite.component.html'\n})\nexport class PatientRegisterByInviteComponent implements OnInit {\n    public coreDbApiDomain = environment.coreDbApiDomain;\n    public inviter = '';\n    public inviteId = '';\n    patientRegisterEventsAdded = false;\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public activatedRoute: ActivatedRoute, public translate: TranslateService, public additionalService: AdditionalService, public requestsService: RequestsService) {\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n        } else {\n            if (this.activatedRoute.snapshot.queryParamMap.get('invite') == null) {\n                this.redirectsService.redirectToPatientLogin('login');\n            } else {\n                this.inviter = this.activatedRoute.snapshot.queryParamMap.get('invite');\n                if (this.activatedRoute.snapshot.queryParamMap.get('inviteid') != null) {\n                    this.inviteId = this.activatedRoute.snapshot.queryParamMap.get('inviteid');\n                }\n\n                if (!this.patientRegisterEventsAdded) {\n                    document.addEventListener('patientAuthSuccessResponse', (e: any) => {\n                        console.log(e, 'patientAuthSuccessResponse');\n                        this.onPatientsRegister(e.detail.response_data.token, e.detail.response_data.data.id, e.detail.response_data.data.patient_of);\n                    });\n\n                    document.addEventListener('receiveCoredbTokenFromCivicAuth', (e: any) => {\n                        this.requestsService.getUserData(e.detail.response_data).subscribe({\n                            next: (response: any) => {\n                                if (response.success) {\n                                    this.onPatientsRegister(e.detail.response_data, response.data.id, response.data.patient_of);\n                                } else {\n                                    this.authenticationServiceService.logout('patient');\n                                }\n                            },\n                            error: error => this.authenticationServiceService.logout('patient')\n                        });\n                    });\n\n                    document.addEventListener('receivedFacebookToken', (e: any) => {\n                        this.additionalService.showLoader();\n                    });\n\n                    document.addEventListener('civicRead', (e: any) => {\n                        this.additionalService.showLoader();\n                    });\n\n                    document.addEventListener('hideGatewayLoader', (e: any) => {\n                        this.additionalService.hideLoader();\n                    });\n\n                    document.addEventListener('registeredAccountMissingEmail', (e: any) => {\n                        // COVER THIS !!!!!!!!!!!!!\n                        document.getElementById('patient-login-failed-missing-email').classList.remove('hide');\n                    });\n\n                    document.addEventListener('patientAuthErrorResponse', (e: any) => {\n                        console.log(e, 'e');\n                        let errorsHtml = '';\n                        if (e.detail.response_data.not_registered) {\n                            errorsHtml = this.translate.instant('account-not-found');\n                        } else {\n                            if (e.detail.response_data.errors) {\n                                for (let key in e.detail.response_data.errors) {\n                                    errorsHtml += e.detail.response_data.errors[key] + '<br>';\n                                }\n                            }\n                        }\n\n                        document.getElementById('custom-error').classList.remove('hide');\n                        document.getElementById('custom-error').innerHTML = errorsHtml;\n\n                        if ($('.log-link.open-dentacoin-gateway').length) {\n                            $('.log-link.open-dentacoin-gateway').on('click', () => {\n                                if (this.activatedRoute.snapshot.queryParamMap.get('inviteid') != null) {\n                                    this.redirectsService.redirectToPatientLogin('login?invite=' + this.inviter + '&inviteid=' + this.inviteId);\n                                } else {\n                                    this.redirectsService.redirectToPatientLogin('login?invite=' + this.inviter);\n                                }\n                            });\n                        }\n\n                        this.additionalService.hideLoader();\n                    });\n\n                    document.addEventListener('noCoreDBApiConnection', (e: any) => {\n                        document.getElementById('patient-login-failed').classList.remove('hide');\n                        this.additionalService.hideLoader();\n                    });\n\n                    document.addEventListener('noExternalLoginProviderConnection', (e: any) => {\n                        document.getElementById('patient-login-failed').classList.remove('hide');\n                        this.additionalService.hideLoader();\n                    });\n\n                    window.addEventListener('message', (event: any) => {\n                        if (event.data.event_id === 'noUserIdReceived') {\n                            document.getElementById('patient-login-failed').classList.remove('hide');\n                            document.getElementById('iframe-civic-popup').remove();\n                        } else if (event.data.event_id === 'registeredAccountMissingEmail') {\n                            // COVER THIS THE PROPER WAY !!!!!!!!!!!!!\n                            document.getElementById('patient-login-failed-missing-email').classList.remove('hide');\n                            document.getElementById('iframe-civic-popup').remove();\n                        } else if (event.data.event_id === 'patientProceedWithCreatingSession') {\n                            this.onPatientsRegister(event.data.data.token, event.data.data.data.id, event.data.data.data.patient_of);\n                            document.getElementById('iframe-civic-popup').remove();\n                        } else if (event.data.event_id === 'patientAuthErrorResponse') {\n                            let errorsHtml = '';\n                            if (event.data.not_registered) {\n                                errorsHtml = this.translate.instant('account-not-found');\n                            } else {\n                                if (event.data.errors) {\n                                    for (let key in event.data.errors) {\n                                        errorsHtml += event.data.errors[key] + '<br>';\n                                    }\n                                }\n                            }\n\n                            document.getElementById('custom-error').classList.remove('hide');\n                            document.getElementById('custom-error').innerHTML = errorsHtml;\n\n                            if ($('.log-link.open-dentacoin-gateway').length) {\n                                $('.log-link.open-dentacoin-gateway').on('click', () => {\n                                    if (this.activatedRoute.snapshot.queryParamMap.get('inviteid') != null) {\n                                        this.redirectsService.redirectToPatientLogin('login?invite=' + this.inviter + '&inviteid=' + this.inviteId);\n                                    } else {\n                                        this.redirectsService.redirectToPatientLogin('login?invite=' + this.inviter);\n                                    }\n                                });\n                            }\n\n                            document.getElementById('iframe-civic-popup').remove();\n                        } else if (event.data.event_id === 'noCoreDBApiConnection') {\n                            document.getElementById('patient-login-failed').classList.remove('hide');\n                            document.getElementById('iframe-civic-popup').remove();\n                        } else if (event.data.event_id === 'noExternalLoginProviderConnection') {\n                            document.getElementById('patient-login-failed').classList.remove('hide');\n                            document.getElementById('iframe-civic-popup').remove();\n                        } else if (event.data.event_id === 'removeCivicIframeAndRedirectToAccountPage') {\n                            document.getElementById('iframe-civic-popup').remove();\n                            window.open(event.data.data.redirect, '_system');\n                        }\n                    });\n                }\n            }\n        }\n    }\n\n    // we already have the token, but we are passing the data to dcn hub app backend in order to encrypt it and save it user localstorage\n    onPatientsRegister(_token: any, _id: any, _patient_of: any) {\n        if (_patient_of !== null && _patient_of !== undefined) {\n            this.requestsService.coreDbLogin(new HttpParams().set('token', _token).set('id', _id).set('patient_of', _patient_of).toString()).subscribe({\n                next: (coredbResponse: any) => {\n                    window.scrollTo(0, 0);\n                    if (coredbResponse.success) {\n                        window.localStorage.setItem('currentPatient', JSON.stringify({\n                            token: _token,\n                            id: _id,\n                            patient_of: _patient_of,\n                            encrypted_id: coredbResponse.encrypted_id,\n                            encrypted_token: coredbResponse.encrypted_token,\n                            encrypted_type: coredbResponse.encrypted_type\n                        }));\n\n                        window.localStorage.setItem('dentist', String(_patient_of));\n\n                        this.authenticationServiceService.isPatientLoggedSubject.next(true);\n                        this.redirectsService.redirectToLoggedHome();\n                        this.additionalService.hideLoader();\n                    } else if (coredbResponse.error) {\n                        document.getElementById('custom-error').classList.remove('hide');\n                        document.getElementById('custom-error').innerHTML = coredbResponse.message;\n                        this.additionalService.hideLoader();\n                    }\n                },\n                error: error => {\n                    document.getElementById('patient-login-failed').classList.remove('hide');\n                    this.additionalService.hideLoader();\n                }\n            });\n        } else {\n            document.getElementById('patient-login-failed-not-a-patient-of-any-dentist').classList.remove('hide');\n            this.additionalService.hideLoader();\n        }\n    }\n}","<div class=\"row padding-top-50 padding-top-xs-15 padding-top-sm-15 patient-request-account\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 max-width-xs-100 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-36 fs-xs-26 lato-bold padding-top-10 padding-top-xs-0\">{{'request-account-title' | translate}}</h1>\n        <h2 class=\"fs-20 lato-light padding-bottom-30 padding-bottom-xs-10\">{{'request-account-subtitle' | translate}}</h2>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n        <form [formGroup]=\"requestAccountForm\" (ngSubmit)=\"onAccountRequestFormSubmit()\">\n            <div class=\"success-handle margin-bottom-20\" *ngIf=\"sendRequestSucceed\">{{'request-account-thank-you' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20\" *ngIf=\"sendRequestFailed\">{{'request-account-saving-failed' | translate}}</div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-firstName\" class=\"platform-color\">{{'fname-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-firstName\" formControlName=\"firstName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.firstName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.firstName.errors.required\">{{'fname-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.firstName.hasError('maxlength')\">{{'fname-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-lastName\" class=\"platform-color\">{{'lname-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-lastName\" formControlName=\"lastName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.lastName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.lastName.errors.required\">{{'lname-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.lastName.hasError('maxlength')\">{{'lname-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-email\" class=\"platform-color\">{{'email-label' | translate}}</label>\n                    <input maxlength=\"100\" type=\"text\" id=\"request-account-email\" formControlName=\"email\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.email.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.email.errors.required\">{{'email-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.email.errors.email\">{{'valid-email' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\" *ngIf=\"(showCountries == true)\">\n                <div class=\"custom-google-select-style module\">\n                    <label class=\"platform-color\" for=\"country\">{{'country-label' | translate}}</label>\n                    <select id=\"country\" class=\"platform-border-color\" formControlName=\"country\">\n                        <option [selected]=\"true\">Select country:</option>\n                        <ng-container *ngFor=\"let item of countriesList | keyvalue\">\n                            <option value=\"{{item.value.code}}\">{{item.value.name}}</option>\n                        </ng-container>\n                    </select>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.country.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.country.errors.required\">{{'country-required' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-phone\" class=\"platform-color\">{{'phone-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"20\" id=\"request-account-phone\" formControlName=\"phone\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.phone.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.phone.errors.required\">{{'phone-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.phone.hasError('maxlength')\">{{'phone-max-length-validation' | translate}}</div>\n                </div>\n                <div class=\"error-handle\" *ngIf=\"notValidPhone\">{{'not-valid-phone' | translate}}</div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-dentistName\" class=\"platform-color\">{{'dentist-name-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-dentistName\" formControlName=\"dentistName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.dentistName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.dentistName.errors.required\">{{'dentist-name-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.dentistName.hasError('maxlength')\">{{'dentist-name-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"patient-register-checkboxes padding-top-15 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"privacy-policy-registration-patient\" formControlName=\"privacyPolicy\"/>\n                    <label class=\"fs-15 custom-checkbox-label\" for=\"privacy-policy-registration-patient\">{{'i-agree' | translate}} <a href='https://dentacoin.com/privacy-policy' class='in-app-browser-link platform-color lato-bold' target='_blank'>{{'privacy-policy' | translate}}</a>.</label>\n                </div>\n                <div class=\"error-handle\" *ngIf=\"isPatientPrivacyAccepted.invalid\">{{'privacy-policy-agree' | translate}}</div>\n            </div>\n            <div class=\"padding-top-30 text-center\">\n                <button class=\"module lato-bold platform-custom-button platform-background-color platform-border-color hover\">{{'request-account-button' | translate}}</button>\n            </div>\n            <div class=\"links-below-form margin-0-auto padding-top-20 margin-top-50 padding-bottom-10 text-center fs-16 platform-color\">\n                <a [routerLink]=\"['/'+translate.currentLang+'/login']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'login-here' | translate}}</a>\n            </div>\n        </form>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-request-account',\n    templateUrl: './request-account.component.html'\n})\nexport class RequestAccountComponent implements OnInit {\n    requestAccountForm: FormGroup;\n    requestAccountFormSubmitted: boolean = false;\n    sendRequestSucceed: boolean = false;\n    sendRequestFailed: boolean = false;\n    public notValidPhone: boolean = false;\n    public showCountries: boolean = false;\n    countriesList = {};\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public requestsService: RequestsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.requestsService.getCountries().subscribe((response: any) => {\n                if (response.success && response.data) {\n                    this.countriesList = response.data;\n                    this.showCountries = true;\n                }\n            });\n\n            this.requestAccountForm = this.formBuilder.group({\n                firstName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(100)\n                ])),\n                lastName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(100)\n                ])),\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ])),\n                country: new FormControl('', Validators.compose([\n                    Validators.required\n                ])),\n                phone: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(20)\n                ])),\n                dentistName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(200)\n                ])),\n                privacyPolicy: new FormControl('', Validators.requiredTrue)\n            });\n        }\n    }\n\n    get isPatientPrivacyAccepted() {\n        return this.requestAccountForm.get('privacyPolicy');\n    }\n\n    // convenience getter for easy access to form fields\n    get request_form_data() { return this.requestAccountForm.controls; }\n\n    // on request form account submit\n    onAccountRequestFormSubmit() {\n        this.additionalService.showLoader();\n        this.requestAccountFormSubmitted = true;\n        this.notValidPhone = false;\n\n        // stop here if form is invalid\n        if (this.requestAccountForm.invalid) {\n            this.additionalService.hideLoader();\n            return;\n        }\n\n        let paramsMap = new Map<any,any>();\n        paramsMap.set('firstName', this.request_form_data.firstName.value);\n        paramsMap.set('lastName', this.request_form_data.lastName.value);\n        paramsMap.set('email', this.request_form_data.email.value);\n        paramsMap.set('country', this.request_form_data.country.value);\n        paramsMap.set('phone', this.request_form_data.phone.value);\n        paramsMap.set('dentistName', this.request_form_data.dentistName.value);\n        /*paramsMap.set('captcha', this.request_form_data.captcha.value);*/\n\n        let params = new HttpParams();\n        paramsMap.forEach((value: any, key: any) => {\n            params = params.set(key, value);\n        });\n\n        this.requestsService.validatePhone(new HttpParams().set('phone', this.request_form_data.phone.value).set('country_code', this.request_form_data.country.value).toString()).subscribe((validatePhoneResponse: any) => {\n            if (validatePhoneResponse.success) {\n                this.requestsService.sendRequestAccountMail(params.toString()).subscribe((response: any) => {\n                    if (response.success) {\n                        this.requestAccountForm.reset();\n\n                        Object.keys(this.requestAccountForm.controls).forEach(key => {\n                            this.requestAccountForm.get(key).setErrors(null) ;\n                        });\n\n                        this.sendRequestSucceed = true;\n                        this.sendRequestFailed = false;\n                        this.additionalService.hideLoader();\n                    } else {\n                        this.sendRequestFailed = true;\n                        this.sendRequestSucceed = false;\n                        this.additionalService.hideLoader();\n                    }\n                });\n            } else {\n                this.notValidPhone = true;\n                this.additionalService.hideLoader();\n            }\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {HttpClient, HttpHeaders, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-verify-account',\n    templateUrl: './verify-account.component.html'\n})\nexport class VerifyAccountComponent implements OnInit {\n    verifyAccountForm: FormGroup;\n    verifyAccountFormSubmitted = false;\n    differentPasswords = false;\n    failedVerifiedAccount = false;\n\n    constructor(public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public http: HttpClient, public activatedRoute: ActivatedRoute, public redirectsService: RedirectsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.verifyAccountForm = this.formBuilder.group({\n                password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ])),\n                repeat_password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ]))\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get verify_account_form_data() {\n        return this.verifyAccountForm.controls;\n    }\n\n    // dentist trying to log in\n    onVerifyAccountFormSubmit() {\n        this.differentPasswords = false;\n        this.verifyAccountFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.verifyAccountForm.invalid) {\n            return;\n        }\n\n        if (this.verify_account_form_data.password.value.trim() !== this.verify_account_form_data.repeat_password.value.trim()) {\n            this.differentPasswords = true;\n            return;\n        }\n\n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n\n        this.activatedRoute.params.subscribe( (params: Params) => {\n            this.additionalService.showLoader();\n            const body = new HttpParams().set('password', this.verify_account_form_data.password.value.trim()).set('type_language', this.translate.currentLang);\n            this.http.post('https://dcn-hub-app-api.dentacoin.com/external-api/validate-token/' + params['token'], body.toString(), ParseHeaders).subscribe((response: any) => {\n                this.additionalService.hideLoader();\n                if (response.success) {\n                    this.redirectsService.redirectToPatientLogin('account-verification');\n                } else if (response.errors) {\n                    this.failedVerifiedAccount = true;\n                }\n            });\n        });\n    }\n}\n","export const environment = {\r\n    production: true,\r\n    hybrid: false,\r\n    default_language: 'en',\r\n    /*dentacoinDomain: 'https://dev.dentacoin.com',\r\n    coreDbApiDomain: 'https://dev-api.dentacoin.com',\r\n    accountDomain: 'https://dev-account.dentacoin.com',*/\r\n    dentacoinDomain: 'https://dentacoin.com',\r\n    coreDbApiDomain: 'https://api.dentacoin.com',\r\n    accountDomain: 'https://account.dentacoin.com'\r\n};\r\n","export const environment = {\r\n    production: true,\r\n    hybrid: false,\r\n    default_language: 'en',\r\n    /*dentacoinDomain: 'https://dev.dentacoin.com',\r\n    coreDbApiDomain: 'https://dev-api.dentacoin.com',\r\n    accountDomain: 'https://dev-account.dentacoin.com',*/\r\n    dentacoinDomain: 'https://dentacoin.com',\r\n    coreDbApiDomain: 'https://api.dentacoin.com',\r\n    accountDomain: 'https://account.dentacoin.com'\r\n};\r\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nexport { AppServerModule } from './app/app.server.module';\nexport { renderModule, renderModuleFactory } from '@angular/platform-server';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ngx-translate/core\");","module.exports = require(\"@ngx-translate/http-loader\");","module.exports = require(\"jquery\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"tslib\");"],"sourceRoot":""}