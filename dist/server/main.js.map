{"version":3,"sources":["webpack/bootstrap","./node_modules/@angular/common/fesm2015/http.js","./node_modules/@angular/router/router.d.ts.Éµangular_packages_router_router_l.html","./src/app/_services/additional.service.ts","./src/app/_services/authentication-service.service.ts","./src/app/_services/language.service.ts","./src/app/_services/redirects.service.ts","./src/app/_services/requests.service.ts","./src/app/admin-login/admin-login.component.html","./src/app/admin-login/admin-login.component.ts","./src/app/admin/admin.component.html","./src/app/admin/admin.component.ts","./src/app/admin/advanced-admin-panel/advanced-admin-panel.component.html","./src/app/admin/advanced-admin-panel/advanced-admin-panel.component.ts","./src/app/admin/advanced-admin-panel/applications/applications.component.html","./src/app/admin/advanced-admin-panel/applications/applications.component.ts","./src/app/admin/advanced-admin-panel/push-notifications/push-notifications.component.html","./src/app/admin/advanced-admin-panel/push-notifications/push-notifications.component.ts","./src/app/admin/basic-admin-panel/basic-admin-panel.component.html","./src/app/admin/basic-admin-panel/basic-admin-panel.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.server.module.ts","./src/app/change-password/change-password.component.ts","./src/app/dentist-request-account/dentist-request-account.component.html","./src/app/dentist-request-account/dentist-request-account.component.ts","./src/app/edit-account/edit-account.component.ts","./src/app/forgotten-password/forgotten-password.component.ts","./src/app/front-end-language/front-end-language.component.ts.FrontEndLanguageComponent.html","./src/app/front-end-language/front-end-language.component.ts","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/logged-in-wrapper/logged-in-wrapper.component.html","./src/app/logged-in-wrapper/logged-in-wrapper.component.ts","./src/app/manage-privacy/manage-privacy.component.ts","./src/app/my-wallet/my-wallet.component.ts","./src/app/not-logged-in-wrapper/not-logged-in-wrapper.component.html","./src/app/not-logged-in-wrapper/not-logged-in-wrapper.component.ts","./src/app/patient-login-page/patient-login-page.component.html","./src/app/patient-login-page/patient-login-page.component.ts","./src/app/patient-register-by-invite/patient-register-by-invite.component.html","./src/app/patient-register-by-invite/patient-register-by-invite.component.ts","./src/app/request-account/request-account.component.html","./src/app/request-account/request-account.component.ts","./src/app/verify-account/verify-account.component.ts","./src/environments/environment.prod.ts","./src/environments/environment.ts","./src/main.server.ts","external \"@angular/animations\"","external \"@angular/animations/browser\"","external \"@angular/common\"","external \"@angular/common/http\"","external \"@angular/core\"","external \"@angular/forms\"","external \"@angular/platform-browser\"","external \"@angular/platform-browser/animations\"","external \"@angular/platform-server\"","external \"@angular/router\"","external \"@ngx-translate/core\"","external \"@ngx-translate/http-loader\"","external \"jquery\"","external \"rxjs\"","external \"rxjs/operators\"","external \"tslib\""],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;AAEoG;AAC9D;AACkB;AACM;;AAE9D;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA,mCAAmC,EAAE;AACrC;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,EAAE;AACjC;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,8CAA8C,EAAE;AAChD,sDAAsD,EAAE;AACxD,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,6CAA6C,EAAE;AAC/C;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,8BAA8B,EAAE,kDAAkD,EAAE;AACpF;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,oBAAoB,8BAA8B;AAClD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,wBAAwB,gCAAgC;AACxD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,oBAAoB,gCAAgC;AACpD;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,wBAAwB,kCAAkC;AAC1D;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,sCAAsC,EAAE,OAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,2BAA2B,EAAE;AAC7B,2CAA2C,EAAE;AAC7C,4BAA4B,EAAE;AAC9B,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,gCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,sCAAsC,EAAE;AACxC;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,0BAA0B,oBAAoB,wBAAwB,EAAE;AACxE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA,uBAAuB,oBAAoB,wBAAwB,EAAE;AACrE;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB,EAAE;AAClB;AACA;AACA,0BAA0B,oBAAoB,wBAAwB,EAAE;AACxE;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,+BAA+B,EAAE,iBAAiB,EAAE;AACpD,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB,iDAAiD,EAAE,MAAM,wBAAwB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,+BAA+B,EAAE,qCAAqC,EAAE,iBAAiB,EAAE,iBAAiB,EAAE;AAC9G,wBAAwB,EAAE;AAC1B,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA,mCAAmC,EAAE;AACrC,sEAAsE,EAAE;AACxE,8CAA8C,EAAE;AAChD,oCAAoC,EAAE;AACtC;AACA;AACA;AACA,uCAAuC,EAAE;AACzC,mDAAmD,EAAE;AACrD,uCAAuC,EAAE;AACzC;AACA;AACA;AACA;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA,4CAA4C,EAAE;AAC9C;AACA;AACA;AACA,wCAAwC,EAAE;AAC1C;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,4DAA4D,EAAE;AAC9D;AACA;AACA;AACA;AACA,kCAAkC,EAAE;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA,iEAAiE,EAAE;AACnE;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA,6DAA6D,EAAE;AAC/D;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8DAA8D,4BAA4B;AAC1F;AACA;AACA;AACA,6CAA6C,4BAA4B,IAAI,YAAY,GAAG,gBAAgB;AAC5G;AACA;AACA;AACA;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,wBAAwB;AAC3D,6DAA6D,4BAA4B;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,kBAAkB,eAAe,GAAG,GAAG,EAAE;AACzC,uCAAuC,eAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,oCAAoC;AACpC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA,8BAA8B,EAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,EAAE,MAAM,6BAA6B;AAC7F;AACA;AACA;AACA,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,wBAAwB,+CAAE,WAAW,gEAAS;AAC9C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,iCAAiC,EAAE,kBAAkB,6DAAM;AAC3D,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,yCAAyC,0DAAG;AAC5C,mCAAmC,EAAE;AACrC,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,iBAAiB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB;AACA,gBAAgB;AAChB;AACA,4BAA4B;AAC5B,uDAAuD,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,yBAAyB;AACzB,oDAAoD,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,0BAA0B;AAC1B,qDAAqD,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,6BAA6B;AAC7B,wDAAwD,EAAE;AAC1D;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8BAA8B,4DAAc;AAC5C;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA,WAAW,EAAE;AACb;AACA,WAAW,EAAE;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,6BAA6B,gBAAgB,EAAE;AACnE;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,8EAA8E,SAAS;AACvF;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,2BAA2B;AACtD;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,6BAA6B;AAClC,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA,gBAAgB,EAAE;AAClB;AACA;AACA;AACA,iDAAiD,EAAE;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,4BAA4B;AAC5B;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,gBAAgB;AAChB;AACA,aAAa,oBAAoB,EAAE,8BAA8B;AACjE;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB,EAAE;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,+CAAU;AAC7B,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE;AACjD;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA,yDAAyD,mCAAmC;AAC5F;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,wBAAwB;AACxB;AACA;AACA;AACA,qBAAqB,mCAAmC;AACxD;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,+BAA+B,EAAE;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,EAAE,MAAM,oBAAoB;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,uBAAuB,MAAM;AAC7B,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EAAE;AACnC,2BAA2B,2BAA2B;AACtD;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C,WAAW,EAAE;AACb,6BAA6B,4DAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,yEAAiB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,gCAAgC,OAAO,oDAAM,SAAS,wDAAQ,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,SAAS,yDAAW,IAAI,GAAG;AAC1E,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,6BAA6B,mDAAmD;AAChF;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,+BAA+B;AACpC,KAAK,6BAA6B,OAAO,oDAAM,6BAA6B;AAC5E;;AAEA;AACA;AACA,cAAc,uFAAuF;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,OAAO,wDAAU;AACtB;AACA;AACA;AACA,KAAK,oBAAoB;AACzB,KAAK,OAAO,sDAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,iBAAiB,0DAA0D;AAC3E;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,mCAAmC;AACnC;AACA;AACA;AACA,sCAAsC,0DAA0D;AAChG,sCAAsC,0DAA0D;AAChG;AACA;AACA;AACA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","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/**\n * @license Angular v8.1.3\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { Injectable, InjectionToken, Inject, PLATFORM_ID, Injector, NgModule } from '@angular/core';\nimport { of, Observable } from 'rxjs';\nimport { concatMap, filter, map } from 'rxjs/operators';\nimport { DOCUMENT, ÉµparseCookieValue } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpHandler {\n}\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpBackend {\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Represents the header configuration options for an HTTP request.\n *\n * Instances should be assumed immutable with lazy parsing.\n *\n * \\@publicApi\n */\nclass HttpHeaders {\n    /**\n     * Constructs a new HTTP header object with the given values.\n     * @param {?=} headers\n     */\n    constructor(headers) {\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                headers.split('\\n').forEach((/**\n                 * @param {?} line\n                 * @return {?}\n                 */\n                line => {\n                    /** @type {?} */\n                    const index = line.indexOf(':');\n                    if (index > 0) {\n                        /** @type {?} */\n                        const name = line.slice(0, index);\n                        /** @type {?} */\n                        const key = name.toLowerCase();\n                        /** @type {?} */\n                        const value = line.slice(index + 1).trim();\n                        this.maybeSetNormalizedName(name, key);\n                        if (this.headers.has(key)) {\n                            (/** @type {?} */ (this.headers.get(key))).push(value);\n                        }\n                        else {\n                            this.headers.set(key, [value]);\n                        }\n                    }\n                }));\n            });\n        }\n        else {\n            this.lazyInit = (/**\n             * @return {?}\n             */\n            () => {\n                this.headers = new Map();\n                Object.keys(headers).forEach((/**\n                 * @param {?} name\n                 * @return {?}\n                 */\n                name => {\n                    /** @type {?} */\n                    let values = headers[name];\n                    /** @type {?} */\n                    const key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        this.headers.set(key, values);\n                        this.maybeSetNormalizedName(name, key);\n                    }\n                }));\n            });\n        }\n    }\n    /**\n     * Checks for existence of a header by a given name.\n     *\n     * @param {?} name The header name to check for existence.\n     *\n     * @return {?} Whether the header exits.\n     */\n    has(name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    }\n    /**\n     * Retrieves the first header value that matches a given name.\n     *\n     * @param {?} name The header name to retrieve.\n     *\n     * @return {?} A string if the header exists, null otherwise\n     */\n    get(name) {\n        this.init();\n        /** @type {?} */\n        const values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    }\n    /**\n     * Retrieves the names of the headers.\n     *\n     * @return {?} A list of header names.\n     */\n    keys() {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    }\n    /**\n     * Retrieves a list of header values for a given header name.\n     *\n     * @param {?} name The header name from which to retrieve the values.\n     *\n     * @return {?} A string of values if the header exists, null otherwise.\n     */\n    getAll(name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    }\n    /**\n     * Appends a new header value to the existing set of\n     * header values.\n     *\n     * @param {?} name The header name for which to append the values.\n     *\n     * @param {?} value\n     * @return {?} A clone of the HTTP header object with the value appended.\n     */\n    append(name, value) {\n        return this.clone({ name, value, op: 'a' });\n    }\n    /**\n     * Sets a header value for a given name. If the header name already exists,\n     * its value is replaced with the given value.\n     *\n     * @param {?} name The header name.\n     * @param {?} value The value to set or overide for a given name.\n     *\n     * @return {?} A clone of the HTTP header object with the newly set header value.\n     */\n    set(name, value) {\n        return this.clone({ name, value, op: 's' });\n    }\n    /**\n     * Deletes all header values for a given name.\n     *\n     * @param {?} name The header name.\n     * @param {?=} value The header values to delete for a given name.\n     *\n     * @return {?} A clone of the HTTP header object.\n     */\n    delete(name, value) {\n        return this.clone({ name, value, op: 'd' });\n    }\n    /**\n     * @private\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    maybeSetNormalizedName(name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach((/**\n                 * @param {?} update\n                 * @return {?}\n                 */\n                update => this.applyUpdate(update)));\n                this.lazyUpdate = null;\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {?} other\n     * @return {?}\n     */\n    copyFrom(other) {\n        other.init();\n        Array.from(other.headers.keys()).forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            this.headers.set(key, (/** @type {?} */ (other.headers.get(key))));\n            this.normalizedNames.set(key, (/** @type {?} */ (other.normalizedNames.get(key))));\n        }));\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    applyUpdate(update) {\n        /** @type {?} */\n        const key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                /** @type {?} */\n                let value = (/** @type {?} */ (update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                /** @type {?} */\n                const base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push(...value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                /** @type {?} */\n                const toDelete = (/** @type {?} */ (update.value));\n                if (!toDelete) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    /** @type {?} */\n                    let existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter((/**\n                     * @param {?} value\n                     * @return {?}\n                     */\n                    value => toDelete.indexOf(value) === -1));\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    }\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    forEach(fn) {\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => fn((/** @type {?} */ (this.normalizedNames.get(key))), (/** @type {?} */ (this.headers.get(key))))));\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Provides encoding and decoding of URL parameter and query-string values.\n *\n * Serializes and parses URL parameter keys and values to encode and decode them.\n * If you pass URL query parameters without encoding,\n * the query parameters can be misinterpreted at the receiving end.\n *\n *\n * \\@publicApi\n */\nclass HttpUrlEncodingCodec {\n    /**\n     * Encodes a key name for a URL parameter or query-string.\n     * @param {?} key The key name.\n     * @return {?} The encoded key name.\n     */\n    encodeKey(key) { return standardEncoding(key); }\n    /**\n     * Encodes the value of a URL parameter or query-string.\n     * @param {?} value The value.\n     * @return {?} The encoded value.\n     */\n    encodeValue(value) { return standardEncoding(value); }\n    /**\n     * Decodes an encoded URL parameter or query-string key.\n     * @param {?} key The encoded key name.\n     * @return {?} The decoded key name.\n     */\n    decodeKey(key) { return decodeURIComponent(key); }\n    /**\n     * Decodes an encoded URL parameter or query-string value.\n     * @param {?} value The encoded value.\n     * @return {?} The decoded value.\n     */\n    decodeValue(value) { return decodeURIComponent(value); }\n}\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    /** @type {?} */\n    const map = new Map();\n    if (rawParams.length > 0) {\n        /** @type {?} */\n        const params = rawParams.split('&');\n        params.forEach((/**\n         * @param {?} param\n         * @return {?}\n         */\n        (param) => {\n            /** @type {?} */\n            const eqIdx = param.indexOf('=');\n            const [key, val] = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))];\n            /** @type {?} */\n            const list = map.get(key) || [];\n            list.push(val);\n            map.set(key, list);\n        }));\n    }\n    return map;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable; all mutation operations return a new instance.\n *\n * \\@publicApi\n */\nclass HttpParams {\n    /**\n     * @param {?=} options\n     */\n    constructor(options = (/** @type {?} */ ({}))) {\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(`Cannot specify both fromString and fromObject.`);\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => {\n                /** @type {?} */\n                const value = ((/** @type {?} */ (options.fromObject)))[key];\n                (/** @type {?} */ (this.map)).set(key, Array.isArray(value) ? value : [value]);\n            }));\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Reports whether the body includes one or more values for a given parameter.\n     * @param {?} param The parameter name.\n     * @return {?} True if the parameter has one or more values,\n     * false if it has no value or is not present.\n     */\n    has(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).has(param);\n    }\n    /**\n     * Retrieves the first value for a parameter.\n     * @param {?} param The parameter name.\n     * @return {?} The first value of the given parameter,\n     * or `null` if the parameter is not present.\n     */\n    get(param) {\n        this.init();\n        /** @type {?} */\n        const res = (/** @type {?} */ (this.map)).get(param);\n        return !!res ? res[0] : null;\n    }\n    /**\n     * Retrieves all values for a  parameter.\n     * @param {?} param The parameter name.\n     * @return {?} All values in a string array,\n     * or `null` if the parameter not present.\n     */\n    getAll(param) {\n        this.init();\n        return (/** @type {?} */ (this.map)).get(param) || null;\n    }\n    /**\n     * Retrieves all the parameters for this body.\n     * @return {?} The parameter names in a string array.\n     */\n    keys() {\n        this.init();\n        return Array.from((/** @type {?} */ (this.map)).keys());\n    }\n    /**\n     * Appends a new value to existing values for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value to add.\n     * @return {?} A new body with the appended value.\n     */\n    append(param, value) { return this.clone({ param, value, op: 'a' }); }\n    /**\n     * Replaces the value for a parameter.\n     * @param {?} param The parameter name.\n     * @param {?} value The new value.\n     * @return {?} A new body with the new value.\n     */\n    set(param, value) { return this.clone({ param, value, op: 's' }); }\n    /**\n     * Removes a given value or all values from a parameter.\n     * @param {?} param The parameter name.\n     * @param {?=} value The value to remove, if provided.\n     * @return {?} A new body with the given value removed, or with all values\n     * removed if no value is specified.\n     */\n    delete(param, value) { return this.clone({ param, value, op: 'd' }); }\n    /**\n     * Serializes the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    toString() {\n        this.init();\n        return this.keys()\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        key => {\n            /** @type {?} */\n            const eKey = this.encoder.encodeKey(key);\n            return (/** @type {?} */ ((/** @type {?} */ (this.map)).get(key))).map((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => eKey + '=' + this.encoder.encodeValue(value)))\n                .join('&');\n        }))\n            .join('&');\n    }\n    /**\n     * @private\n     * @param {?} update\n     * @return {?}\n     */\n    clone(update) {\n        /** @type {?} */\n        const clone = new HttpParams((/** @type {?} */ ({ encoder: this.encoder })));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    init() {\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach((/**\n             * @param {?} key\n             * @return {?}\n             */\n            key => (/** @type {?} */ (this.map)).set(key, (/** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ (this.cloneFrom)).map)).get(key))))));\n            (/** @type {?} */ (this.updates)).forEach((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        /** @type {?} */\n                        const base = (update.op === 'a' ? (/** @type {?} */ (this.map)).get(update.param) : undefined) || [];\n                        base.push((/** @type {?} */ (update.value)));\n                        (/** @type {?} */ (this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            /** @type {?} */\n                            let base = (/** @type {?} */ (this.map)).get(update.param) || [];\n                            /** @type {?} */\n                            const idx = base.indexOf(update.value);\n                            if (idx !== -1) {\n                                base.splice(idx, 1);\n                            }\n                            if (base.length > 0) {\n                                (/** @type {?} */ (this.map)).set(update.param, base);\n                            }\n                            else {\n                                (/** @type {?} */ (this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            (/** @type {?} */ (this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            }));\n            this.cloneFrom = this.updates = null;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpRequest {\n    /**\n     * @param {?} method\n     * @param {?} url\n     * @param {?=} third\n     * @param {?=} fourth\n     */\n    constructor(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        /** @type {?} */\n        let options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? (/** @type {?} */ (third)) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = (/** @type {?} */ (third));\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            /** @type {?} */\n            const params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                /** @type {?} */\n                const qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                /** @type {?} */\n                const sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    serializeBody() {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return ((/** @type {?} */ (this.body))).toString();\n    }\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    detectContentTypeHeader() {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        /** @type {?} */\n        const method = update.method || this.method;\n        /** @type {?} */\n        const url = update.url || this.url;\n        /** @type {?} */\n        const responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        /** @type {?} */\n        const body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        /** @type {?} */\n        const withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        /** @type {?} */\n        const reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        /** @type {?} */\n        let headers = update.headers || this.headers;\n        /** @type {?} */\n        let params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce((/**\n                 * @param {?} headers\n                 * @param {?} name\n                 * @return {?}\n                 */\n                (headers, name) => headers.set(name, (/** @type {?} */ (update.setHeaders))[name])), headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce((/**\n             * @param {?} params\n             * @param {?} param\n             * @return {?}\n             */\n            (params, param) => params.set(param, (/** @type {?} */ (update.setParams))[param])), params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params, headers, reportProgress, responseType, withCredentials,\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst HttpEventType = {\n    /**\n     * The request was sent out over the wire.\n     */\n    Sent: 0,\n    /**\n     * An upload progress event was received.\n     */\n    UploadProgress: 1,\n    /**\n     * The response status code and headers were received.\n     */\n    ResponseHeader: 2,\n    /**\n     * A download progress event was received.\n     */\n    DownloadProgress: 3,\n    /**\n     * The full response including the body was received.\n     */\n    Response: 4,\n    /**\n     * A custom event from an interceptor or a backend.\n     */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = 'Sent';\nHttpEventType[HttpEventType.UploadProgress] = 'UploadProgress';\nHttpEventType[HttpEventType.ResponseHeader] = 'ResponseHeader';\nHttpEventType[HttpEventType.DownloadProgress] = 'DownloadProgress';\nHttpEventType[HttpEventType.Response] = 'Response';\nHttpEventType[HttpEventType.User] = 'User';\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpResponseBase {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     * @param {?} init\n     * @param {?=} defaultStatus\n     * @param {?=} defaultStatusText\n     */\n    constructor(init, defaultStatus = 200, defaultStatusText = 'OK') {\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n}\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@publicApi\n */\nclass HttpHeaderResponse extends HttpResponseBase {\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.ResponseHeader;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@publicApi\n * @template T\n */\nclass HttpResponse extends HttpResponseBase {\n    /**\n     * Construct a new `HttpResponse`.\n     * @param {?=} init\n     */\n    constructor(init = {}) {\n        super(init);\n        this.type = HttpEventType.Response;\n        this.body = init.body !== undefined ? init.body : null;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    clone(update = {}) {\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    }\n}\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@publicApi\n */\nclass HttpErrorResponse extends HttpResponseBase {\n    /**\n     * @param {?} init\n     */\n    constructor(init) {\n        // Initialize with a default status of 0 / Unknown Error.\n        super(init, 0, 'Unknown Error');\n        this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (this.status >= 200 && this.status < 300) {\n            this.message = `Http failure during parsing for ${init.url || '(unknown url)'}`;\n        }\n        else {\n            this.message =\n                `Http failure response for ${init.url || '(unknown url)'}: ${init.status} ${init.statusText}`;\n        }\n        this.error = init.error || null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Constructs an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. This function clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Performs HTTP requests.\n *\n * This service is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies based on\n * the signature that is called (mainly the values of `observe` and `responseType`).\n *\n * \\@usageNotes\n * Sample HTTP requests for the [Tour of Heroes](/tutorial/toh-pt0) application.\n *\n * ### HTTP Request Example\n *\n * ```\n *  // GET heroes whose name contains search term\n * searchHeroes(term: string): observable<Hero[]>{\n *\n *  const params = new HttpParams({fromString: 'name=term'});\n *    return this.httpClient.request('GET', this.heroesUrl, {responseType:'json', params});\n * }\n * ```\n * ### JSONP Example\n * ```\n * requestJsonp(url, callback = 'callback') {\n *  return this.httpClient.jsonp(this.heroesURL, callback);\n * }\n * ```\n *\n * ### PATCH Example\n * ```\n * // PATCH one of the heroes' name\n * patchHero (id: number, heroName: string): Observable<{}> {\n * const url = `${this.heroesUrl}/${id}`;   // PATCH api/heroes/42\n *  return this.httpClient.patch(url, {name: heroName}, httpOptions)\n *    .pipe(catchError(this.handleError('patchHero')));\n * }\n * ```\n *\n * @see [HTTP Guide](guide/http)\n *\n * \\@publicApi\n */\nclass HttpClient {\n    /**\n     * @param {?} handler\n     */\n    constructor(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an observable for a generic HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * You can pass an `HttpRequest` directly as the only parameter. In this case,\n     * the call returns an observable of the raw `HttpEvent` stream.\n     *\n     * Alternatively you can pass an HTTP method as the first parameter,\n     * a URL string as the second, and an options hash containing the request body as the third.\n     * See `addBody()`. In this case, the specified `responseType` and `observe` options determine the\n     * type of returned observable.\n     *   * The `responseType` value determines how a successful response body is parsed.\n     *   * If `responseType` is the default `json`, you can pass a type interface for the resulting\n     * object as a type parameter to the call.\n     *\n     * The `observe` value determines the return type, according to what you are interested in\n     * observing.\n     *   * An `observe` value of events returns an observable of the raw `HttpEvent` stream, including\n     * progress events by default.\n     *   * An `observe` value of response returns an observable of `HttpResponse<T>`,\n     * where the `T` parameter depends on the `responseType` and any optionally provided type\n     * parameter.\n     *   * An `observe` value of body returns an observable of `<T>` with the same `T` body type.\n     *\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    request(first, url, options = {}) {\n        /** @type {?} */\n        let req;\n        // First, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = (/** @type {?} */ (first));\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming `GET` unless a method is\n            // provided.\n            // Figure out the headers.\n            /** @type {?} */\n            let headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            /** @type {?} */\n            let params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams((/** @type {?} */ ({ fromObject: options.params })));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, (/** @type {?} */ (url)), (options.body !== undefined ? options.body : null), {\n                headers,\n                params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        /** @type {?} */\n        const events$ = of(req).pipe(concatMap((/**\n         * @param {?} req\n         * @return {?}\n         */\n        (req) => this.handler.handle(req))));\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        /** @type {?} */\n        const res$ = (/** @type {?} */ (events$.pipe(filter((/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => event instanceof HttpResponse)))));\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        })));\n                    case 'blob':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        })));\n                    case 'text':\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        })));\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return res$.pipe(map((/**\n                         * @param {?} res\n                         * @return {?}\n                         */\n                        (res) => res.body)));\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);\n        }\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `DELETE` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     *\n     * @param {?} url     The endpoint URL.\n     * @param {?=} options The HTTP options to send with the request.\n     *\n     * @return {?}\n     */\n    delete(url, options = {}) {\n        return this.request('DELETE', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `GET` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    get(url, options = {}) {\n        return this.request('GET', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `HEAD` request to execute on the server. The `HEAD` method returns\n     * meta information about the resource without transferring the\n     * resource itself. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    head(url, options = {}) {\n        return this.request('HEAD', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes a request with the special method\n     * `JSONP` to be dispatched via the interceptor pipeline.\n     * The [JSONP pattern](https://en.wikipedia.org/wiki/JSONP) works around limitations of certain\n     * API endpoints that don't support newer,\n     * and preferable [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) protocol.\n     * JSONP treats the endpoint API as a JavaScript file and tricks the browser to process the\n     * requests even if the API endpoint is not located on the same domain (origin) as the client-side\n     * application making the request.\n     * The endpoint API must support JSONP callback for JSONP requests to work.\n     * The resource API returns the JSON response wrapped in a callback function.\n     * You can pass the callback function name as one of the query parameters.\n     * Note that JSONP requests can only be used with `GET` requests.\n     *\n     * @template T\n     * @param {?} url The resource URL.\n     * @param {?} callbackParam The callback function name.\n     *\n     * @return {?}\n     */\n    jsonp(url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    }\n    /**\n     * Constructs an `Observable` that, when subscribed, causes the configured\n     * `OPTIONS` request to execute on the server. This method allows the client\n     * to determine the supported HTTP methods and other capabilites of an endpoint,\n     * without implying a resource action. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    options(url, options = {}) {\n        return this.request('OPTIONS', url, (/** @type {?} */ (options)));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PATCH` request to execute on the server. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    patch(url, body, options = {}) {\n        return this.request('PATCH', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `POST` request to execute on the server. The server responds with the location of\n     * the replaced resource. See the individual overloads for\n     * details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    post(url, body, options = {}) {\n        return this.request('POST', url, addBody(options, body));\n    }\n    /**\n     * Constructs an observable that, when subscribed, causes the configured\n     * `PUT` request to execute on the server. The `PUT` method replaces an existing resource\n     * with a new set of values.\n     * See the individual overloads for details on the return type.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    put(url, body, options = {}) {\n        return this.request('PUT', url, addBody(options, body));\n    }\n}\nHttpClient.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpClient.ctorParameters = () => [\n    { type: HttpHandler }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n *\n */\nclass HttpInterceptorHandler {\n    /**\n     * @param {?} next\n     * @param {?} interceptor\n     */\n    constructor(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        return this.interceptor.intercept(req, this.next);\n    }\n}\n/**\n * A multi-provider token that represents the array of registered\n * `HttpInterceptor` objects.\n *\n * \\@publicApi\n * @type {?}\n */\nconst HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nclass NoopInterceptor {\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        return next.handle(req);\n    }\n}\nNoopInterceptor.decorators = [\n    { type: Injectable }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\n/** @type {?} */\nlet nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\n/** @type {?} */\nconst JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\n/** @type {?} */\nconst JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\n/** @type {?} */\nconst JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n *\n * @abstract\n */\nclass JsonpCallbackContext {\n}\n/**\n * Processes an `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n * @see `HttpHandler`\n * @see `HttpXhrBackend`\n *\n * \\@publicApi\n */\nclass JsonpClientBackend {\n    /**\n     * @param {?} callbackMap\n     * @param {?} document\n     */\n    constructor(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @private\n     * @return {?}\n     */\n    nextCallback() { return `ng_jsonp_callback_${nextRequestId++}`; }\n    /**\n     * Processes a JSONP request and returns an event stream of the results.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     *\n     */\n    handle(req) {\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            /** @type {?} */\n            const callback = this.nextCallback();\n            /** @type {?} */\n            const url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, `=${callback}$1`);\n            // Construct the <script> tag and point it at the URL.\n            /** @type {?} */\n            const node = this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            /** @type {?} */\n            let body = null;\n            // Whether the response callback has been called.\n            /** @type {?} */\n            let finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            /** @type {?} */\n            let cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            this.callbackMap[callback] = (/**\n             * @param {?=} data\n             * @return {?}\n             */\n            (data) => {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            });\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            /** @type {?} */\n            const cleanup = (/**\n             * @return {?}\n             */\n            () => {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete this.callbackMap[callback];\n            });\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            /** @type {?} */\n            const onLoad = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body,\n                    status: 200,\n                    statusText: 'OK', url,\n                }));\n                // Complete the stream, the response is over.\n                observer.complete();\n            });\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error,\n                    status: 0,\n                    statusText: 'JSONP Error', url,\n                }));\n            });\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            });\n        }));\n    }\n}\nJsonpClientBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpClientBackend.ctorParameters = () => [\n    { type: JsonpCallbackContext },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/**\n * Identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * @see `HttpInterceptor`\n *\n * \\@publicApi\n */\nclass JsonpInterceptor {\n    /**\n     * @param {?} jsonp\n     */\n    constructor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * Identifies and handles a given JSONP request.\n     * @param {?} req The outgoing request object to handle.\n     * @param {?} next The next interceptor in the chain, or the backend\n     * if no interceptors remain in the chain.\n     * @return {?} An observable of the event stream.\n     */\n    intercept(req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle((/** @type {?} */ (req)));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    }\n}\nJsonpInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nJsonpInterceptor.ctorParameters = () => [\n    { type: JsonpClientBackend }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@publicApi\n * @abstract\n */\nclass XhrFactory {\n}\n/**\n * A factory for `HttpXhrBackend` that uses the `XMLHttpRequest` browser API.\n *\n */\nclass BrowserXhr {\n    constructor() { }\n    /**\n     * @return {?}\n     */\n    build() { return (/** @type {?} */ ((new XMLHttpRequest()))); }\n}\nBrowserXhr.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nBrowserXhr.ctorParameters = () => [];\n/**\n * Uses `XMLHttpRequest` to send requests to a backend server.\n * @see `HttpHandler`\n * @see `JsonpClientBackend`\n *\n * \\@publicApi\n */\nclass HttpXhrBackend {\n    /**\n     * @param {?} xhrFactory\n     */\n    constructor(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Processes a request and returns a stream of response events.\n     * @param {?} req The request object.\n     * @return {?} An observable of the response events.\n     */\n    handle(req) {\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(`Attempted to construct Jsonp request without JsonpClientModule installed.`);\n        }\n        // Everything happens on Observable subscription.\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            /** @type {?} */\n            const xhr = this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach((/**\n             * @param {?} name\n             * @param {?} values\n             * @return {?}\n             */\n            (name, values) => xhr.setRequestHeader(name, values.join(','))));\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                /** @type {?} */\n                const detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                /** @type {?} */\n                const responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = (/** @type {?} */ (((responseType !== 'json') ? responseType : 'text')));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            /** @type {?} */\n            const reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            /** @type {?} */\n            let headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            /** @type {?} */\n            const partialFromXhr = (/**\n             * @return {?}\n             */\n            () => {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                /** @type {?} */\n                const status = xhr.status === 1223 ? 204 : xhr.status;\n                /** @type {?} */\n                const statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                /** @type {?} */\n                const headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                /** @type {?} */\n                const url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers, status, statusText, url });\n                return headerResponse;\n            });\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            /** @type {?} */\n            const onLoad = (/**\n             * @return {?}\n             */\n            () => {\n                // Read response state from the memoized partial data.\n                let { headers, status, statusText, url } = partialFromXhr();\n                // The body will be read out if present.\n                /** @type {?} */\n                let body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                /** @type {?} */\n                let ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    /** @type {?} */\n                    const originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = (/** @type {?} */ ({ error, text: body }));\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers,\n                        status,\n                        statusText,\n                        url: url || undefined,\n                    }));\n                }\n            });\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            /** @type {?} */\n            const onError = (/**\n             * @param {?} error\n             * @return {?}\n             */\n            (error) => {\n                const { url } = partialFromXhr();\n                /** @type {?} */\n                const res = new HttpErrorResponse({\n                    error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                    url: url || undefined,\n                });\n                observer.error(res);\n            });\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            /** @type {?} */\n            let sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onDownProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                /** @type {?} */\n                let progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            });\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            /** @type {?} */\n            const onUpProgress = (/**\n             * @param {?} event\n             * @return {?}\n             */\n            (event) => {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                /** @type {?} */\n                let progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            });\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send((/** @type {?} */ (reqBody)));\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return (/**\n             * @return {?}\n             */\n            () => {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            });\n        }));\n    }\n}\nHttpXhrBackend.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXhrBackend.ctorParameters = () => [\n    { type: XhrFactory }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\n/** @type {?} */\nconst XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@publicApi\n * @abstract\n */\nclass HttpXsrfTokenExtractor {\n}\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nclass HttpXsrfCookieExtractor {\n    /**\n     * @param {?} doc\n     * @param {?} platform\n     * @param {?} cookieName\n     */\n    constructor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    getToken() {\n        if (this.platform === 'server') {\n            return null;\n        }\n        /** @type {?} */\n        const cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ÉµparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    }\n}\nHttpXsrfCookieExtractor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfCookieExtractor.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] }] }\n];\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nclass HttpXsrfInterceptor {\n    /**\n     * @param {?} tokenService\n     * @param {?} headerName\n     */\n    constructor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    intercept(req, next) {\n        /** @type {?} */\n        const lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        /** @type {?} */\n        const token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    }\n}\nHttpXsrfInterceptor.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpXsrfInterceptor.ctorParameters = () => [\n    { type: HttpXsrfTokenExtractor },\n    { type: String, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] }] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * An injectable `HttpHandler` that applies multiple interceptors\n * to a request before passing it to the given `HttpBackend`.\n *\n * The interceptors are loaded lazily from the injector, to allow\n * interceptors to themselves inject classes depending indirectly\n * on `HttpInterceptingHandler` itself.\n * @see `HttpInterceptor`\n */\nclass HttpInterceptingHandler {\n    /**\n     * @param {?} backend\n     * @param {?} injector\n     */\n    constructor(backend, injector) {\n        this.backend = backend;\n        this.injector = injector;\n        this.chain = null;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    handle(req) {\n        if (this.chain === null) {\n            /** @type {?} */\n            const interceptors = this.injector.get(HTTP_INTERCEPTORS, []);\n            this.chain = interceptors.reduceRight((/**\n             * @param {?} next\n             * @param {?} interceptor\n             * @return {?}\n             */\n            (next, interceptor) => new HttpInterceptorHandler(next, interceptor)), this.backend);\n        }\n        return this.chain.handle(req);\n    }\n}\nHttpInterceptingHandler.decorators = [\n    { type: Injectable }\n];\n/** @nocollapse */\nHttpInterceptingHandler.ctorParameters = () => [\n    { type: HttpBackend },\n    { type: Injector }\n];\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n *\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * Configures XSRF protection support for outgoing requests.\n *\n * For a server that supports a cookie-based XSRF protection system,\n * use directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no names are supplied, the default cookie name is `XSRF-TOKEN`\n * and the default header name is `X-XSRF-TOKEN`.\n *\n * \\@publicApi\n */\nclass HttpClientXsrfModule {\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    static disable() {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    }\n    /**\n     * Configure XSRF protection.\n     * @param {?=} options An object that can specify either or both\n     * cookie name or header name.\n     * - Cookie name default is `XSRF-TOKEN`.\n     * - Header name default is `X-XSRF-TOKEN`.\n     *\n     * @return {?}\n     */\n    static withOptions(options = {}) {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    }\n}\nHttpClientXsrfModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    HttpXsrfInterceptor,\n                    { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                    { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                    { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                    { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for XSRF. Automatically imported by `HttpClientModule`.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientModule {\n}\nHttpClientModule.decorators = [\n    { type: NgModule, args: [{\n                /**\n                 * Optional configuration for XSRF protection.\n                 */\n                imports: [\n                    HttpClientXsrfModule.withOptions({\n                        cookieName: 'XSRF-TOKEN',\n                        headerName: 'X-XSRF-TOKEN',\n                    }),\n                ],\n                /**\n                 * Configures the [dependency injector](guide/glossary#injector) where it is imported\n                 * with supporting services for HTTP communications.\n                 */\n                providers: [\n                    HttpClient,\n                    { provide: HttpHandler, useClass: HttpInterceptingHandler },\n                    HttpXhrBackend,\n                    { provide: HttpBackend, useExisting: HttpXhrBackend },\n                    BrowserXhr,\n                    { provide: XhrFactory, useExisting: BrowserXhr },\n                ],\n            },] }\n];\n/**\n * Configures the [dependency injector](guide/glossary#injector) for `HttpClient`\n * with supporting services for JSONP.\n * Without this module, Jsonp requests reach the backend\n * with method JSONP, where they are rejected.\n *\n * You can add interceptors to the chain behind `HttpClient` by binding them to the\n * multiprovider for built-in [DI token](guide/glossary#di-token) `HTTP_INTERCEPTORS`.\n *\n * \\@publicApi\n */\nclass HttpClientJsonpModule {\n}\nHttpClientJsonpModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [\n                    JsonpClientBackend,\n                    { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                    { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                ],\n            },] }\n];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NoopInterceptor as Éµangular_packages_common_http_http_a, JsonpCallbackContext as Éµangular_packages_common_http_http_b, jsonpCallbackContext as Éµangular_packages_common_http_http_c, BrowserXhr as Éµangular_packages_common_http_http_d, HttpXsrfCookieExtractor as Éµangular_packages_common_http_http_g, HttpXsrfInterceptor as Éµangular_packages_common_http_http_h, XSRF_COOKIE_NAME as Éµangular_packages_common_http_http_e, XSRF_HEADER_NAME as Éµangular_packages_common_http_http_f, HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, HttpInterceptingHandler as ÉµHttpInterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor };\n//# sourceMappingURL=http.js.map\n","<router-outlet></router-outlet>","import {Injectable} from '@angular/core';\nimport * as $ from 'jquery';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdditionalService {\n\n    constructor() {\n    }\n\n    // showing front end loader\n    showLoader() {\n        if (!$('.camping-loader').hasClass('loaded')) {\n            $('.camping-loader').html('<div class=\"response-layer\"><div class=\"wrapper\"><picture itemscope=\"\" itemtype=\"http://schema.org/ImageObject\"><source media=\"(max-width: 768px)\" srcset=\"assets/images/dcn-flipping-coin-logo-loader-v3-mobile.gif\"><img itemprop=\"contentUrl\" src=\"assets/images/dcn-flipping-coin-logo-loader-v3_desktop.gif\" class=\"max-width-250 max-width-xs-200\" alt=\"Loader\"></picture></div></div>').addClass('loaded');\n            $('.camping-loader .response-layer').show();\n        } else {\n            $('.camping-loader .response-layer').show();\n        }\n    }\n\n    // hiding front end loader\n    hideLoader() {\n        $('.camping-loader .response-layer').hide();\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpParams, HttpHeaders} from '@angular/common/http';\nimport {Router} from '@angular/router';\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {RedirectsService} from './redirects.service';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthenticationServiceService {\n    isDentistLoggedSubject = new BehaviorSubject<boolean>(this.hasDentistStorageSession());\n    isPatientLoggedSubject = new BehaviorSubject<boolean>(this.hasPatientStorageSession());\n    generalError: boolean = false;\n    dentistAuthFailed: boolean = false;\n    notAPartner: boolean = false;\n\n    constructor(private router: Router, private http: HttpClient, private redirectsService: RedirectsService) {\n    }\n\n    dentistLogin(email: string, password: string, type: string) {\n        console.log('dentistLogin');\n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n        const body = new HttpParams().set('email', email).set('password', password).set('platform', 'assurance').set('type', type);\n        // const body = new HttpParams().set('email', 'miroslav.nedelchev@dentacoin.com').set('password', 'uniquepass').set('platform', 'assurance').set('type', type);\n        this.http.post(environment.coreDbApiDomain + '/api/login', body.toString(), ParseHeaders).subscribe({\n            next: (response: any) => {\n                console.log(response, 'dentistLogin');\n                if (response.success) {\n                    if (response.data.is_partner == true) {\n                        console.log('partner');\n                        window.localStorage.setItem('currentDentist', JSON.stringify({\n                            id: response.data.id,\n                            token: response.token\n                        }));\n                        this.isDentistLoggedSubject.next(true);\n                        this.redirectsService.redirectToAdmin();\n                    } else {\n                        console.log('not partner');\n                        this.notAPartner = true;\n                    }\n                } else {\n                    this.dentistAuthFailed = true;\n                }\n            },\n            error: error => {\n                this.generalError = true;\n            }\n        });\n    }\n\n    logout(redirect: string) {\n        window.localStorage.clear();\n        this.isPatientLoggedSubject.next(false);\n        this.isDentistLoggedSubject.next(false);\n\n        if (redirect === 'dentist') {\n            this.redirectsService.redirectToAdminLogin();\n        } else if (redirect === 'patient') {\n            this.redirectsService.redirectToPatientLogin('login');\n        }\n    }\n\n    hasDentistStorageSession(): boolean {\n        return !!window.localStorage.getItem('currentDentist');\n    }\n\n    hasPatientStorageSession(): boolean {\n        return !!window.localStorage.getItem('currentPatient');\n    }\n\n    isDentistLoggedIn() : Observable<boolean> {\n        return this.isDentistLoggedSubject.asObservable();\n    }\n\n    isPatientLoggedIn() : Observable<boolean> {\n        return this.isPatientLoggedSubject.asObservable();\n    }\n\n    redirectToLoginIfNotLoggedIn() {\n        if (!this.hasDentistStorageSession()) {\n            this.redirectsService.redirectToAdminLogin();\n        }\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LanguageService {\n\n    constructor(private translate: TranslateService, private activatedRoute: ActivatedRoute, private router: Router) {\n    }\n\n    onLangSwitcherChange(lang) {\n        this.router.navigateByUrl(this.router.url.substring(0, 1) + lang + this.router.url.substring(3));\n    }\n}\n","import {Injectable, NgZone} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RedirectsService {\n    constructor(private router: Router, private translate: TranslateService, private ngZone: NgZone) {\n    }\n\n    redirectToAdminLogin() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin-login')).then();\n    }\n\n    redirectToAdmin() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin')).then();\n    }\n\n    redirectToAdvancedAdmin() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang + '/admin/advanced')).then();\n    }\n\n    redirectToLoggedHome() {\n        this.ngZone.run(() => this.router.navigateByUrl(this.translate.currentLang)).then();\n    }\n\n    redirectToPatientLogin(type: string) {\n        console.log('redirectToPatientLogin');\n        if (type === 'account-verification') {\n            this.router.navigate([this.translate.currentLang + '/login'], {state: {successfullyVerifiedAccount: true}});\n        } else if (type === 'change-password') {\n            this.router.navigate([this.translate.currentLang + '/login'], {state: {successfullyChangePassword: true}});\n        } else if (type === 'login') {\n            this.router.navigateByUrl(this.translate.currentLang + '/login');\n        }\n    }\n\n    redirectToMyWallet() {\n        this.router.navigateByUrl(this.translate.currentLang + '/my-wallet');\n    }\n\n    redirectToEditAccount() {\n        this.router.navigateByUrl(this.translate.currentLang + '/edit-account');\n    }\n\n    redirectToManagePrivacy() {\n        this.router.navigateByUrl(this.translate.currentLang + '/manage-privacy');\n    }\n}\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {Observable} from 'rxjs';\r\nimport {environment} from '../../environments/environment';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class RequestsService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n\r\n    public getDentacoinDataByExternalProvider(currency: string): Observable<{}> {\r\n        return this.http.get('https://indacoin.com/api/GetCoinConvertAmount/' + currency + '/DCN/100/dentacoin');\r\n    }\r\n\r\n    // ===================================== HubApp api methods =====================================\r\n\r\n    public getDentistData(id: any): Observable<{}> {\r\n        return this.http.get('https://dcn-hub-app-api.dentacoin.com/dentist/get-dentist-data/' + id);\r\n    }\r\n\r\n    public sendRequestAccountMail(body): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/send-request-account-mail', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    public dentistSendRequestAccountMail(body): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/dentist/dentist-send-request-account-mail', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    public withdraw(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/withdraw', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public coreDbLogin(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/coredb-login', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json'\r\n            })\r\n        });\r\n    }\r\n\r\n    public getWithdrawHistory(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/get-dcn-withdraw-history', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    public requestForgottenPasswordToken(body: string): Observable<{}> {\r\n        return this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/request-forgotten-password', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded'\r\n            })\r\n        });\r\n    }\r\n\r\n    // ===================================== CoreDB api methods =====================================\r\n    public getTitles(): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/enums');\r\n    }\r\n\r\n    public getCountries(): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/countries');\r\n    }\r\n\r\n    public downloadGDPRData(token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/gdpr/', null, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public deleteProfile(body: string, token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/user/', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public editProfile(body: string, token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/user/', body, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public getUserData(token: string): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/user/', {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public getDCNBalance(token: string): Observable<{}> {\r\n        return this.http.post(environment.coreDbApiDomain + '/api/balance', null, {\r\n            headers: new HttpHeaders({\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer ' + token\r\n            })\r\n        });\r\n    }\r\n\r\n    public getAddresses(id: any): Observable<{}> {\r\n        return this.http.get(environment.coreDbApiDomain + '/api/wallet-addresses/' + id);\r\n    }\r\n}\r\n","<div class=\"container padding-top-200\">\n    <div class=\"row\">\n        <div class=\"col-xs-12\">\n            <h1 class=\"fs-30 calibri-bold text-center title-label padding-top-40 padding-bottom-30\">Dentaprime Hub admin panel</h1>\n        </div>\n        <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n            <form [formGroup]=\"dentistsLoginForm\" (ngSubmit)=\"onDentistsFormSubmit()\">\n                <div>\n                    <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                        <label for=\"dentist-login-email\" class=\"platform-color\">Email address:</label>\n                        <input maxlength=\"100\" type=\"text\" id=\"dentist-login-email\" formControlName=\"email\" class=\"full-rounded form-field platform-border-color\"/>\n                    </div>\n                    <div *ngIf=\"dentistsFormSubmitted && dentists_form_data.email.errors\">\n                        <div class=\"error-handle\" *ngIf=\"dentists_form_data.email.errors.required\">Email is required.</div>\n                        <div class=\"error-handle\" *ngIf=\"dentists_form_data.email.errors.email\">Please enter valid email.</div>\n                    </div>\n                </div>\n                <div class=\"padding-top-10\">\n                    <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                        <label for=\"dentist-login-password\" class=\"platform-color\">Password:</label>\n                        <input type=\"password\" maxlength=\"50\" id=\"dentist-login-password\" formControlName=\"password\" class=\"full-rounded form-field platform-border-color\"/>\n                    </div>\n                    <div *ngIf=\"dentistsFormSubmitted && dentists_form_data.password.errors\">\n                        <div class=\"error-handle\" *ngIf=\"dentists_form_data.password.errors.required\">Password is required.</div>\n                    </div>\n                </div>\n                <div class=\"padding-top-30 padding-bottom-10 text-center\">\n                    <button class=\"module platform-custom-button platform-background-color platform-border-color hover\">LOGIN</button>\n                </div>\n                <div class=\"padding-top-20 padding-bottom-10 text-center fs-16 calibri-light\">\n                    <div>{{'having-trouble-login' | translate}}</div>\n                    <a href=\"https://account.dentacoin.com/forgotten-password\" target=\"_blank\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 lato-bold platform-color\">{{'forgotten-password-redirect' | translate}}</a>\n                </div>\n                <div class=\"error-handle margin-bottom-20\" *ngIf=\"authenticationServiceService.generalError\">{{'general-error' | translate}}</div>\n                <div class=\"error-handle margin-bottom-20\" *ngIf=\"authenticationServiceService.notAPartner\">{{'not-a-partner-error' | translate}}</div>\n                <div class=\"error-handle margin-bottom-20\" *ngIf=\"authenticationServiceService.dentistAuthFailed\">{{'dentist-auth-failed' | translate}}</div>\n            </form>\n        </div>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-admin-login',\n  templateUrl: './admin-login.component.html'\n})\nexport class AdminLoginComponent implements OnInit {\n    public isDentistLoggedIn: Observable<boolean>;\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, private translate: TranslateService) {\n        this.isDentistLoggedIn = authenticationServiceService.isDentistLoggedSubject;\n    }\n\n    dentistsLoginForm: FormGroup;\n    dentistsFormSubmitted = false;\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasDentistStorageSession()) {\n            // logged-in logic\n            this.redirectsService.redirectToAdmin();\n        } else {\n            // not logged-in logic\n            this.dentistsLoginForm = this.formBuilder.group({\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ])),\n                password: ['', Validators.required]\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get dentists_form_data() {\n        return this.dentistsLoginForm.controls;\n    }\n\n    // dentist trying to log in\n    onDentistsFormSubmit() {\n        this.dentistsFormSubmitted = true;\n        // stop here if form is invalid\n        if (this.dentistsLoginForm.invalid) {\n            return;\n        }\n\n        this.authenticationServiceService.dentistLogin(this.dentists_form_data.email.value.trim(), this.dentists_form_data.password.value.trim(), 'dentist');\n    }\n}\n","<main class=\"admin-main-content\">\r\n    <router-outlet></router-outlet>\r\n</main>","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\n\n@Component({\n    selector: 'app-admin-panel',\n    templateUrl: './admin.component.html'\n})\n\nexport class AdminComponent implements OnInit {\n\n    constructor(public authenticationServiceService: AuthenticationServiceService) {\n        this.authenticationServiceService.redirectToLoginIfNotLoggedIn();\n    }\n\n    ngOnInit() {\n\n    }\n}\n","<div class=\"admin-content\">\n    <div class=\"wrapper\">\n        <div class=\"main-header\">\n            <figure class=\"logo\">\n                <img src=\"https://www.dentaprime.com/wp-content/themes/dentaprime2019/style/images/logo-swiss-dentaprime.svg\" alt=\"Logo\"/>\n            </figure>\n            <!-- Header Navbar: style can be found in header.less -->\n            <nav class=\"navbar navbar-static-top\">\n                <!-- Sidebar toggle button-->\n                <a href=\"#\" class=\"sidebar-toggle fs-18\" data-toggle=\"offcanvas\" role=\"button\">\n                    <span class=\"sr-only\">Toggle navigation</span>\n                </a>\n                <div class=\"text-right top-right-menu\">\n                    <ul class=\"parent-menu\">\n                        <li>\n                            <a href=\"javascript:void(0);\">Admin</a>\n                            <ul class=\"submenu\">\n                                <li><a href=\"javascript:void(0)\" class=\"cursor-pointer\" (click)=\"this.authenticationServiceService.logout('dentist')\">Logout</a></li>\n                            </ul>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </div>\n        <!-- =============================================== -->\n        <!-- Left side column. contains the sidebar -->\n        <aside class=\"main-sidebar\">\n            <!-- sidebar: style can be found in sidebar.less -->\n            <section class=\"sidebar\">\n                <!-- sidebar menu: : style can be found in sidebar.less -->\n                <ul class=\"sidebar-menu\">\n                    <li>\n                        <a [routerLink]=\"['applications']\"><i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i> Applications</a>\n                    </li>\n                    <li>\n                        <a [routerLink]=\"['push-notifications']\"><i class=\"fa fa-star\" aria-hidden=\"true\"></i> Push nofitications</a>\n                    </li>\n                    <li>\n                        <a (click)=\"this.redirectsService.redirectToAdmin()\"><i class=\"fa fa-list-ul\" aria-hidden=\"true\"></i> User friendly admin</a>\n                    </li>\n                </ul>\n            </section>\n            <!-- /.sidebar -->\n        </aside>\n        <!-- =============================================== -->\n        <!-- Content Wrapper. Contains page content -->\n        <div class=\"content-wrapper\">\n            <router-outlet></router-outlet>\n        </div>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {AuthenticationServiceService} from '../../_services/authentication-service.service';\nimport {RedirectsService} from '../../_services/redirects.service';\n\n@Component({\n    selector: 'app-advanced-admin-panel',\n    templateUrl: './advanced-admin-panel.component.html'\n})\n\nexport class AdvancedAdminPanelComponent implements OnInit {\n    public isDentistLoggedIn: Observable<boolean>;\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService) {\n        this.isDentistLoggedIn = authenticationServiceService.isDentistLoggedSubject;\n    }\n\n    ngOnInit() {\n\n    }\n}\n","Applications","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-applications',\n  templateUrl: './applications.component.html'\n})\nexport class ApplicationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","Push notifications","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-push-notifications',\n  templateUrl: './push-notifications.component.html'\n})\nexport class PushNotificationsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"container basic-admin-panel padding-top-20 padding-bottom-15\">\r\n    <div class=\"row\">\r\n        <div class=\"col-xs-5 padding-right-0 enableBlur dentist-logo\">\r\n            <div class=\"dentist-logo-wrapper platform-border-color important show-in-edit-mode inline-block-mode\">\r\n                <button type=\"button\" class=\"dentist-logo-btn\">\r\n                    <label for=\"dentist-logo\"></label>\r\n                </button>\r\n                <input type=\"file\" accept=\".jpg,.jpeg,.png\" class=\"hide\" id=\"dentist-logo\"/>\r\n                <input type=\"hidden\" class=\"hide\" id=\"dentist-logo-media\"/>\r\n                <input type=\"hidden\" class=\"hide\" id=\"dentist-logo-media-name\"/>\r\n            </div>\r\n            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"hide-in-edit-mode max-width-200\"></figure>\r\n        </div>\r\n        <div class=\"col-xs-2 text-center pick-dentist-color-parent disableBlur\">\r\n            <a href=\"javascript:void(0);\" class=\"pick-dentist-color show-in-edit-mode\" data-opened=\"false\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"platform-border-color important\">\r\n                    <img src=\"assets/images/change-color-icon.png\" alt=\"Change color icon\"/>\r\n                </figure>\r\n            </a>\r\n            <div class=\"custom-dropdown-with-color-pickers\"></div>\r\n        </div>\r\n        <div class=\"col-sm-5 col-xs-7 text-right basic-admin-panel-navigation enableBlur padding-left-0 hide-in-edit-mode-sm\">\r\n            <div class=\"hide-in-edit-mode\">\r\n                <a (click)=\"this.redirectsService.redirectToAdvancedAdmin()\" class=\"module platform-custom-button-opposite-colors inline-block platform-color platform-border-color hover hide-sm\">Admin</a>\r\n                <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover margin-left-10 edit-page inline-block hide-sm\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> {{'edit-page' | translate}}</a>\r\n                <div class=\"lang-switcher inline-block hide-in-edit-mode\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"platform-text-color fix-selects-for-ios\">\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div class=\"show-in-edit-mode hide-sm\">\r\n                <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover save-changes\">SAVE CHANGES</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row enableBlur\">\r\n        <div class=\"col-xs-12 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3 basic-admin-panel-apps-wrapper\">\r\n            <div class=\"hub-title\">\r\n                <div class=\"hide-in-edit-mode padding-top-40 padding-top-xs-20 padding-bottom-30\">\r\n                    <h1 class=\"fs-30 fs-xs-22 calibri-bold text-center title-label platform-text-color\"></h1>\r\n                </div>\r\n                <div class=\"show-in-edit-mode padding-top-40 padding-top-xs-20 padding-bottom-30\">\r\n                    <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\r\n                        <label for=\"hub-title\" class=\"active-label platform-color\">Title:</label>\r\n                        <input type=\"text\" id=\"hub-title\" class=\"full-rounded form-field colorful-border platform-border-color\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row fs-0 apps-list\">\r\n                <div class=\"col-xs-4 text-center padding-bottom-15 inline-block-top single-app empty\">\r\n                    <div class=\"wrapper\">\r\n                        <button class=\"fs-60 line-height-60 calibri-bold add-app platform-color-important platform-border-color important\" [attr.data-default-apps-title]=\"'default-apps-title' | translate\" [attr.data-adding-custom-app-title]=\"'adding-custom-app-title' | translate\">+</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row mobile-btns-row show-on-sm padding-top-30 padding-bottom-20 enableBlur\">\r\n        <div class=\"col-xs-6 padding-right-5 text-right hide-in-edit-mode\">\r\n            <a (click)=\"this.redirectsService.redirectToAdvancedAdmin()\" class=\"module platform-custom-button-opposite-colors inline-block platform-color platform-border-color hover padding-left-10 padding-right-10\">Admin</a>\r\n        </div>\r\n        <div class=\"col-xs-6 padding-left-5 hide-in-edit-mode\">\r\n            <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover edit-page inline-block padding-left-10 padding-right-10\"><i class=\"fa fa-pencil\" aria-hidden=\"true\"></i> {{'edit-page' | translate}}</a>\r\n        </div>\r\n        <div class=\"col-xs-12 text-center show-in-edit-mode\">\r\n            <a href=\"javascript:void(0);\" class=\"module platform-custom-button platform-background-color platform-border-color hover save-changes\">SAVE CHANGES</a>\r\n        </div>\r\n    </div>\r\n</div>","import {Component} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport {RedirectsService} from '../../_services/redirects.service';\nimport {LanguageService} from '../../_services/language.service';\n// import * as $ from 'jquery';\n\n@Component({\n    selector: 'app-basic-admin-panel',\n    templateUrl: './basic-admin-panel.component.html'\n})\nexport class BasicAdminPanelComponent {\n    constructor(public translate: TranslateService, public redirectsService: RedirectsService, public languageService: LanguageService) {\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport {environment} from './../environments/environment';\r\n\r\nimport { PatientLoginPageComponent } from './patient-login-page/patient-login-page.component';\r\nimport { AdminComponent } from './admin/admin.component';\r\nimport { ApplicationsComponent } from './admin/advanced-admin-panel/applications/applications.component';\r\nimport { BasicAdminPanelComponent } from './admin/basic-admin-panel/basic-admin-panel.component';\r\nimport { AdvancedAdminPanelComponent } from './admin/advanced-admin-panel/advanced-admin-panel.component';\r\nimport { PushNotificationsComponent } from './admin/advanced-admin-panel/push-notifications/push-notifications.component';\r\nimport { AdminLoginComponent } from './admin-login/admin-login.component';\r\nimport { FrontEndLanguageComponent } from './front-end-language/front-end-language.component';\r\nimport { VerifyAccountComponent } from './verify-account/verify-account.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { MyWalletComponent } from './my-wallet/my-wallet.component';\r\nimport { EditAccountComponent } from './edit-account/edit-account.component';\r\nimport { ManagePrivacyComponent } from './manage-privacy/manage-privacy.component';\r\nimport { LoggedInWrapperComponent } from './logged-in-wrapper/logged-in-wrapper.component';\r\nimport { RequestAccountComponent } from './request-account/request-account.component';\r\nimport { ForgottenPasswordComponent } from './forgotten-password/forgotten-password.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { NotLoggedInWrapperComponent } from './not-logged-in-wrapper/not-logged-in-wrapper.component';\r\nimport { PatientRegisterByInviteComponent } from './patient-register-by-invite/patient-register-by-invite.component';\r\nimport { DentistRequestAccountComponent } from './dentist-request-account/dentist-request-account.component';\r\n\r\nconst routes: Routes = [\r\n    {path: '', pathMatch: 'full', redirectTo: '/' + environment.default_language},\r\n    {path: ':lang', component: FrontEndLanguageComponent, children: [\r\n        {path: '', component: LoggedInWrapperComponent, children: [\r\n            {path: '', component: HomeComponent},\r\n            /*{path: 'my-wallet', component: MyWalletComponent},\r\n            {path: 'edit-account', component: EditAccountComponent},\r\n            {path: 'manage-privacy', component: ManagePrivacyComponent},*/\r\n        ]},\r\n        {path: '', component: NotLoggedInWrapperComponent, children: [\r\n            {path: 'dentist-request-account', component: DentistRequestAccountComponent},\r\n            {path: 'request-account', component: RequestAccountComponent},\r\n            {path: 'login', component: PatientLoginPageComponent},\r\n            {path: 'patient-register-by-invite/:invite', component: PatientRegisterByInviteComponent},\r\n            /*{path: 'forgotten-password', component: ForgottenPasswordComponent},\r\n            {path: 'change-password/:token', component: ChangePasswordComponent},\r\n            {path: 'verify-account', children: [\r\n                {path: ':token', component: VerifyAccountComponent}\r\n            ]},*/\r\n        ]},\r\n        {path: 'admin-login', component: AdminLoginComponent},\r\n        {path: 'admin', component: AdminComponent,\r\n            children: [\r\n                {\r\n                    path: '',\r\n                    component: BasicAdminPanelComponent\r\n                },\r\n                {\r\n                    path: 'advanced',\r\n                    component: AdvancedAdminPanelComponent,\r\n                    children: [\r\n                        {\r\n                            path: 'applications',\r\n                            component: ApplicationsComponent\r\n                        },\r\n                        {\r\n                            path: 'push-notifications',\r\n                            component: PushNotificationsComponent\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]},\r\n    {path: '**', redirectTo: '/' + environment.default_language}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes, {onSameUrlNavigation: 'reload'})],\r\n    exports: [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {}\r\n\r\nexport const routingComponents = [FrontEndLanguageComponent, PatientLoginPageComponent, ApplicationsComponent, BasicAdminPanelComponent, AdminComponent, AdvancedAdminPanelComponent, PushNotificationsComponent, AdminLoginComponent, VerifyAccountComponent, HomeComponent, MyWalletComponent, EditAccountComponent, ManagePrivacyComponent, LoggedInWrapperComponent, RequestAccountComponent, ForgottenPasswordComponent, ChangePasswordComponent, NotLoggedInWrapperComponent, PatientRegisterByInviteComponent, DentistRequestAccountComponent];\r\n","<div class=\"main-content\" [attr.data-lang]=\"translate.currentLang\" [attr.hybrid]=\"hybrid ? 'true' : null\">\r\n    <router-outlet></router-outlet>\r\n</div>","import {Component, OnInit} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\nimport { environment } from '../environments/environment';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\n\nexport class AppComponent implements OnInit {\n    hybrid = environment.hybrid;\n\n    constructor(public translate: TranslateService) {\n\n    }\n\n    ngOnInit() {\n\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule, HttpClient} from '@angular/common/http';\nimport {AppRoutingModule, routingComponents} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport { AccountSidebarComponent } from './partials/account-sidebar/account-sidebar.component';\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        routingComponents,\n        AccountSidebarComponent\n    ],\n    imports: [\n        BrowserModule.withServerTransition({ appId: 'serverApp' }),\n        AppRoutingModule,\n        ReactiveFormsModule,\n        HttpClientModule,\n\n        // ngx-translate and the loader module\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: HttpLoaderFactory,\n                deps: [HttpClient]\n            }\n        })\n    ],\n    providers: [],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n\n// required for AOT compilation\nexport function HttpLoaderFactory(http: HttpClient) {\n    return new TranslateHttpLoader(http, 'assets/languages/');\n}","import { NgModule } from '@angular/core';\nimport { ServerModule } from '@angular/platform-server';\n\nimport { AppModule } from './app.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  imports: [\n    AppModule,\n    ServerModule,\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppServerModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ActivatedRoute, Params, Router} from \"@angular/router\";\nimport {AuthenticationServiceService} from \"../_services/authentication-service.service\";\nimport {RedirectsService} from \"../_services/redirects.service\";\nimport {HttpClient, HttpHeaders, HttpParams} from \"../../../node_modules/@angular/common/http\";\nimport {AdditionalService} from \"../_services/additional.service\";\nimport {TranslateService} from \"@ngx-translate/core\";\nimport {LanguageService} from \"../_services/language.service\";\n\n@Component({\n    selector: 'app-change-password',\n    templateUrl: './change-password.component.html'\n})\nexport class ChangePasswordComponent implements OnInit {\n    changePasswordForm: FormGroup;\n    changePasswordFormSubmitted = false;\n    differentPasswords = false;\n    failedChangePassword = false;\n\n    constructor(public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public http: HttpClient, public activatedRoute: ActivatedRoute, public redirectsService: RedirectsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.changePasswordForm = this.formBuilder.group({\n                password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ])),\n                repeat_password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ]))\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get change_password_form_data() {\n        return this.changePasswordForm.controls;\n    }\n\n    // dentist trying to log in\n    onchangePasswordFormSubmit() {\n        this.differentPasswords = false;\n        this.changePasswordFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.changePasswordForm.invalid) {\n            return;\n        }\n\n        if (this.change_password_form_data.password.value.trim() !== this.change_password_form_data.repeat_password.value.trim()) {\n            this.differentPasswords = true;\n            return;\n        }\n\n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n\n        this.activatedRoute.params.subscribe( (params: Params) => {\n            this.additionalService.showLoader();\n            const body = new HttpParams().set('recoverToken', '123').set('password', this.change_password_form_data.password.value.trim());\n            this.http.post('https://dcn-hub-app-api.dentacoin.com/patient/change-password', body.toString(), ParseHeaders).subscribe({\n                next: (response: any) => {\n                    this.additionalService.hideLoader();\n                    if (response.success) {\n                        this.redirectsService.redirectToPatientLogin('change-password');\n                    } else if (response.errors) {\n                        this.failedChangePassword = true;\n                    }\n                },\n                error: error => this.authenticationServiceService.logout('patient')\n            });\n        });\n    }\n}\n","<div class=\"row padding-top-50 dentist-request-account\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-36 lato-bold padding-top-10\">{{'dentist-request-account-title' | translate}}</h1>\n        <h2 class=\"fs-20 lato-light padding-bottom-30\">{{'dentist-request-account-subtitle' | translate}}</h2>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n        <form [formGroup]=\"dentistRequestAccountForm\" (ngSubmit)=\"onAccountRequestFormSubmit()\">\n            <div class=\"success-handle margin-bottom-20\" *ngIf=\"sendRequestSucceed\">{{'request-account-thank-you' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20\" *ngIf=\"sendRequestFailed\">{{'request-account-saving-failed' | translate}}</div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-name\" class=\"platform-color\">{{'fullName-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-name\" formControlName=\"fullName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.fullName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.fullName.errors.required\">{{'fullName-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.fullName.hasError('maxlength')\">{{'fullName-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-email\" class=\"platform-color\">{{'email-label' | translate}}</label>\n                    <input maxlength=\"100\" type=\"text\" id=\"request-account-email\" formControlName=\"email\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.email.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.email.errors.required\">{{'email-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.email.errors.email\">{{'valid-email' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-practice\" class=\"platform-color\">{{'practice-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-practice\" formControlName=\"practice\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.practice.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.practice.errors.required\">{{'practice-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.practice.hasError('maxlength')\">{{'practice-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-website\" class=\"platform-color\">{{'website-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"500\" id=\"request-account-website\" formControlName=\"website\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"dentistRequestAccountFormSubmitted && dentist_request_form_data.website.errors\">\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.website.errors.required\">{{'website-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"dentist_request_form_data.website.hasError('maxlength')\">{{'website-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"patient-register-checkboxes padding-top-15 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"privacy-policy-registration-patient\" formControlName=\"privacyPolicy\"/>\n                    <label class=\"fs-15 custom-checkbox-label\" for=\"privacy-policy-registration-patient\">{{'i-agree' | translate}} <a href='https://dentacoin.com/privacy-policy' class='in-app-browser-link platform-color lato-bold' target='_blank'>{{'privacy-policy' | translate}}</a>.</label>\n                </div>\n                <div class=\"error-handle\" *ngIf=\"isDentistPrivacyAccepted.invalid\">{{'privacy-policy-agree' | translate}}</div>\n            </div>\n            <div class=\"padding-top-30 text-center\">\n                <button class=\"module lato-bold platform-custom-button platform-background-color platform-border-color hover\">{{'request-account-button' | translate}}</button>\n            </div>\n            <div class=\"links-below-form margin-0-auto padding-top-20 margin-top-50 padding-bottom-10 text-center fs-16 platform-color\">\n                <a [routerLink]=\"['/'+translate.currentLang]\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'go-back' | translate}}</a>\n            </div>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n  selector: 'app-dentist-request-account',\n  templateUrl: './dentist-request-account.component.html'\n})\nexport class DentistRequestAccountComponent implements OnInit {\n    dentistRequestAccountForm: FormGroup;\n    dentistRequestAccountFormSubmitted = false;\n    sendRequestSucceed = false;\n    sendRequestFailed = false;\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public requestsService: RequestsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.dentistRequestAccountForm = this.formBuilder.group({\n                fullName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(100)\n                ])),\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ])),\n                practice: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(200)\n                ])),\n                website: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(500)\n                ])),\n                privacyPolicy: new FormControl('', Validators.requiredTrue)\n            });\n        }\n    }\n\n    get isDentistPrivacyAccepted() {\n        return this.dentistRequestAccountForm.get('privacyPolicy');\n    }\n\n    // convenience getter for easy access to form fields\n    get dentist_request_form_data() { return this.dentistRequestAccountForm.controls; }\n\n    // on request form account submit\n    onAccountRequestFormSubmit() {\n        this.additionalService.showLoader();\n        this.dentistRequestAccountFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.dentistRequestAccountForm.invalid) {\n            this.additionalService.hideLoader();\n            return;\n        }\n\n        let paramsMap = new Map<any,any>();\n        paramsMap.set('fullName', this.dentist_request_form_data.fullName.value);\n        paramsMap.set('email', this.dentist_request_form_data.email.value);\n        paramsMap.set('practice', this.dentist_request_form_data.practice.value);\n        paramsMap.set('website', this.dentist_request_form_data.website.value);\n\n        let params = new HttpParams();\n        paramsMap.forEach((value: any, key: any) => {\n            params = params.set(key, value);\n        });\n\n        this.requestsService.dentistSendRequestAccountMail(params.toString()).subscribe((response: any) => {\n            if (response.success) {\n                this.dentistRequestAccountForm.reset();\n\n                Object.keys(this.dentistRequestAccountForm.controls).forEach(key => {\n                    this.dentistRequestAccountForm.get(key).setErrors(null) ;\n                });\n\n                this.sendRequestSucceed = true;\n                this.sendRequestFailed = false;\n                this.additionalService.hideLoader();\n            } else {\n                this.sendRequestFailed = true;\n                this.sendRequestSucceed = false;\n                this.additionalService.hideLoader();\n            }\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpParams} from '../../../node_modules/@angular/common/http';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {AdditionalService} from '../_services/additional.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-account',\r\n  templateUrl: './edit-account.component.html'\r\n})\r\n\r\nexport class EditAccountComponent implements OnInit {\r\n    patientsEditAccountForm: FormGroup;\r\n    patientsEditAccountFormSubmitted = false;\r\n    public showCountries: boolean = false;\r\n    countriesList = {};\r\n    public showTitles: boolean = false;\r\n    titlesList = {};\r\n    patientData = {};\r\n    patientName: string;\r\n    patientEncryptedPassword: string;\r\n    public editAccountSuccess: boolean = false;\r\n    public editAccountFailed: boolean = false;\r\n    public editPasswordFailed: boolean = false;\r\n    public passwordsNotMatching: boolean = false;\r\n    public updateCoreDBData: boolean = false;\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public formBuilder: FormBuilder, public requestsService: RequestsService, public additionalService: AdditionalService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        } else {\r\n            this.additionalService.showLoader();\r\n\r\n            this.patientsEditAccountForm = this.formBuilder.group({\r\n                title: new FormControl('', Validators.compose([\r\n                    Validators.required\r\n                ])),\r\n                firstName: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.maxLength(100)\r\n                ])),\r\n                lastName: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.maxLength(100)\r\n                ])),\r\n                phone: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.maxLength(20)\r\n                ])),\r\n                country: new FormControl('', Validators.compose([\r\n                    Validators.required\r\n                ])),\r\n                password: new FormControl('', Validators.compose([\r\n                    Validators.minLength(6), Validators.maxLength(20)\r\n                ])),\r\n                repeatPassword: new FormControl('', Validators.compose([\r\n                    Validators.minLength(6), Validators.maxLength(20)\r\n                ]))\r\n            });\r\n\r\n            this.requestsService.getCountries().subscribe((response: any) => {\r\n                if (response.success && response.data) {\r\n                    this.countriesList = response.data;\r\n                    this.showCountries = true;\r\n                }\r\n            });\r\n\r\n            this.requestsService.getTitles().subscribe({\r\n                next: (response:any) => {\r\n                    if (response.success && response.data) {\r\n                        this.titlesList = response.data.titles;\r\n                        this.showTitles = true;\r\n                    }\r\n                },\r\n                error: error => this.authenticationServiceService.logout('patient')\r\n            });\r\n\r\n            this.requestsService.getUserData(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n                next: (response:any) => {\r\n                    this.additionalService.hideLoader();\r\n                    if (response.success && response.data) {\r\n                        this.patientData = response.data;\r\n                        this.patientName = response.data.first_name + ' ' + response.data.last_name;\r\n                        this.patientEncryptedPassword = response.data.password;\r\n                        if (response.data.title !== '' && response.data.title !== null) {\r\n                            this.patientsEditAccountForm.controls['title'].setValue(response.data.title);\r\n                        }\r\n                        if (response.data.first_name !== '' && response.data.first_name !== null) {\r\n                            this.patientsEditAccountForm.controls['firstName'].setValue(response.data.first_name);\r\n                        }\r\n                        if (response.data.last_name !== '' && response.data.last_name !== null) {\r\n                            this.patientsEditAccountForm.controls['lastName'].setValue(response.data.last_name);\r\n                        }\r\n                        if (response.data.phone !== '' && response.data.phone !== null) {\r\n                            this.patientsEditAccountForm.controls['phone'].setValue(response.data.phone);\r\n                        }\r\n                        if (response.data.country !== '' && response.data.country !== null) {\r\n                            this.patientsEditAccountForm.controls['country'].setValue(response.data.country);\r\n                        }\r\n                    }\r\n                },\r\n                error: error => this.authenticationServiceService.logout('patient')\r\n            });\r\n        }\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get patients_edit_account_form_data() { return this.patientsEditAccountForm.controls; }\r\n\r\n    // patient trying to log in\r\n    onPatientsEditAccountFormSubmit() {\r\n        this.additionalService.showLoader();\r\n\r\n        this.patientsEditAccountFormSubmitted = true;\r\n        let paramsMap = new Map<any,any>();\r\n        paramsMap.set('title', this.patients_edit_account_form_data.title.value);\r\n        paramsMap.set('first_name', this.patients_edit_account_form_data.firstName.value);\r\n        paramsMap.set('last_name', this.patients_edit_account_form_data.lastName.value);\r\n        paramsMap.set('phone', this.patients_edit_account_form_data.phone.value);\r\n        paramsMap.set('country', this.patients_edit_account_form_data.country.value);\r\n\r\n        let coreDBparamsMap = new Map<any,any>();\r\n\r\n        if (this.patients_edit_account_form_data.password.value.trim() !== '' || this.patients_edit_account_form_data.repeatPassword.value.trim() !== '') {\r\n            if (this.patients_edit_account_form_data.password.value.trim() !== this.patients_edit_account_form_data.repeatPassword.value.trim()) {\r\n                this.passwordsNotMatching = true;\r\n            } else {\r\n                this.passwordsNotMatching = false;\r\n                this.updateCoreDBData = true;\r\n                paramsMap.set('password', this.patients_edit_account_form_data.password.value.trim());\r\n                coreDBparamsMap.set('password', this.patients_edit_account_form_data.password.value.trim());\r\n                coreDBparamsMap.set('repeat-password', this.patients_edit_account_form_data.repeatPassword.value.trim());\r\n            }\r\n        }\r\n\r\n        if (this.patients_edit_account_form_data.firstName.value.trim() !== '' || this.patients_edit_account_form_data.lastName.value.trim() !== '') {\r\n            this.updateCoreDBData = true;\r\n            coreDBparamsMap.set('name', this.patients_edit_account_form_data.firstName.value.trim() + ' ' + this.patients_edit_account_form_data.lastName.value.trim());\r\n        }\r\n\r\n        // stop here if form is invalid\r\n        if (this.patientsEditAccountForm.invalid || this.passwordsNotMatching) {\r\n            window.scrollTo(0, 0);\r\n            this.additionalService.hideLoader();\r\n            return;\r\n        }\r\n\r\n        let params = new HttpParams();\r\n        paramsMap.forEach((value: any, key: any) => {\r\n            params = params.set(key, value);\r\n        });\r\n\r\n        let coreDBparams = new HttpParams();\r\n        coreDBparamsMap.forEach((value: any, key: any) => {\r\n            coreDBparams = coreDBparams.set(key, value);\r\n        });\r\n\r\n        this.requestsService.editProfile(coreDBparams.toString(), JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n            next: (response: any) => {\r\n                if (response.success) {\r\n                    this.additionalService.hideLoader();\r\n                    this.patientsEditAccountForm.controls['password'].setValue('');\r\n                    this.patientsEditAccountForm.controls['repeatPassword'].setValue('');\r\n                    this.editAccountSuccess = true;\r\n                    window.scrollTo(0, 0);\r\n                } else {\r\n                    this.additionalService.hideLoader();\r\n                    this.patientsEditAccountForm.controls['password'].setValue('');\r\n                    this.patientsEditAccountForm.controls['repeatPassword'].setValue('');\r\n                    this.editPasswordFailed = true;\r\n                    window.scrollTo(0, 0);\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-forgotten-password',\n    templateUrl: './forgotten-password.component.html'\n})\nexport class ForgottenPasswordComponent implements OnInit {\n    forgottenPasswordForm: FormGroup;\n    forgottenPasswordFormSubmitted = false;\n    sendFormSucceed = false;\n    sendFormFailed = false;\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public requestsService: RequestsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.forgottenPasswordForm = this.formBuilder.group({\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ]))\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get forgotten_password_form_data() {\n        return this.forgottenPasswordForm.controls;\n    }\n\n    // on request form account submit\n    onForgottenPasswordFormSubmit() {\n        this.additionalService.showLoader();\n        this.forgottenPasswordFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.forgottenPasswordForm.invalid) {\n            this.additionalService.hideLoader();\n            return;\n        }\n\n        let paramsMap = new Map<any, any>();\n        paramsMap.set('email', this.forgotten_password_form_data.email.value);\n        paramsMap.set('type_language', this.translate.currentLang);\n\n        let params = new HttpParams();\n        paramsMap.forEach((value: any, key: any) => {\n            params = params.set(key, value);\n        });\n\n        this.requestsService.requestForgottenPasswordToken(params.toString()).subscribe((response: any) => {\n            if (response.success) {\n                this.forgottenPasswordForm.reset();\n\n                Object.keys(this.forgottenPasswordForm.controls).forEach(key => {\n                    this.forgottenPasswordForm.get(key).setErrors(null);\n                });\n\n                this.sendFormSucceed = true;\n                this.sendFormFailed = false;\n                this.additionalService.hideLoader();\n            } else {\n                this.sendFormFailed = true;\n                this.sendFormSucceed = false;\n                this.additionalService.hideLoader();\n            }\n        });\n    }\n\n}\n","<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Router} from '@angular/router';\nimport {environment} from './../../environments/environment.prod';\nimport {RedirectsService} from '../_services/redirects.service';\n\n@Component({\n    selector: 'app-front-end-language',\n    template: '<router-outlet></router-outlet>'\n})\nexport class FrontEndLanguageComponent implements OnInit {\n    channelArray: Array<string> = ['de', 'en'];\n\n    constructor(public activatedRoute: ActivatedRoute, public translate: TranslateService, public router: Router, public redirectsService: RedirectsService) {\n    }\n\n    ngOnInit() {\n        this.activatedRoute.params.subscribe( (params : Params) => {\n            if(this.channelArray.indexOf(params['lang']) > -1) {\n                this.translate.use(params['lang']);\n            } else if(params['lang'] === 'admin') {\n                this.translate.use(environment.default_language);\n                this.redirectsService.redirectToAdmin();\n            } else {\n                this.translate.use(environment.default_language);\n                if(params.hasOwnProperty('lang')) {\n                    this.router.navigateByUrl(this.router.url.replace('/' + params['lang'], '/' + environment.default_language));\n                } else {\n                    this.router.navigateByUrl(environment.default_language);\n                }\n            }\n        });\n    }\n\n}","<div class=\"container homepage-container\">\r\n    <div class=\"row\">\r\n        <div class=\"{{pageColumnClass}}\">\r\n            <h1 class=\"platform-text-color fs-30 fs-xs-22 calibri-bold text-center title-label padding-top-40 padding-top-xs-20 padding-bottom-30\" *ngIf=\"(translate.currentLang == 'en')\" [innerHTML]=\"hubTitleEn\"></h1>\r\n            <h1 class=\"platform-text-color fs-30 fs-xs-22 calibri-bold text-center title-label padding-top-40 padding-top-xs-20 padding-bottom-30\" *ngIf=\"(translate.currentLang == 'de')\" [innerHTML]=\"hubTitleDe\">}</h1>\r\n            <div class=\"row fs-0 apps-list\">\r\n                <ng-container *ngFor=\"let application of applications; index as i;\">\r\n                    <div class=\"{{applicationsColumnClass}} text-center padding-bottom-20 padding-left-20 padding-right-20 padding-left-xs-10 padding-right-xs-10 inline-block-top single-app\" data-id=\"{{application.id}}\"  *ngIf=\"(translate.currentLang == 'en' && (application.name_en != '' || application.description_en != ''))\">\r\n                        <a href=\"{{application.url}}\" [attr.data-phone]=\"application.type == 'phone' ? 'true' : null\" target=\"_blank\" class=\"platform-text-color in-app-browser-link\">\r\n                            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                                <img alt=\"\" class=\"width-100 app-media\" itemprop=\"contentUrl\" src=\"{{application.media}}\"/>\r\n                            </figure>\r\n                            <h2 class=\"platform-text-color fs-18 fs-xs-15 padding-top-10 calibri-bold app-name\">{{application.name_en}}</h2>\r\n                            <p class=\"platform-text-color fs-16 fs-xs-14 line-height-16 app-description\">{{application.description_en}}</p>\r\n                        </a>\r\n                    </div>\r\n                    <div class=\"{{applicationsColumnClass}} text-center padding-bottom-20 padding-left-20 padding-right-20 padding-left-xs-10 padding-right-xs-10 inline-block-top single-app\" data-id=\"{{application.id}}\"  *ngIf=\"(translate.currentLang == 'de' && (application.name_de != '' || application.description_de != ''))\">\r\n                        <a href=\"{{application.url}}\" [attr.data-phone]=\"application.type == 'phone' ? 'true' : null\" target=\"_blank\" class=\"platform-text-color in-app-browser-link\">\r\n                            <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                                <img alt=\"\" class=\"width-100 app-media\" itemprop=\"contentUrl\" src=\"{{application.media}}\"/>\r\n                            </figure>\r\n                            <h2 class=\"platform-text-color fs-18 fs-xs-15 padding-top-10 calibri-bold app-name\">{{application.name_de}}</h2>\r\n                            <p class=\"platform-text-color fs-16 fs-xs-14 line-height-16 app-description\">{{application.description_de}}</p>\r\n                        </a>\r\n                    </div>\r\n                </ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {TranslateService} from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html'\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    public applications = [];\r\n    public pageColumnClass: string = 'col-xs-12 col-md-8 col-md-offset-2 col-lg-6 col-lg-offset-3';\r\n    public applicationsColumnClass: string = 'col-xs-4';\r\n    public hubTitleEn: string;\r\n    public hubTitleDe: string;\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService, public translate: TranslateService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            console.log('===== 1 =====');\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        } else {\r\n            console.log('===== 2 =====');\r\n            this.requestsService.getDentistData(JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).subscribe((response: any) => {\r\n                console.log('getDentistData');\r\n                this.hubTitleEn = response.data.hub_title_en;\r\n                this.hubTitleDe = response.data.hub_title_de;\r\n                this.applications = Object.keys(response.data.applications).map(i => response.data.applications[i]);\r\n\r\n                if (this.applications.length >= 7) {\r\n                    this.pageColumnClass = 'col-xs-12 col-md-8 col-md-offset-2';\r\n                    this.applicationsColumnClass = 'col-xs-4 col-sm-3';\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport interface DentistDataObject {\r\n    hubTitleEn: string;\r\n    hubTitleDe: string;\r\n}","<div class=\"logged-mobile-profile-menu\">\r\n    <nav class=\"profile-menu module\">\r\n        <a href=\"javascript:void(0)\" class=\"close-logged-mobile-profile-menu\"><i class=\"fa fa-times\" aria-hidden=\"true\"></i></a>\r\n        <ul itemscope=\"\" itemtype=\"http://schema.org/SiteNavigationElement\">\r\n            <!--<li>\r\n                <a (click)=\"this.redirectsService.redirectToLoggedHome()\" itemprop=\"url\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Home icon\" src=\"assets/images/home.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'home-btn' | translate}}</span>\r\n                </a>\r\n            </li>-->\r\n            <li>\r\n                <a href=\"{{myAccountLink}}\" target=\"_blank\" itemprop=\"url\" class=\"in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Wallet icon\" src=\"assets/images/wallet-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'my-wallet-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href=\"{{myAccountLink}}&route=edit-account\" target=\"_blank\" itemprop=\"url\" class=\"in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Edit account icon\" src=\"assets/images/edit-account-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'edit-account-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a href=\"{{myAccountLink}}&route=manage-privacy\" target=\"_blank\" itemprop=\"url\" class=\"in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Privacy icon\" src=\"assets/images/privacy-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'manage-privacy-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li>\r\n                <a (click)=\"this.authenticationServiceService.logout('patient')\" itemprop=\"url\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"inline-block\">\r\n                        <img alt=\"Logout icon\" src=\"assets/images/logout-icon.svg\"/>\r\n                    </figure>\r\n                    <span itemprop=\"name\">{{'log-out-btn' | translate}}</span>\r\n                </a>\r\n            </li>\r\n            <li class=\"lang-switcher\">\r\n                <div class=\"border-top\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"fix-selects-for-ios\">\r\n                        <option value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>\r\n            </li>\r\n        </ul>\r\n    </nav>\r\n</div>\r\n<header>\r\n    <div class=\"container\">\r\n        <div class=\"row fs-0\">\r\n            <figure itemscope=\"\" itemtype=\"http://schema.org/Organization\" class=\"col-xs-5 inline-block padding-left-xs-10 padding-right-xs-10\">\r\n                <a itemprop=\"url\" routerLink=\"/\">\r\n                    <img src=\"{{dentistData.logo}}\" itemprop=\"logo\" class=\"dentist-logo-img\" alt=\"Dentaprime logo\"/>\r\n                </a>\r\n            </figure>\r\n            <div class=\"col-xs-7 logged-user-right-nav inline-block text-right padding-left-xs-10 padding-right-xs-10\">\r\n                <!--<div class=\"hidden-box-parent\">\r\n                    <div class=\"\" [ngClass]=\"(this.isAccountPage() === false) ? 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 color-white-on-hub platform-text-color' : 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 color-white-on-hub'\">\r\n                        <span class=\"user-name\">{{patientData.first_name}} {{patientData.last_name}}</span>\r\n                        <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\r\n                    </div>\r\n                    <span [ngClass]=\"(showApplications === true) ? 'up-arrow platform-background' : 'up-arrow background-white'\"></span>\r\n                    <div class=\"hidden-box\">\r\n                        <div class=\"hidden-box-hub container-fluid platform-background\" *ngIf=\"(showApplications === true)\">\r\n                            <div class=\"row close-btn\">\r\n                                <div class=\"col-xs-12\"><a href=\"javascript:void(0)\">Close <span><i class=\"fa fa-times fs-24\" aria-hidden=\"true\"></i></span></a></div>\r\n                            </div>\r\n                            <div class=\"row\">\r\n                                <ng-container *ngFor=\"let application of applications; index as i;\">\r\n                                    <a class=\"col-md-3 col-xs-4 application inline-block-top\" target=\"_blank\" href=\"{{application.url}}\" *ngIf=\"(translate.currentLang == 'en' && (application.name_en != '' || application.description_en != ''))\">\r\n                                        <figure class=\"text-center\" itemtype=\"http://schema.org/ImageObject\">\r\n                                            <img src=\"{{application.media}}\" itemprop=\"contentUrl\" alt=\"\"/>\r\n                                            <figcaption class=\"color-white fs-14 fs-xs-20 padding-bottom-15 platform-text-color\">{{application.name_en}}</figcaption>\r\n                                        </figure>\r\n                                    </a>\r\n                                    <a class=\"col-md-3 col-xs-4 application inline-block-top\" target=\"_blank\" href=\"{{application.url}}\" *ngIf=\"(translate.currentLang == 'de' && (application.name_de != '' || application.description_de != ''))\">\r\n                                        <figure class=\"text-center\" itemtype=\"http://schema.org/ImageObject\">\r\n                                            <img src=\"{{application.media}}\" itemprop=\"contentUrl\" alt=\"\"/>\r\n                                            <figcaption class=\"color-white fs-14 fs-xs-20 padding-bottom-15 platform-text-color\">{{application.name_de}}</figcaption>\r\n                                        </figure>\r\n                                    </a>\r\n                                </ng-container>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"container-fluid text-center hidden-box-footer\">\r\n                            <div class=\"row\">\r\n                                <div class=\"col-xs-6 padding-left-10 padding-right-10 inline-block\">\r\n                                    <a (click)=\"this.authenticationServiceService.logout('patient')\" class=\"logout\"><i class=\"fa fa-power-off\" aria-hidden=\"true\"></i> Log out</a>\r\n                                </div>\r\n                                <div class=\"col-xs-6 padding-left-10 padding-right-10 inline-block\">\r\n                                    <a [routerLink]=\"['my-wallet']\" class=\"fs-16 module platform-custom-button platform-background-color platform-border-color hover padding-left-10 padding-right-10\">My Account</a>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <a href=\"javascript:void(0)\" class=\"hamburger\"><i class=\"fa fa-bars\" aria-hidden=\"true\"></i></a>\r\n                <div [ngClass]=\"(this.isAccountPage() === true) ? 'account-page lang-switcher inline-block' : 'lang-switcher inline-block'\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" [ngClass]=\"(this.isAccountPage() === false) ? 'platform-text-color' : ''\">\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>-->\r\n                <div [ngClass]=\"(this.isAccountPage() === false) ? 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 padding-top-10 padding-bottom-10 platform-text-color' : 'inline-block fs-14 fs-xs-13 padding-right-10 padding-right-xs-5 padding-top-10 padding-bottom-10'\">\r\n                    <span class=\"user-name\">{{patientData.first_name}} {{patientData.last_name}}</span>\r\n                    <div>{{dcnAmount}} DCN | $ {{usdAmount}}</div>\r\n                </div>\r\n                <div class=\"logged-nav inline-block\">\r\n                    <a href=\"javascript:void(0);\"><i class=\"fa fa-bars\" [ngClass]=\"(this.isAccountPage() === false) ? 'color-white-on-hub platform-text-color' : 'color-white-on-hub'\" aria-hidden=\"true\"></i></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"camping-currently-offline\"></div>\r\n</header>\r\n<main>\r\n    <router-outlet></router-outlet>\r\n</main>\r\n<footer class=\"text-center padding-top-40 padding-bottom-10 padding-top-xs-30 padding-top-sm-20\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12\">\r\n                <a href=\"https://dentacoin.com\" target=\"_blank\" class=\"inline-block in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                        <img src=\"assets/images/dentacoin-logo.png\" alt=\"Dentacoin logo\" itemprop=\"contentUrl\"/>\r\n                        <figcaption class=\"fs-14 padding-top-5\">{{'powered-by-dcn' | translate}}</figcaption>\r\n                    </figure>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</footer>\r\n","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {RequestsService} from '../_services/requests.service';\nimport {LanguageService} from '../_services/language.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {Router} from '@angular/router';\nimport { environment } from '../../environments/environment';\n\n@Component({\n    selector: 'app-logged-in-wrapper',\n    templateUrl: './logged-in-wrapper.component.html'\n})\nexport class LoggedInWrapperComponent implements OnInit {\n    public dentistData: DentistDataObject = {\n        logo: ''\n    };\n    public patientData: PatientDataObject = {\n        first_name: '',\n        last_name: ''\n    };\n    /*public applications = [];\n    public showApplications: boolean = false;*/\n    public dcnAmount: number = 0;\n    public usdAmount: number = 0;\n    public updateDcnAndUsdBalanceTimer: any;\n    public myAccountLink: string;\n    hybrid = environment.hybrid;\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService, public languageService: LanguageService, public translate: TranslateService, public router: Router) {\n    }\n\n    ngOnInit() {\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\n            this.redirectsService.redirectToPatientLogin('login');\n        } else {\n            if (this.hybrid === true) {\n                console.log(1, this.hybrid);\n                this.myAccountLink = environment.accountDomain + '/custom-cookie?mobile-app=hubapp&slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_token);\n            } else {\n                console.log(2, this.hybrid);\n                this.myAccountLink = environment.accountDomain + '/custom-cookie?slug=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_id) + '&type=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_type) + '&token=' + encodeURIComponent(JSON.parse(window.localStorage.getItem('currentPatient')).encrypted_token);\n            }\n\n            this.requestsService.getDentistData(JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).subscribe((response: any) => {\n                console.log('logged in wrapper getDentistData');\n                this.dentistData.logo = response.data.logo;\n                /*if(this.router.url.length > 3) {\n                    this.showApplications = true;\n                    this.applications = Object.keys(response.data.applications).map(i => response.data.applications[i]);\n                }*/\n            });\n\n            this.requestsService.getUserData(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\n                next: (response:any) => {\n                    this.patientData.first_name = response.data.first_name;\n                    this.patientData.last_name = response.data.last_name;\n                },\n                error: error => this.authenticationServiceService.logout('patient')\n            });\n\n            this.updateDcnAndUsdBalance();\n\n            if (typeof(this.updateDcnAndUsdBalanceTimer) !== 'undefined') {\n                clearInterval(this.updateDcnAndUsdBalanceTimer);\n                this.updateDcnAndUsdBalanceTimer = undefined;\n            }\n\n            this.updateDcnAndUsdBalanceTimer = setInterval(() => {\n                if (!this.authenticationServiceService.hasPatientStorageSession()) {\n                    clearInterval(this.updateDcnAndUsdBalanceTimer);\n                    this.updateDcnAndUsdBalanceTimer = undefined;\n                } else {\n                    this.updateDcnAndUsdBalance();\n                }\n            }, 5000);\n        }\n    }\n\n    updateDcnAndUsdBalance() {\n        console.log('updateDcnAndUsdBalance');\n        this.requestsService.getDCNBalance(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\n            next: (response:any) => {\n                if (response.success) {\n                    this.dcnAmount = response.data;\n\n                    this.requestsService.getDentacoinDataByExternalProvider('USD').subscribe((coingeckoResponse: any) => {\n                        this.usdAmount = Number(((1 / Number(Number(coingeckoResponse) / 100)) * this.dcnAmount).toFixed(2));\n                    });\n                }\n            },\n            error: error => this.authenticationServiceService.logout('patient')\n        });\n    }\n\n    isAccountPage() {\n        if (this.router.url.indexOf('my-wallet') !== -1 || this.router.url.indexOf('edit-account') !== -1 || this.router.url.indexOf('manage-privacy') !== -1) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n\nexport interface DentistDataObject {\n    logo: string;\n}\n\nexport interface PatientDataObject {\n    first_name: string;\n    last_name: string;\n}","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport { environment } from '../../environments/environment';\r\nimport {HttpParams} from '../../../node_modules/@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-manage-privacy',\r\n  templateUrl: './manage-privacy.component.html'\r\n})\r\nexport class ManagePrivacyComponent implements OnInit {\r\n    accountDataDownloadingFailed: boolean = false;\r\n    accountDeletionFailed: boolean = false;\r\n    downloadingGDPRDataFailed: boolean = false;\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public requestsService: RequestsService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        }\r\n    }\r\n\r\n    deleteAccountMethod() {\r\n        const deleteAccount = confirm('Warning! Are you sure you want to delete your account? Deleting your account is permanent action.');\r\n        if (deleteAccount === true) {\r\n            this.requestsService.deleteProfile(new HttpParams().set('self_deleted', 'true').toString(), JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n                next: (response:any) => {\r\n                    if (response.success && response.data) {\r\n                        this.authenticationServiceService.logout('patient');\r\n                    } else {\r\n                        this.accountDeletionFailed = true;\r\n                    }\r\n                },\r\n                error: error => this.authenticationServiceService.logout('patient')\r\n            });\r\n        }\r\n    }\r\n\r\n    downloadGDPRDataMethod() {\r\n        console.log('downloadGDPRDataMethod');\r\n        this.requestsService.downloadGDPRData(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n            next: (response:any) => {\r\n                if (response.success && response.data) {\r\n                    window.open(response.data, '_system');\r\n                    return false;\r\n                } else {\r\n                    this.downloadingGDPRDataFailed = true;\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {HttpParams} from '../../../node_modules/@angular/common/http';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {AdditionalService} from '../_services/additional.service';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-my-wallet',\r\n  templateUrl: './my-wallet.component.html'\r\n})\r\nexport class MyWalletComponent implements OnInit {\r\n    withdrawForm: FormGroup;\r\n    withdrawFormSubmitted = false;\r\n    dcnAmount: number;\r\n    usdAmount: number;\r\n    currenciesList: {};\r\n    showCurrenciesList: boolean = false;\r\n    showWithdrawHistory: boolean = false;\r\n    withdrawHistory = [];\r\n    withdrawFailed: boolean = false;\r\n    withdrawSucceed: boolean = false;\r\n    errorMessage: string;\r\n    successMessage: string;\r\n    usdVal: number = 0;\r\n    eurVal: number = 0;\r\n    gbpVal: number = 0;\r\n    rubVal: number = 0;\r\n    public addresses = [];\r\n    public currencies = ['USD', 'EUR', 'GBP', 'RUB'];\r\n\r\n    constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public formBuilder: FormBuilder, public requestsService: RequestsService, public additionalService: AdditionalService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\r\n            this.redirectsService.redirectToPatientLogin('login');\r\n        } else {\r\n            this.withdrawForm = this.formBuilder.group({\r\n                address: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.minLength(42), Validators.maxLength(42)\r\n                ])),\r\n                amount: new FormControl('', Validators.compose([\r\n                    Validators.required, Validators.min(10000)\r\n                ]))\r\n            });\r\n\r\n            $('form#withdraw .disabled-amount').on('click', (e) => {\r\n                $(e.currentTarget).hide();\r\n                $('form#withdraw .amount').show().focus();\r\n            });\r\n\r\n            $(document).on('click', '.search-result .search-body ul li a', (e) => {\r\n                this.withdrawForm.controls['address'].setValue($(e.currentTarget).attr('data-value'));\r\n                $('.search-result').hide();\r\n            });\r\n\r\n            this.requestsService.getAddresses(JSON.parse(window.localStorage.getItem('currentPatient')).id).subscribe((response: any) => {\r\n                if (response.success) {\r\n                    if (response.data.length) {\r\n                        this.addresses = Object.keys(response.data).map(i => response.data[i]);\r\n                        if (this.addresses.length) {\r\n                            this.withdrawForm.controls['address'].setValue(this.addresses[0].dcn_address);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.updateDCNBalance();\r\n            this.updateDCNWithdrawHistory();\r\n        }\r\n    }\r\n\r\n    updateDCNBalance() {\r\n        this.requestsService.getDCNBalance(JSON.parse(window.localStorage.getItem('currentPatient')).token).subscribe({\r\n            next: async (response:any) => {\r\n                if (response.success) {\r\n                    this.withdrawForm.controls['amount'].setValue(response.data);\r\n                    this.dcnAmount = response.data;\r\n\r\n                    for (let i = 0, len = this.currencies.length; i < len; i++) {\r\n                        this.requestsService.getDentacoinDataByExternalProvider(this.currencies[i]).subscribe((coingeckoResponse: any) => {\r\n                            if (this.currencies[i] === 'USD') {\r\n                                this.usdVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n\r\n                                this.usdAmount = Number((this.usdVal * this.dcnAmount).toFixed(4));\r\n                            } else if (this.currencies[i] === 'EUR') {\r\n                                this.eurVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n                            } else if (this.currencies[i] === 'GBP') {\r\n                                this.gbpVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n                            } else if (this.currencies[i] === 'RUB') {\r\n                                this.rubVal = 1 / Number(Number(coingeckoResponse) / 100);\r\n                            }\r\n                        });\r\n                    }\r\n\r\n                    let checkingIfRequestsFinished = setInterval(() => {\r\n                        console.log('checkingIfRequestsFinished');\r\n                        if (this.usdVal !== 0 && this.eurVal !== 0 && this.gbpVal !== 0 && this.rubVal !== 0) {\r\n                            clearInterval(checkingIfRequestsFinished);\r\n\r\n                            $(document).ready(function() {\r\n                                $('.my-wallet-container .dropdown-hidden-menu button').on('click', (e) => {\r\n                                    var this_btn = $(e.currentTarget);\r\n                                    $('.my-wallet-container .current-converted-price .amount').html((parseFloat($('.current-dcn-amount').html()) * parseFloat(this_btn.attr('data-multiple-with'))).toFixed(2));\r\n                                    $('.my-wallet-container .current-converted-price .symbol span').html(this_btn.html());\r\n                                });\r\n                            });\r\n                        }\r\n                    }, 500);\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n    \r\n    updateDCNWithdrawHistory() {\r\n        const withdrawHistoryBody = new HttpParams().set('id', JSON.parse(window.localStorage.getItem('currentPatient')).id).set('token', JSON.parse(window.localStorage.getItem('currentPatient')).token);\r\n        this.requestsService.getWithdrawHistory(withdrawHistoryBody.toString()).subscribe({\r\n            next: (withdrawHistoryResponse:any) => {\r\n                if (withdrawHistoryResponse.success) {\r\n                    this.withdrawHistory = Object.keys(withdrawHistoryResponse.data).map(i => withdrawHistoryResponse.data[i]);\r\n                    this.showWithdrawHistory = true;\r\n                }\r\n            },\r\n            error: error => this.authenticationServiceService.logout('patient')\r\n        });\r\n    }\r\n\r\n    // convenience getter for easy access to form fields\r\n    get withdraw_form_data() { return this.withdrawForm.controls; }\r\n\r\n    withdraw(body) {\r\n        this.requestsService.withdraw(body).subscribe((withdrawResponse: any) => {\r\n            this.additionalService.hideLoader();\r\n\r\n            if (withdrawResponse.success) {\r\n                this.updateDCNBalance();\r\n                this.updateDCNWithdrawHistory();\r\n                this.successMessage = withdrawResponse.message;\r\n                this.withdrawSucceed = true;\r\n            } else {\r\n                this.errorMessage = withdrawResponse.error;\r\n                this.withdrawFailed = true;\r\n            }\r\n        });\r\n    }\r\n\r\n    // patient saving his DCN addess in CoreDB\r\n    onWithdrawSubmit() {\r\n        this.additionalService.showLoader();\r\n\r\n        this.withdrawFormSubmitted = true;\r\n\r\n        // stop here if form is invalid\r\n        if (this.withdrawForm.invalid) {\r\n            this.additionalService.hideLoader();\r\n            return;\r\n        }\r\n\r\n\r\n        // if the withdraw to address is the same as the last time withdrawing\r\n        const withdrawBody = new HttpParams().set('amount', this.withdraw_form_data.amount.value).set('address', this.withdraw_form_data.address.value.trim()).set('id', JSON.parse(window.localStorage.getItem('currentPatient')).id).set('token', JSON.parse(window.localStorage.getItem('currentPatient')).token);\r\n\r\n        this.withdraw(withdrawBody.toString());\r\n        return;\r\n    }\r\n}\r\n","<header class=\"padding-top-15 padding-top-xs-25\">\r\n    <div class=\"container\">\r\n        <div class=\"row fs-0\">\r\n            <div class=\"col-xs-6 inline-block\">\r\n                <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                    <a [routerLink]=\"['/'+translate.currentLang+'/login']\" itemprop=\"url\">\r\n                        <img src=\"{{dentistLogo}}\" alt=\"Dentaprime logo\" class=\"dentist-logo-img {{dentistLogoClass}}\"/>\r\n                    </a>\r\n                </figure>\r\n            </div>\r\n            <div class=\"col-xs-6 text-right inline-block\">\r\n                <div class=\"lang-switcher inline-block\">\r\n                    <select (change)=\"this.languageService.onLangSwitcherChange($event.target.value)\" class=\"platform-text-color fix-selects-for-ios\">\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'en')\" selected>EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'en')\">DE</option>\r\n                        <option class=\"color-main\" value=\"en\" *ngIf=\"(translate.currentLang == 'de')\">EN</option>\r\n                        <option class=\"color-main\" value=\"de\" *ngIf=\"(translate.currentLang == 'de')\" selected>DE</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"camping-currently-offline\"></div>\r\n</header>\r\n<main class=\"container\">\r\n    <router-outlet></router-outlet>\r\n</main>\r\n<footer class=\"text-center padding-top-100 padding-top-xs-40 padding-bottom-10\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-xs-12\">\r\n                <a href=\"https://dentacoin.com\" target=\"_blank\" class=\"inline-block in-app-browser-link\">\r\n                    <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\">\r\n                        <img src=\"assets/images/dentacoin-logo.png\" alt=\"Dentacoin logo\" itemprop=\"contentUrl\"/>\r\n                        <figcaption class=\"fs-14 padding-top-5\">{{'powered-by-dcn' | translate}}</figcaption>\r\n                    </figure>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</footer>","import {Component, OnInit} from '@angular/core';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RequestsService} from '../_services/requests.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-not-logged-in-wrapper',\n    templateUrl: './not-logged-in-wrapper.component.html'\n})\n\nexport class NotLoggedInWrapperComponent implements OnInit {\n    dentistLogo = '';\n    dentistLogoClass = '';\n\n    constructor(public authenticationServiceService: AuthenticationServiceService, public requestsService: RequestsService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (!this.authenticationServiceService.hasPatientStorageSession()) {\n            if (window.localStorage.getItem('currentDentist') != null) {\n                this.requestsService.getDentistData(JSON.parse(window.localStorage.getItem('currentPatient')).patient_of).subscribe((response: any) => {\n                    if (response.success) {\n                        this.dentistLogo = response.data.logo;\n                    }\n                });\n            } else {\n                this.dentistLogo = 'assets/images/one-line-logo-black.svg';\n                this.dentistLogoClass = 'max-width-140';\n            }\n        }\n    }\n}\n","<div class=\"row padding-top-50 padding-top-xs-30 patient-login\" [attr.data-cookies-error]=\"'cookies-error' | translate\" [attr.data-years-and-privacy-error]=\"'years-and-privacy-error' | translate\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-20 lato-light padding-top-15 padding-bottom-30\">{{'patients-login-title' | translate}}</h1>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4 login-parent\">\n        <div class=\"max-width-400 margin-0-auto form-login-fields\">\n            <div class=\"error-handle margin-bottom-20 custom-error hide\"></div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed\">{{'general-error' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-missing-email\">{{'patient-login-failed-missing-email' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-not-a-patient-of-any-dentist\">{{'patient-login-failed-not-a-patient-of-any-dentist' | translate}}</div>\n            <div class=\"padding-top-20 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/login'\" class=\"facebook-custom-btn social-login-btn vanilla-js-event calibri-regular fs-20 fs-xs-18 \">Log in with Facebook</a>\n            </div>\n            <div class=\"padding-top-10 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/login'\" class=\"civic-custom-btn social-login-btn type-login vanilla-js-event calibri-regular fs-20 fs-xs-18\">Log in with Civic</a>\n            </div>\n            <div class=\"padding-top-40 padding-bottom-10 text-center fs-16\">\n                <div>{{'no-account-yet' | translate}}</div>\n                <a [routerLink]=\"['/'+translate.currentLang+'/request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'request-account-btn' | translate}}</a>\n                |\n                <a [routerLink]=\"['/'+translate.currentLang+'/dentist-request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'dentist-request-account-btn' | translate}}</a>\n            </div>\n        </div>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\r\nimport {RedirectsService} from '../_services/redirects.service';\r\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\r\nimport {TranslateService} from '@ngx-translate/core';\r\nimport {LanguageService} from '../_services/language.service';\r\nimport { environment } from '../../environments/environment';\r\nimport {RequestsService} from '../_services/requests.service';\r\nimport {AdditionalService} from '../_services/additional.service';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-patient-login-page',\r\n  templateUrl: './patient-login-page.component.html'\r\n})\r\nexport class PatientLoginPageComponent implements OnInit {\r\n    coreDbApiDomain = environment.coreDbApiDomain;\r\n\r\n    constructor(public router: Router, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public translate: TranslateService, public languageService: LanguageService, public requestsService: RequestsService, public additionalService: AdditionalService) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\r\n            // redirect to home if logged in\r\n            this.redirectsService.redirectToLoggedHome();\r\n        } else {\r\n            document.addEventListener('patientAuthSuccessResponse', (e: any) => {\r\n                console.log(e, 'patientAuthSuccessResponse');\r\n\r\n                console.log(e.detail.response_data.data.patient_of, 'e.detail.response_data.data.patient_of');\r\n                if (e.detail.response_data.data.patient_of !== null && e.detail.response_data.data.patient_of !== undefined) {\r\n                    this.requestsService.coreDbLogin(new HttpParams().set('token', e.detail.response_data.token).set('id', e.detail.response_data.data.id).toString()).subscribe({\r\n                        next: (coredbResponse: any) => {\r\n\r\n                            console.log(this.authenticationServiceService.hasPatientStorageSession(), 'this.authenticationServiceService.isPatientLoggedSubject');\r\n                            \r\n                            window.localStorage.setItem('currentPatient', JSON.stringify({\r\n                                token: e.detail.response_data.token,\r\n                                id: e.detail.response_data.data.id,\r\n                                patient_of: e.detail.response_data.data.patient_of,\r\n                                encrypted_id: coredbResponse.encrypted_id,\r\n                                encrypted_token: coredbResponse.encrypted_token,\r\n                                encrypted_type: coredbResponse.encrypted_type\r\n                            }));\r\n\r\n                            window.localStorage.setItem('dentist', String(e.detail.response_data.data.patient_of));\r\n\r\n                            console.log(this.authenticationServiceService.hasPatientStorageSession(), 'this.authenticationServiceService.isPatientLoggedSubject');\r\n                            this.authenticationServiceService.isPatientLoggedSubject.next(true);\r\n                            console.log(this.authenticationServiceService.hasPatientStorageSession(), 'this.authenticationServiceService.isPatientLoggedSubject');\r\n                            this.redirectsService.redirectToLoggedHome();\r\n                            this.additionalService.hideLoader();\r\n                        },\r\n                        error: error => {\r\n                            document.getElementById('patient-login-failed').classList.remove('hide');\r\n                        }\r\n                    });\r\n                } else {\r\n                    document.getElementById('patient-login-failed-not-a-patient-of-any-dentist').classList.remove('hide');\r\n                }\r\n            });\r\n\r\n            document.addEventListener('registeredAccountMissingEmail', (e: any) => {\r\n                // COVER THIS !!!!!!!!!!!!!\r\n                document.getElementById('patient-login-failed-missing-email').classList.remove('hide');\r\n            });\r\n\r\n            document.addEventListener('patientAuthErrorResponse', (e: any) => {\r\n                console.log(e, 'e');\r\n                document.getElementById('custom-error').classList.remove('hide');\r\n                document.getElementById('custom-error').innerHTML = e.detail.response_data.errors.generic;\r\n            });\r\n\r\n            document.addEventListener('noCoreDBApiConnection', (e: any) => {\r\n                document.getElementById('patient-login-failed').classList.remove('hide');\r\n            });\r\n\r\n            document.addEventListener('noExternalLoginProviderConnection', (e: any) => {\r\n                document.getElementById('patient-login-failed').classList.remove('hide');\r\n            });\r\n        }\r\n    }\r\n}\r\n","<div class=\"row padding-top-50 padding-top-xs-30 patient-register-by-invite\" [attr.data-cookies-error]=\"'cookies-error' | translate\" [attr.data-years-and-privacy-error]=\"'years-and-privacy-error' | translate\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-20 lato-light padding-top-15 padding-bottom-30\">{{'patients-register-title' | translate}}</h1>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4 register-parent\">\n        <div class=\"max-width-400 margin-0-auto form-register-fields\">\n            <div class=\"error-handle margin-bottom-20 custom-error hide\"></div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed\">{{'general-error' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-missing-email\">{{'patient-login-failed-missing-email' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20 hide\" id=\"patient-login-failed-not-a-patient-of-any-dentist\">{{'patient-login-failed-not-a-patient-of-any-dentist' | translate}}</div>\n            <div class=\"padding-top-20 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/register'\" [attr.custom-stopper]=\"'true'\" class=\"facebook-custom-btn social-login-btn vanilla-js-event calibri-regular fs-20 fs-xs-18 max-width-400\">Log in with Facebook</a>\n            </div>\n            <div class=\"padding-top-10 text-center\">\n                <a href=\"javascript:void(0)\" [attr.data-platform]=\"'dentacoin'\" [attr.data-url]=\"coreDbApiDomain + '/api/register'\" [attr.custom-stopper]=\"'true'\" class=\"civic-custom-btn social-login-btn type-register vanilla-js-event calibri-regular fs-20 fs-xs-18\">Log in with Civic</a>\n            </div>\n            <div class=\"padding-top-20 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"agree-over-eighteen\"/>\n                    <label class=\"fs-15 custom-checkbox-label\" for=\"agree-over-eighteen\">{{'i-confirm' | translate}}</label>\n                </div>\n            </div>\n            <div class=\"patient-register-checkboxes padding-top-5 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"privacy-policy-registration-patient\"/>\n                    <label class=\"fs-15 custom-checkbox-label\" for=\"privacy-policy-registration-patient\">{{'i-agree' | translate}} <a href='https://dentacoin.com/privacy-policy' class='in-app-browser-link platform-color lato-bold' target='_blank'>{{'privacy-policy' | translate}}</a>.</label>\n                </div>\n            </div>\n            <div class=\"links-below-registration margin-0-auto padding-top-20 margin-top-50 padding-bottom-10 text-center fs-16 platform-color\">\n                <a [routerLink]=\"['/'+translate.currentLang+'/login']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'login-here' | translate}}</a>\n                |\n                <a [routerLink]=\"['/'+translate.currentLang+'/request-account']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'request-account-btn' | translate}}</a>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport {FormControl, Validators} from '@angular/forms';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient} from '../../../node_modules/@angular/common/http';\nimport {TranslateService} from '@ngx-translate/core';\nimport {environment} from '../../environments/environment';\n\n@Component({\n  selector: 'app-patient-register-by-invite',\n  templateUrl: './patient-register-by-invite.component.html'\n})\nexport class PatientRegisterByInviteComponent implements OnInit {\n    coreDbApiDomain = environment.coreDbApiDomain;\n\n  constructor(public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public activatedRoute: ActivatedRoute, public translate: TranslateService) { }\n\n  ngOnInit() {\n      if (this.authenticationServiceService.hasPatientStorageSession()) {\n          // redirect to home if logged in\n          this.redirectsService.redirectToLoggedHome();\n      } else {\n          this.activatedRoute.params.subscribe( (params: Params) => {\n              console.log(params, 'params');\n          });\n      }\n  }\n\n}\n","<div class=\"row padding-top-50 patient-request-account\">\n    <div class=\"col-xs-12 text-center\">\n        <figure itemscope=\"\" itemtype=\"http://schema.org/ImageObject\" class=\"max-width-150 margin-0-auto\">\n            <img alt=\"Hub icon\" class=\"width-100\" src=\"assets/images/hub-icon-white.png\"/>\n        </figure>\n        <h1 class=\"fs-36 lato-bold padding-top-10\">{{'request-account-title' | translate}}</h1>\n        <h2 class=\"fs-20 lato-light padding-bottom-30\">{{'request-account-subtitle' | translate}}</h2>\n    </div>\n    <div class=\"col-xs-12 col-sm-8 col-sm-offset-2 col-md-6 col-md-offset-3 col-lg-4 col-lg-offset-4\">\n        <form [formGroup]=\"requestAccountForm\" (ngSubmit)=\"onAccountRequestFormSubmit()\">\n            <div class=\"success-handle margin-bottom-20\" *ngIf=\"sendRequestSucceed\">{{'request-account-thank-you' | translate}}</div>\n            <div class=\"error-handle margin-bottom-20\" *ngIf=\"sendRequestFailed\">{{'request-account-saving-failed' | translate}}</div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-firstName\" class=\"platform-color\">{{'fname-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-firstName\" formControlName=\"firstName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.firstName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.firstName.errors.required\">{{'fname-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.firstName.hasError('maxlength')\">{{'fname-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-lastName\" class=\"platform-color\">{{'lname-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"100\" id=\"request-account-lastName\" formControlName=\"lastName\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.lastName.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.lastName.errors.required\">{{'lname-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.lastName.hasError('maxlength')\">{{'lname-max-length' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-email\" class=\"platform-color\">{{'email-label' | translate}}</label>\n                    <input maxlength=\"100\" type=\"text\" id=\"request-account-email\" formControlName=\"email\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.email.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.email.errors.required\">{{'email-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.email.errors.email\">{{'valid-email' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"padding-top-10\">\n                <div class=\"custom-google-label-style module\" data-input-colorful-border=\"true\">\n                    <label for=\"request-account-phone\" class=\"platform-color\">{{'phone-label' | translate}}</label>\n                    <input type=\"text\" maxlength=\"20\" id=\"request-account-phone\" formControlName=\"phone\" class=\"full-rounded form-field platform-border-color\"/>\n                </div>\n                <div *ngIf=\"requestAccountFormSubmitted && request_form_data.phone.errors\">\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.phone.errors.required\">{{'phone-required' | translate}}</div>\n                    <div class=\"error-handle\" *ngIf=\"request_form_data.phone.hasError('maxlength')\">{{'phone-max-length-validation' | translate}}</div>\n                </div>\n            </div>\n            <div class=\"patient-register-checkboxes padding-top-15 margin-0-auto\">\n                <div class=\"custom-checkbox-style module\">\n                    <input type=\"checkbox\" class=\"custom-checkbox-input\" id=\"privacy-policy-registration-patient\" formControlName=\"privacyPolicy\"/>\n                    <label class=\"fs-15 custom-checkbox-label\" for=\"privacy-policy-registration-patient\">{{'i-agree' | translate}} <a href='https://dentacoin.com/privacy-policy' class='in-app-browser-link platform-color lato-bold' target='_blank'>{{'privacy-policy' | translate}}</a>.</label>\n                </div>\n                <div class=\"error-handle\" *ngIf=\"isPatientPrivacyAccepted.invalid\">{{'privacy-policy-agree' | translate}}</div>\n            </div>\n            <div class=\"padding-top-30 text-center\">\n                <button class=\"module lato-bold platform-custom-button platform-background-color platform-border-color hover\">{{'request-account-button' | translate}}</button>\n            </div>\n            <div class=\"links-below-form margin-0-auto padding-top-20 margin-top-50 padding-bottom-10 text-center fs-16 platform-color\">\n                <a [routerLink]=\"['/'+translate.currentLang+'/login']\" itemprop=\"url\" class=\"text-decoration-underline padding-left-5 padding-right-5 fs-18 lato-bold platform-color\">{{'login-here' | translate}}</a>\n            </div>\n        </form>\n    </div>\n</div>","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {HttpClient, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {RequestsService} from '../_services/requests.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-request-account',\n    templateUrl: './request-account.component.html'\n})\nexport class RequestAccountComponent implements OnInit {\n    requestAccountForm: FormGroup;\n    requestAccountFormSubmitted = false;\n    sendRequestSucceed = false;\n    sendRequestFailed = false;\n\n    constructor(public router: Router, public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public redirectsService: RedirectsService, public http: HttpClient, public requestsService: RequestsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.requestAccountForm = this.formBuilder.group({\n                firstName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(100)\n                ])),\n                lastName: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(100)\n                ])),\n                email: new FormControl('', Validators.compose([\n                    Validators.required,\n                    Validators.email\n                ])),\n                phone: new FormControl('', Validators.compose([\n                    Validators.required, Validators.maxLength(20)\n                ])),\n                privacyPolicy: new FormControl('', Validators.requiredTrue)\n            });\n        }\n    }\n\n    get isPatientPrivacyAccepted() {\n        return this.requestAccountForm.get('privacyPolicy');\n    }\n\n    // convenience getter for easy access to form fields\n    get request_form_data() { return this.requestAccountForm.controls; }\n\n    // on request form account submit\n    onAccountRequestFormSubmit() {\n        this.additionalService.showLoader();\n        this.requestAccountFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.requestAccountForm.invalid) {\n            this.additionalService.hideLoader();\n            return;\n        }\n\n        let paramsMap = new Map<any,any>();\n        paramsMap.set('firstName', this.request_form_data.firstName.value);\n        paramsMap.set('lastName', this.request_form_data.lastName.value);\n        paramsMap.set('email', this.request_form_data.email.value);\n        paramsMap.set('phone', this.request_form_data.phone.value);\n        /*paramsMap.set('captcha', this.request_form_data.captcha.value);*/\n\n        let params = new HttpParams();\n        paramsMap.forEach((value: any, key: any) => {\n            params = params.set(key, value);\n        });\n\n        this.requestsService.sendRequestAccountMail(params.toString()).subscribe((response: any) => {\n            if (response.success) {\n                this.requestAccountForm.reset();\n\n                Object.keys(this.requestAccountForm.controls).forEach(key => {\n                    this.requestAccountForm.get(key).setErrors(null) ;\n                });\n\n                this.sendRequestSucceed = true;\n                this.sendRequestFailed = false;\n                this.additionalService.hideLoader();\n            } else {\n                this.sendRequestFailed = true;\n                this.sendRequestSucceed = false;\n                this.additionalService.hideLoader();\n            }\n        });\n    }\n}\n","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthenticationServiceService} from '../_services/authentication-service.service';\nimport {HttpClient, HttpHeaders, HttpParams} from '../../../node_modules/@angular/common/http';\nimport {ActivatedRoute, Params} from '@angular/router';\nimport {RedirectsService} from '../_services/redirects.service';\nimport {AdditionalService} from '../_services/additional.service';\nimport {TranslateService} from '@ngx-translate/core';\nimport {LanguageService} from '../_services/language.service';\n\n@Component({\n    selector: 'app-verify-account',\n    templateUrl: './verify-account.component.html'\n})\nexport class VerifyAccountComponent implements OnInit {\n    verifyAccountForm: FormGroup;\n    verifyAccountFormSubmitted = false;\n    differentPasswords = false;\n    failedVerifiedAccount = false;\n\n    constructor(public formBuilder: FormBuilder, public authenticationServiceService: AuthenticationServiceService, public http: HttpClient, public activatedRoute: ActivatedRoute, public redirectsService: RedirectsService, public additionalService: AdditionalService, public translate: TranslateService, public languageService: LanguageService) {\n    }\n\n    ngOnInit() {\n        if (this.authenticationServiceService.hasPatientStorageSession()) {\n            // redirect to home if logged in\n            this.redirectsService.redirectToLoggedHome();\n\n        } else {\n            this.verifyAccountForm = this.formBuilder.group({\n                password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ])),\n                repeat_password: new FormControl('', Validators.compose([\n                    Validators.required, Validators.minLength(6), Validators.maxLength(20)\n                ]))\n            });\n        }\n    }\n\n    // convenience getter for easy access to form fields\n    get verify_account_form_data() {\n        return this.verifyAccountForm.controls;\n    }\n\n    // dentist trying to log in\n    onVerifyAccountFormSubmit() {\n        this.differentPasswords = false;\n        this.verifyAccountFormSubmitted = true;\n\n        // stop here if form is invalid\n        if (this.verifyAccountForm.invalid) {\n            return;\n        }\n\n        if (this.verify_account_form_data.password.value.trim() !== this.verify_account_form_data.repeat_password.value.trim()) {\n            this.differentPasswords = true;\n            return;\n        }\n\n        const ParseHeaders = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            })\n        };\n\n        this.activatedRoute.params.subscribe( (params: Params) => {\n            this.additionalService.showLoader();\n            const body = new HttpParams().set('password', this.verify_account_form_data.password.value.trim()).set('type_language', this.translate.currentLang);\n            this.http.post('https://dcn-hub-app-api.dentacoin.com/external-api/validate-token/' + params['token'], body.toString(), ParseHeaders).subscribe((response: any) => {\n                this.additionalService.hideLoader();\n                if (response.success) {\n                    this.redirectsService.redirectToPatientLogin('account-verification');\n                } else if (response.errors) {\n                    this.failedVerifiedAccount = true;\n                }\n            });\n        });\n    }\n}\n","export const environment = {\r\n    production: true,\r\n    hybrid: false,\r\n    default_language: 'en',\r\n    coreDbApiDomain: 'https://dev-api.dentacoin.com',\r\n    accountDomain: 'https://dev-account.dentacoin.com'\r\n};\r\n","export const environment = {\r\n    production: true,\r\n    hybrid: false,\r\n    default_language: 'en',\r\n    coreDbApiDomain: 'https://dev-api.dentacoin.com',\r\n    accountDomain: 'https://dev-account.dentacoin.com'\r\n};\r\n","import { enableProdMode } from '@angular/core';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nexport { AppServerModule } from './app/app.server.module';\nexport { renderModule, renderModuleFactory } from '@angular/platform-server';\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ngx-translate/core\");","module.exports = require(\"@ngx-translate/http-loader\");","module.exports = require(\"jquery\");","module.exports = require(\"rxjs\");","module.exports = require(\"rxjs/operators\");","module.exports = require(\"tslib\");"],"sourceRoot":""}